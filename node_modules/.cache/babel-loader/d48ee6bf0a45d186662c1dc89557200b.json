{"ast":null,"code":"import _slicedToArray from\"/home/yamid/Documentos/ReactJS/puntogov/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";// Libreria validación formulario\nimport{Formik,Form,ErrorMessage}from\"formik\";// Libreria complemento para validación y estilos\nimport*as Yup from\"yup\";//import { Link } from \"react-router-dom\";\nimport Footer from\"../../../components/Footer/Footer\";import FooterGov from\"../../../components/FooterGov/FooterGov\";import Header from\"../../../components/Header/Header\";import Navegacion from\"../../../components/Navigation/Navegacion\";import NavProceso from\"../../../components/NavProceso/NavProceso\";import BotonInicio from\"../../../components/Botones/BotonInicio/BotonInicio\";import BotonTutoriales from\"../../../components/Botones/BotonTutoriales/BotonTutoriales\";import BotonDeDudas from\"../../../components/Botones/BotonDeDudas/BotonDeDudas\";import CalificacionExperiencia from\"../../../components/Cards/CalificacionExperiencia/CalificacionExperiencia\";import{useFileUpload}from\"use-file-upload\";import\"./Prueba.css\";// Importar estilos de campos\nimport{PageWrapper,Title,Label,Input,StyledInlineErrorMessage,Submit,CodeWrapper}from\"./styles\";import Modals from\"./Modals\";// Validación para campos\nvar validationSchema=Yup.object().shape({fullname:Yup.string().min(2,\"Your name is too short\").max(5,\"Max 5 letras\").required(\"Please enter your full name\").matches(/^[aA-zZs]+$/,\"solo se aceptan letras\"),email:Yup.string().email(\"The email is incorrect\").required(\"Please enter your email\")});var Prueba=function Prueba(){// Obtener valores de campo\nvar _useState=useState(),_useState2=_slicedToArray(_useState,2),formValues=_useState2[0],setFormValues=_useState2[1];var _useFileUpload=useFileUpload(),_useFileUpload2=_slicedToArray(_useFileUpload,2),file=_useFileUpload2[0],selectFile=_useFileUpload2[1];var handleSubmit=function handleSubmit(e){e.preventDefault();};var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),formularioEnviado=_useState4[0],setFormularioEnviado=_useState4[1];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-8 p-0\"},/*#__PURE__*/React.createElement(Navegacion,{inicio:\"Inicio\",pagina:\"Solicitud de Homologaci\\xF3n\",paginaActual:\"Solicitud de Homologaci\\xF3n de Equipos\"}),/*#__PURE__*/React.createElement(NavProceso,null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Modals,null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){// Single File Upload accepts only images\nselectFile({accept:\"image/*, application/pdf,application/vnd.ms-excel\"},function(_ref){var source=_ref.source,name=_ref.name,size=_ref.size,file=_ref.file;// file - is the raw File Object\nconsole.log({source:source,name:name,size:size,file:file});// Todo: Upload to cloud.\n});}},\"Click to Upload\"),file?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"tabla\"},/*#__PURE__*/React.createElement(\"p\",{className:\"titulo-tabla\"},\"Archivos para Homologaci\\xF3n\"),/*#__PURE__*/React.createElement(\"table\",{className:\"rwd-table\"},/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Nombre del Archivo\"),/*#__PURE__*/React.createElement(\"th\",null,\"Archivo Cargado \"),/*#__PURE__*/React.createElement(\"th\",null,\"Accion\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{\"data-th\":\"etiqueta\"},\"Etiqueta del equipo *\"),/*#__PURE__*/React.createElement(\"td\",{\"data-th\":\"archivo\"},/*#__PURE__*/React.createElement(\"span\",null,\" Name: \",file.name,\" \")),/*#__PURE__*/React.createElement(\"td\",{\"data-tj\":\"accion\"},\"ELIMINAR\")),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{\"data-th\":\"etiqueta\"},\"Certificado de conformidad de normas t\\xE9cnicas (opcional)\"),/*#__PURE__*/React.createElement(\"td\",{\"data-th\":\"archivo\"},\" \",/*#__PURE__*/React.createElement(\"span\",null,\" Size: \",file.size,\" \")),/*#__PURE__*/React.createElement(\"td\",{\"data-tj\":\"accion\"},\"ELIMINAR\"))))):/*#__PURE__*/React.createElement(\"span\",null,\"No file selected\")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Formik,{initialValues:{fullname:\"\",email:\"\"},validationSchema:validationSchema,onSubmit:function onSubmit(values,actions){console.log(values);setFormValues(values);var timeOut=setTimeout(function(){actions.setSubmitting(false);clearTimeout(timeOut);},1000);}},function(_ref2){var values=_ref2.values,errors=_ref2.errors,touched=_ref2.touched,handleSubmit=_ref2.handleSubmit,isSubmitting=_ref2.isSubmitting,isValidating=_ref2.isValidating,isValid=_ref2.isValid;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h3\",{className:\"title-form\"},\"Solicitud de Homologaci\\xF3n de Equipos Terminales M\\xF3viles\"),/*#__PURE__*/React.createElement(\"div\",{className:\"titulo-indicativo\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"subtitle-form\"},\"Datos de identificaci\\xF3n\"),/*#__PURE__*/React.createElement(\"p\",{className:\"txt-obliga\"},\"*Campos obligatorios\")),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6 p-1\"},/*#__PURE__*/React.createElement(Label,{htmlFor:\"fullname\"},\"Fullname\",/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"fullname\",autoCorrect:\"off\",autoComplete:\"name\",placeholder:\"your fullname\",valid:touched.fullname&&!errors.fullname,error:touched.fullname&&errors.fullname})),errors.fullname&&touched.fullname&&/*#__PURE__*/React.createElement(StyledInlineErrorMessage,null,errors.fullname)),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6 p-1\"},/*#__PURE__*/React.createElement(Label,{htmlFor:\"email\"},\"Email\",/*#__PURE__*/React.createElement(Input,{type:\"email\",name:\"email\",autoCapitalize:\"off\",autoCorrect:\"off\",autoComplete:\"email\",placeholder:\"your email\",valid:touched.email&&!errors.email,error:touched.email&&errors.email})),/*#__PURE__*/React.createElement(ErrorMessage,{name:\"email\"},function(msg){return/*#__PURE__*/React.createElement(StyledInlineErrorMessage,null,msg);})),/*#__PURE__*/React.createElement(Submit,{type:\"submit\",disabled:!isValid||isSubmitting},isSubmitting?\"Submiting...\":\"Registrar\"));})),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-1 p-0\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-3 p-0\"},/*#__PURE__*/React.createElement(\"aside\",{className:\"aside\"},/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(BotonTutoriales,null),/*#__PURE__*/React.createElement(BotonDeDudas,null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(CalificacionExperiencia,null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(BotonInicio,null))))),/*#__PURE__*/React.createElement(Footer,null),/*#__PURE__*/React.createElement(FooterGov,null));};export default Prueba;/*\n<h1>Basic</h1>\n\n            *Contenedor Formik del formulario\n            <Formik\n              //Valores Iniciales Formik\n              initialValues={\n                {\n                  nombre: '',\n                  correo: ''\n                }\n              }\n              // Validaciones Formik\n              validate={(valores) => {\n                let errores = {}\n\n                if(!valores.nombre) {\n                  errores.nombre = 'Campo nombre es obligatorio'\n                } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(valores.nombre)) {\n                  errores.nombre = 'El nombre solo puede contener letras y espacios'\n                }\n\n                if(!valores.correo) {\n                  errores.correo = 'Campo correo es obligatorio'\n                } else if (!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(valores.correo)) {\n                  errores.correo = 'No cumple con los parametros para un email@email.co'\n                }\n\n                if(!valores.pais) {\n                  errores.pais = 'Campo pais es obligatorio'\n                } \n\n                return errores\n              }}\n\n              // Envío formulario Formik\n              onSubmit = {(valores, {resetForm}) => {\n                resetForm()\n                console.log('Formulario enviado')\n                setFormularioEnviado(true)\n                setTimeout(() => setFormularioEnviado(false), 3000)\n                //console.log(valores)\n                console.log(valores.pais)\n                \n              }}\n            >\n              \n              Estructura render props (destructuramos): se renderiza este formulario. Al tenerlo en una funcion se puede agregar valores de formik\n              Funcion que va dentro del componente Formik y nos permite inyectar informacion como los errores\n              \n              {({errors}) => ( \n                <Form className=\"formulario\">\n                  console.log(errors)\n                  <div>\n                    <label htmlFor=\"nombre\">Nombre</label>\n                    <Field\n                      type=\"text\"\n                      id=\"nombre\"\n                      name=\"nombre\"\n                      placeholder=\"John Doe\"\n                    />\n                    <ErrorMessage name=\"nombre\" component={() => (\n                        <div className=\"error\">{errors.nombre}</div>\n                      )} \n                    />\n                    \n                  </div>\n                  <div>\n                    <label htmlFor=\"correo\">Correo</label>\n                    <Field\n                      type=\"text\"\n                      id=\"correo\"\n                      name=\"correo\"\n                      placeholder=\"correo@correo.com\"\n                    />\n                    <ErrorMessage name=\"correo\" component={() => (\n                        <div className=\"error\">{errors.correo}</div>\n                      )} \n                    />\n                  </div>\n                  \n                  <div>\n                    <Field name=\"pais\" as=\"select\">\n                      <option value=\"arg\">Argentina</option>\n                      <option value=\"br\">Brasil</option>\n                      <option value=\"col\">Colombia</option>\n                      <option value=\"mx\">Mexico</option>\n                    </Field>\n                  </div>\n                  \n                  <div>\n                    <label>\n                      <Field type=\"radio\" name=\"sexo\" value=\"hombre\" /> Hombre\n                    </label>\n                    <label>\n                      <Field type=\"radio\" name=\"sexo\" value=\"mujer\" /> Mujer\n                    </label>\n                  </div>    \n                 \n                  <div>\n                    <Field name=\"mensaje\" as=\"textarea\" placeholder=\"Mensaje\" />\n                  </div>\n                \n                  <button type=\"submit\">Enviar</button>\n                  {formularioEnviado && <p className=\"exito\">Formulario enviado con exito!</p>}\n                </Form>\n              )}\n              \n              {({values, errors, touched, handleSubmit, handleChange, handleBlur}) => ( //Estructura render props (destructuramos): se renderiza este formulario. Al tenerlo en una funcion se puede agregar valores de formik\n                <form className=\"formulario\" onSubmit={handleSubmit}>\n                  console.log(errors)\n                  <div>\n                    <label htmlFor=\"nombre\">Nombre</label>\n                    <input\n                      type=\"text\"\n                      id=\"nombre\"\n                      name=\"nombre\"\n                      placeholder=\"John Doe\"\n                      value={values.nombre}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {touched.nombre && errors.nombre && <div className=\"error\">{errors.nombre}</div>}\n                  </div>\n                  <div>\n                    <label htmlFor=\"correo\">Correo</label>\n                    <input\n                      type=\"text\"\n                      id=\"correo\"\n                      name=\"correo\"\n                      placeholder=\"correo@correo.com\"\n                      value={values.correo}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {touched.correo && errors.correo && <div className=\"error\">{errors.correo}</div>}\n                  </div>\n                  <button type=\"submit\">Enviar</button>\n                  {formularioEnviado && <p className=\"exito\">Formulario enviado con exito!</p>}\n                </form>\n              )}\n              }\n            </Formik>\n*/ //Estilos campos formularios y validaciones estilos\n/*\nconst colores = {\n  borde: \"#3366CC\",\n  error: \"#A80521\",\n  exito: \"#3366CC\",\n};\n\nconst Formulario = styled.form`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n\n  @media (max-width: 800px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst Label = styled.label`\n  display: block;\n  font: normal 500 16px Work Sans;\n  line-height: 1.5;\n  margin: 0;\n  color: #4B4B4B;\n  padding: padding: 22px 0px 0px 0px;\n  cursor: pointer;\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      color: ${colores.error};\n    `}\n`;\n\nconst GrupoInput = styled.div`\n  position: relative;\n  z-index: 90;\n`;\n\nconst Input = styled.input`\n  gap: 20px;\n  width: 100%;\n  background: #fff;\n  border-radius: 3px;\n  height: 35px;\n  line-height: 35px;\n  padding: 0 40px 0 10px;\n  transition: 0.3s ease all;\n  border: 1px solid #bababa;\n\n  &:focus {\n    border: 1px solid ${colores.borde};\n    outline: none;\n    box-shadow: 3px 0px 30px rgba(163, 163, 163, 0.4);\n  }\n\n  ${(props) =>\n    props.valido === \"true\" &&\n    css`\n      border: 1px solid #bababa;\n    `}\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      border: 1px solid ${colores.error} !important;\n    `}\n`;\n\nconst InputDisabled = styled.input`\n  width: 100%;\n  background: #fff;\n  border-radius: 3px;\n  height: 35px;\n  line-height: 35px;\n  padding: 0 40px 0 10px;\n  transition: 0.3s ease all;\n  border: 1px solid #bababa;\n\n  &:focus {\n    border: 1px solid ${colores.borde};\n    outline: none;\n    box-shadow: 3px 0px 30px rgba(163, 163, 163, 0.4);\n  }\n\n  ${(props) =>\n    props.valido === \"true\" &&\n    css`\n      border: 1px solid #bababa;\n    `}\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      border: 1px solid ${colores.error} !important;\n    `}\n`;\n\nconst LeyendaError = styled.p`\n  display: none;\n  font-size: 12px;\n  margin-bottom: 0;\n  color: ${colores.error};\n  display: none;\n\n  ${(props) =>\n    props.valido === \"true\" &&\n    css`\n      display: none;\n    `}\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      display: block;\n    `}\n`;\n\nconst ContenedorTerminos = styled.div`\n  grid-column: span 2;\n\n  input {\n    margin-right: 10px;\n  }\n\n  @media (max-width: 800px) {\n    grid-column: span1;\n  }\n`;\n\nconst ContenedorBotonCentrado = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  grid-column: span 2;\n\n  @media (max-width: 800px) {\n    grid-column: span1;\n  }\n`;\n\nconst Boton = styled.button`\n  display: flex;\n  background-color: #3366cc;\n  border: 1.5px solid #3366cc;\n  border-radius: 30px;\n  color: #ffff;\n  font: normal bold 15px \"Works Sans\", sans-serif;\n  margin: 0px 0px 100px 0px;\n  padding: 15px 5px 15px 5px;\n  text-transform: uppercase;\n  white-space: pre-line;\n  width: 30%;\n  /*\n  display: flex;\n  height: 40px;\n  line-height: 30px;\n  width: 30%;\n  background: #004884;\n  color: #fff;\n  font: normal 600 16px/1.55px \"Work Sans\", sans-serift;\n  border: none;\n  border-radius: 25px;\n  cursor: pointer;\n  transition: .1s ease all;\n  */ /*\n  a {\n    color: #ffff;\n    font: normal bold 15px/14px \"Works Sans\", sans-serif;\n  }\n\n  &:hover {\n    background-color: #004884;\n    border-color: #004884;\n  }\n`;\n\nconst MensajeExito = styled.p`\n  width: 100%;\n  height: 45%;\n  text-align: center;\n  line-height: 45px;\n  background: #069169;\n  padding: 10px 0px 0px 0px;\n  margin: 12px 0px 0px 0px;\n  border-radius: 3px;\n  grid-column: span 2;\n\n  p {\n    padding: 10px;\n    text-align: center;\n    color: #ffff;\n  }\n  b {\n    margin-left: 10px;\n  }\n`;\n\nconst MensajeError = styled.div`\n  height: 45px;\n  line-height: 45px;\n  background: ${colores.error};\n  padding: 0px 5px;\n  border-radius: 3px;\n  grid-column: span 2;\n  p {\n    padding: 2px 0px 2px 0px;\n    text-align: center;\n    color: #ffff;\n  }\n  b {\n    margin-left: 10px;\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  background: #fff;\n  border-radius: 3px;\n  height: 35px;\n  line-height: 35px;\n  padding: 0 40px 0 10px;\n  transition: 0.3s ease all;\n  border: 1px solid #bababa;\n\n  &:focus {\n    border: 1px solid ${colores.borde};\n    outline: none;\n    box-shadow: 3px 0px 30px rgba(163, 163, 163, 0.4);\n  }\n\n  ${(props) =>\n    props.valido === \"true\" &&\n    css`\n      border: 1px solid #bababa;\n    `}\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      border: 1px solid ${colores.error} !important;\n    `}\n`;\n*/","map":{"version":3,"sources":["/home/yamid/Documentos/ReactJS/puntogov/src/Pages/PRUEBAS/Prueba/Prueba.js"],"names":["React","useState","Formik","Form","ErrorMessage","Yup","Footer","FooterGov","Header","Navegacion","NavProceso","BotonInicio","BotonTutoriales","BotonDeDudas","CalificacionExperiencia","useFileUpload","PageWrapper","Title","Label","Input","StyledInlineErrorMessage","Submit","CodeWrapper","Modals","validationSchema","object","shape","fullname","string","min","max","required","matches","email","Prueba","formValues","setFormValues","file","selectFile","handleSubmit","e","preventDefault","formularioEnviado","setFormularioEnviado","accept","source","name","size","console","log","values","actions","timeOut","setTimeout","setSubmitting","clearTimeout","errors","touched","isSubmitting","isValidating","isValid","msg"],"mappings":"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":["import React, { useState } from \"react\";\n// Libreria validación formulario\nimport { Formik, Form, ErrorMessage } from \"formik\";\n// Libreria complemento para validación y estilos\nimport * as Yup from \"yup\";\n\n//import { Link } from \"react-router-dom\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport FooterGov from \"../../../components/FooterGov/FooterGov\";\nimport Header from \"../../../components/Header/Header\";\nimport Navegacion from \"../../../components/Navigation/Navegacion\";\nimport NavProceso from \"../../../components/NavProceso/NavProceso\";\n\nimport BotonInicio from \"../../../components/Botones/BotonInicio/BotonInicio\";\nimport BotonTutoriales from \"../../../components/Botones/BotonTutoriales/BotonTutoriales\";\nimport BotonDeDudas from \"../../../components/Botones/BotonDeDudas/BotonDeDudas\";\n\nimport CalificacionExperiencia from \"../../../components/Cards/CalificacionExperiencia/CalificacionExperiencia\";\n\nimport { useFileUpload } from \"use-file-upload\";\n\nimport \"./Prueba.css\";\n\n// Importar estilos de campos\nimport {\n  PageWrapper,\n  Title,\n  Label,\n  Input,\n  StyledInlineErrorMessage,\n  Submit,\n  CodeWrapper,\n} from \"./styles\";\n\nimport Modals from \"./Modals\";\n\n// Validación para campos\nconst validationSchema = Yup.object().shape({\n  fullname: Yup.string()\n    .min(2, \"Your name is too short\")\n    .max(5, \"Max 5 letras\")\n    .required(\"Please enter your full name\")\n    .matches(/^[aA-zZs]+$/, \"solo se aceptan letras\"),\n  email: Yup.string()\n    .email(\"The email is incorrect\")\n    .required(\"Please enter your email\"),\n});\n\nconst Prueba = () => {\n  // Obtener valores de campo\n  const [formValues, setFormValues] = useState();\n\n  const [file, selectFile] = useFileUpload();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  const [formularioEnviado, setFormularioEnviado] = useState(false);\n\n  return (\n    <>\n      <div className=\"container\">\n        <Header />\n        <div className=\"row\">\n          <div className=\"col-md-8 p-0\">\n            <Navegacion\n              inicio=\"Inicio\"\n              pagina=\"Solicitud de Homologación\"\n              paginaActual=\"Solicitud de Homologación de Equipos\"\n            />\n\n            <NavProceso />\n            <br />\n            <Modals />\n            <br />\n\n            {/* CARGA BASICA DE ARCHIVOS */}\n            <div>\n              <button\n                onClick={() => {\n                  // Single File Upload accepts only images\n                  selectFile(\n                    { accept: \"image/*, application/pdf,application/vnd.ms-excel\" }, \n                    ({ source, name, size, file }) => {\n                      // file - is the raw File Object\n                      console.log({ source, name, size, file });\n                      // Todo: Upload to cloud.\n                    }\n                  );\n                }}\n              >\n                Click to Upload\n              </button>\n\n             \n\n              {file ? (\n                <>\n                {/* <img src={file.source} alt=\"preview\" /> */}\n                  \n                  \n                 \n                \n\n                \n                <div className=\"tabla\">\n                <p className=\"titulo-tabla\">Archivos para Homologación</p>\n                <table className=\"rwd-table\">\n                  <tr>\n                    <th>Nombre del Archivo</th>\n                    <th>Archivo Cargado </th>\n                    <th>Accion</th>\n                  </tr>\n                  <tr>\n                    <td data-th=\"etiqueta\">Etiqueta del equipo *</td>\n                    <td data-th=\"archivo\"><span> Name: {file.name} </span></td>\n                    <td data-tj=\"accion\">ELIMINAR</td>\n                  </tr>\n                  <tr>\n                    <td data-th=\"etiqueta\">Certificado de conformidad de normas técnicas (opcional)</td>\n                    <td data-th=\"archivo\"> <span> Size: {file.size} </span></td>\n                    <td data-tj=\"accion\">ELIMINAR</td>\n                  </tr>\n                </table>\n              </div>\n                </>\n\n                \n\n\n              ) : (\n                <span>No file selected</span>\n              )}\n            </div>\n\n            <br />\n\n            <Formik\n              initialValues={{\n                fullname: \"\",\n                email: \"\",\n              }}\n              validationSchema={validationSchema}\n              onSubmit={(values, actions) => {\n                console.log(values);\n                setFormValues(values);\n\n                const timeOut = setTimeout(() => {\n                  actions.setSubmitting(false);\n\n                  clearTimeout(timeOut);\n                }, 1000);\n              }}\n            >\n              {({\n                values,\n                errors,\n                touched,\n                handleSubmit,\n                isSubmitting,\n                isValidating,\n                isValid,\n              }) => {\n                return (\n                  <>\n                    <h3 className=\"title-form\">\n                      Solicitud de Homologación de Equipos Terminales Móviles\n                    </h3>\n\n                    <div className=\"titulo-indicativo\">\n                      <h4 className=\"subtitle-form\">Datos de identificación</h4>\n                      <p className=\"txt-obliga\">*Campos obligatorios</p>\n                    </div>\n\n                    <div className=\"col-md-6 p-1\">\n                      <Label htmlFor=\"fullname\">\n                        Fullname\n                        <Input\n                          type=\"text\"\n                          name=\"fullname\"\n                          autoCorrect=\"off\"\n                          autoComplete=\"name\"\n                          placeholder=\"your fullname\"\n                          valid={touched.fullname && !errors.fullname}\n                          error={touched.fullname && errors.fullname}\n                        />\n                      </Label>\n                      {errors.fullname && touched.fullname && (\n                        <StyledInlineErrorMessage>\n                          {errors.fullname}\n                        </StyledInlineErrorMessage>\n                      )}\n                    </div>\n\n                    <div className=\"col-md-6 p-1\">\n                      <Label htmlFor=\"email\">\n                        Email\n                        <Input\n                          type=\"email\"\n                          name=\"email\"\n                          autoCapitalize=\"off\"\n                          autoCorrect=\"off\"\n                          autoComplete=\"email\"\n                          placeholder=\"your email\"\n                          valid={touched.email && !errors.email}\n                          error={touched.email && errors.email}\n                        />\n                      </Label>\n                      <ErrorMessage name=\"email\">\n                        {(msg) => (\n                          <StyledInlineErrorMessage>\n                            {msg}\n                          </StyledInlineErrorMessage>\n                        )}\n                      </ErrorMessage>\n                    </div>\n\n                    <Submit type=\"submit\" disabled={!isValid || isSubmitting}>\n                      {isSubmitting ? `Submiting...` : `Registrar`}\n                    </Submit>\n                  </>\n                );\n              }}\n            </Formik>\n          </div>\n\n          <div className=\"col-md-1 p-0\"></div>\n          <div className=\"col-md-3 p-0\">\n            <aside className=\"aside\">\n              <br />\n              <br />\n              <BotonTutoriales />\n              <BotonDeDudas />\n              <br />\n              <br />\n              <CalificacionExperiencia />\n              <br />\n              <br />\n              <BotonInicio />\n            </aside>\n          </div>\n        </div>\n      </div>\n      <Footer />\n      <FooterGov />\n    </>\n  );\n};\n\nexport default Prueba;\n\n/*\n<h1>Basic</h1>\n\n            *Contenedor Formik del formulario\n            <Formik\n              //Valores Iniciales Formik\n              initialValues={\n                {\n                  nombre: '',\n                  correo: ''\n                }\n              }\n              // Validaciones Formik\n              validate={(valores) => {\n                let errores = {}\n\n                if(!valores.nombre) {\n                  errores.nombre = 'Campo nombre es obligatorio'\n                } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(valores.nombre)) {\n                  errores.nombre = 'El nombre solo puede contener letras y espacios'\n                }\n\n                if(!valores.correo) {\n                  errores.correo = 'Campo correo es obligatorio'\n                } else if (!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(valores.correo)) {\n                  errores.correo = 'No cumple con los parametros para un email@email.co'\n                }\n\n                if(!valores.pais) {\n                  errores.pais = 'Campo pais es obligatorio'\n                } \n\n                return errores\n              }}\n\n              // Envío formulario Formik\n              onSubmit = {(valores, {resetForm}) => {\n                resetForm()\n                console.log('Formulario enviado')\n                setFormularioEnviado(true)\n                setTimeout(() => setFormularioEnviado(false), 3000)\n                //console.log(valores)\n                console.log(valores.pais)\n                \n              }}\n            >\n              \n              Estructura render props (destructuramos): se renderiza este formulario. Al tenerlo en una funcion se puede agregar valores de formik\n              Funcion que va dentro del componente Formik y nos permite inyectar informacion como los errores\n              \n              {({errors}) => ( \n                <Form className=\"formulario\">\n                  console.log(errors)\n                  <div>\n                    <label htmlFor=\"nombre\">Nombre</label>\n                    <Field\n                      type=\"text\"\n                      id=\"nombre\"\n                      name=\"nombre\"\n                      placeholder=\"John Doe\"\n                    />\n                    <ErrorMessage name=\"nombre\" component={() => (\n                        <div className=\"error\">{errors.nombre}</div>\n                      )} \n                    />\n                    \n                  </div>\n                  <div>\n                    <label htmlFor=\"correo\">Correo</label>\n                    <Field\n                      type=\"text\"\n                      id=\"correo\"\n                      name=\"correo\"\n                      placeholder=\"correo@correo.com\"\n                    />\n                    <ErrorMessage name=\"correo\" component={() => (\n                        <div className=\"error\">{errors.correo}</div>\n                      )} \n                    />\n                  </div>\n                  \n                  <div>\n                    <Field name=\"pais\" as=\"select\">\n                      <option value=\"arg\">Argentina</option>\n                      <option value=\"br\">Brasil</option>\n                      <option value=\"col\">Colombia</option>\n                      <option value=\"mx\">Mexico</option>\n                    </Field>\n                  </div>\n                  \n                  <div>\n                    <label>\n                      <Field type=\"radio\" name=\"sexo\" value=\"hombre\" /> Hombre\n                    </label>\n                    <label>\n                      <Field type=\"radio\" name=\"sexo\" value=\"mujer\" /> Mujer\n                    </label>\n                  </div>    \n                 \n                  <div>\n                    <Field name=\"mensaje\" as=\"textarea\" placeholder=\"Mensaje\" />\n                  </div>\n                \n                  <button type=\"submit\">Enviar</button>\n                  {formularioEnviado && <p className=\"exito\">Formulario enviado con exito!</p>}\n                </Form>\n              )}\n              \n              {({values, errors, touched, handleSubmit, handleChange, handleBlur}) => ( //Estructura render props (destructuramos): se renderiza este formulario. Al tenerlo en una funcion se puede agregar valores de formik\n                <form className=\"formulario\" onSubmit={handleSubmit}>\n                  console.log(errors)\n                  <div>\n                    <label htmlFor=\"nombre\">Nombre</label>\n                    <input\n                      type=\"text\"\n                      id=\"nombre\"\n                      name=\"nombre\"\n                      placeholder=\"John Doe\"\n                      value={values.nombre}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {touched.nombre && errors.nombre && <div className=\"error\">{errors.nombre}</div>}\n                  </div>\n                  <div>\n                    <label htmlFor=\"correo\">Correo</label>\n                    <input\n                      type=\"text\"\n                      id=\"correo\"\n                      name=\"correo\"\n                      placeholder=\"correo@correo.com\"\n                      value={values.correo}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {touched.correo && errors.correo && <div className=\"error\">{errors.correo}</div>}\n                  </div>\n                  <button type=\"submit\">Enviar</button>\n                  {formularioEnviado && <p className=\"exito\">Formulario enviado con exito!</p>}\n                </form>\n              )}\n              }\n            </Formik>\n*/\n\n//Estilos campos formularios y validaciones estilos\n/*\nconst colores = {\n  borde: \"#3366CC\",\n  error: \"#A80521\",\n  exito: \"#3366CC\",\n};\n\nconst Formulario = styled.form`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n\n  @media (max-width: 800px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst Label = styled.label`\n  display: block;\n  font: normal 500 16px Work Sans;\n  line-height: 1.5;\n  margin: 0;\n  color: #4B4B4B;\n  padding: padding: 22px 0px 0px 0px;\n  cursor: pointer;\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      color: ${colores.error};\n    `}\n`;\n\nconst GrupoInput = styled.div`\n  position: relative;\n  z-index: 90;\n`;\n\nconst Input = styled.input`\n  gap: 20px;\n  width: 100%;\n  background: #fff;\n  border-radius: 3px;\n  height: 35px;\n  line-height: 35px;\n  padding: 0 40px 0 10px;\n  transition: 0.3s ease all;\n  border: 1px solid #bababa;\n\n  &:focus {\n    border: 1px solid ${colores.borde};\n    outline: none;\n    box-shadow: 3px 0px 30px rgba(163, 163, 163, 0.4);\n  }\n\n  ${(props) =>\n    props.valido === \"true\" &&\n    css`\n      border: 1px solid #bababa;\n    `}\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      border: 1px solid ${colores.error} !important;\n    `}\n`;\n\nconst InputDisabled = styled.input`\n  width: 100%;\n  background: #fff;\n  border-radius: 3px;\n  height: 35px;\n  line-height: 35px;\n  padding: 0 40px 0 10px;\n  transition: 0.3s ease all;\n  border: 1px solid #bababa;\n\n  &:focus {\n    border: 1px solid ${colores.borde};\n    outline: none;\n    box-shadow: 3px 0px 30px rgba(163, 163, 163, 0.4);\n  }\n\n  ${(props) =>\n    props.valido === \"true\" &&\n    css`\n      border: 1px solid #bababa;\n    `}\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      border: 1px solid ${colores.error} !important;\n    `}\n`;\n\nconst LeyendaError = styled.p`\n  display: none;\n  font-size: 12px;\n  margin-bottom: 0;\n  color: ${colores.error};\n  display: none;\n\n  ${(props) =>\n    props.valido === \"true\" &&\n    css`\n      display: none;\n    `}\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      display: block;\n    `}\n`;\n\nconst ContenedorTerminos = styled.div`\n  grid-column: span 2;\n\n  input {\n    margin-right: 10px;\n  }\n\n  @media (max-width: 800px) {\n    grid-column: span1;\n  }\n`;\n\nconst ContenedorBotonCentrado = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  grid-column: span 2;\n\n  @media (max-width: 800px) {\n    grid-column: span1;\n  }\n`;\n\nconst Boton = styled.button`\n  display: flex;\n  background-color: #3366cc;\n  border: 1.5px solid #3366cc;\n  border-radius: 30px;\n  color: #ffff;\n  font: normal bold 15px \"Works Sans\", sans-serif;\n  margin: 0px 0px 100px 0px;\n  padding: 15px 5px 15px 5px;\n  text-transform: uppercase;\n  white-space: pre-line;\n  width: 30%;\n  /*\n  display: flex;\n  height: 40px;\n  line-height: 30px;\n  width: 30%;\n  background: #004884;\n  color: #fff;\n  font: normal 600 16px/1.55px \"Work Sans\", sans-serift;\n  border: none;\n  border-radius: 25px;\n  cursor: pointer;\n  transition: .1s ease all;\n  */\n/*\n  a {\n    color: #ffff;\n    font: normal bold 15px/14px \"Works Sans\", sans-serif;\n  }\n\n  &:hover {\n    background-color: #004884;\n    border-color: #004884;\n  }\n`;\n\nconst MensajeExito = styled.p`\n  width: 100%;\n  height: 45%;\n  text-align: center;\n  line-height: 45px;\n  background: #069169;\n  padding: 10px 0px 0px 0px;\n  margin: 12px 0px 0px 0px;\n  border-radius: 3px;\n  grid-column: span 2;\n\n  p {\n    padding: 10px;\n    text-align: center;\n    color: #ffff;\n  }\n  b {\n    margin-left: 10px;\n  }\n`;\n\nconst MensajeError = styled.div`\n  height: 45px;\n  line-height: 45px;\n  background: ${colores.error};\n  padding: 0px 5px;\n  border-radius: 3px;\n  grid-column: span 2;\n  p {\n    padding: 2px 0px 2px 0px;\n    text-align: center;\n    color: #ffff;\n  }\n  b {\n    margin-left: 10px;\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  background: #fff;\n  border-radius: 3px;\n  height: 35px;\n  line-height: 35px;\n  padding: 0 40px 0 10px;\n  transition: 0.3s ease all;\n  border: 1px solid #bababa;\n\n  &:focus {\n    border: 1px solid ${colores.borde};\n    outline: none;\n    box-shadow: 3px 0px 30px rgba(163, 163, 163, 0.4);\n  }\n\n  ${(props) =>\n    props.valido === \"true\" &&\n    css`\n      border: 1px solid #bababa;\n    `}\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      border: 1px solid ${colores.error} !important;\n    `}\n`;\n*/\n"]},"metadata":{},"sourceType":"module"}
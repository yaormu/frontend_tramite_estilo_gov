{"ast":null,"code":"var _jsxFileName = \"/home/yamid/Documentos/ReactJS/puntogov/src/components/MenuDesplegable/MenuDesplegable.js\";\nimport React, { useState } from \"react\";\nimport { Formulario, Label, ContenedorTerminos, ContenedorBotonCentrado, MensajeExito, MensajeError, Select, LeyendaError } from \"../../Pages/FormularioSolicitud/elementos/Formularios\";\nconst categorias = [{\n  pais: \"Colombia\",\n  estados: [\"Amazonas\", \"Antioquia\", \"Arauca\", \"Atlántico\", \"Bogotá\", \"Bolívar\", \"Boyacá\", \"Caldas\", \"Caquetá\", \"Casanare\", \"Cauca\", \"Cesar\", \"Chóco\", \"Córdoba\", \"Cundinamarca\", \"Guainia\", \"Guaviare\", \"Huila\", \"La Guajira\"]\n}, {\n  pais: \"Canada\",\n  estados: [\"Ciudad de Quebec\", \"Regina\", \"Calgary\"]\n}];\nconsole.log(\"categorias\", categorias);\n\nconst MenuDesplegable = () => {\n  // Campo selección, lista desplegable, tipo persona y tipo dispositivo\n  const [pais, setPais] = useState();\n  const [idArticulos, setIdArticulos] = useState(-1); // Funcion evento cambiar articulos\n\n  const handlerCargarArticulo = function (e) {\n    const opcion = e.target.value; // Validar carga de -1 y desde 0 seleccion articulo\n    // console.log(opcion);\n    // Cambio del idArticulo de acuerdo a la opción seleccionada\n\n    setIdArticulos(opcion);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"pais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Pais *\"), /*#__PURE__*/React.createElement(Select, {\n    required: true,\n    id: \"pais\",\n    \"data-toggle\": \"tooltip\",\n    title: \"Pais de residencia del usuario que realiza el tr\\xE1mite\",\n    value: pais,\n    onChange: e => setPais(e.currentTarget.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: -1,\n    disabled: true,\n    selected: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Ej. Colombia\"), categorias.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: \"categoria\" + index,\n    value: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, item.pais))), /*#__PURE__*/React.createElement(LeyendaError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Campo tipo persona es requerido\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"tipoPersona\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Departamento *\"), /*#__PURE__*/React.createElement(Select, {\n    required: true,\n    id: \"tipoPersona\",\n    \"data-toggle\": \"tooltip\",\n    title: \"Corresponde al tipo de persona, que efect\\xFAa el tr\\xE1mite, Natural o Juridica\",\n    value: pais,\n    onChange: e => setPais(e.currentTarget.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: -1,\n    disabled: true,\n    selected: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Ej. Bogot\\xE1\"), categorias.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: \"categoria\" + index,\n    value: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, item.pais))), /*#__PURE__*/React.createElement(LeyendaError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Campo tipo persona es requerido\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Articulos\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"articulos\",\n    id: \"searticulo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \" Ej. Cundinamarca \"), idArticulos > -1 && categorias[idArticulos].estados.map((item, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: \"articulo\" + i,\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, item))))));\n};\n\nexport default MenuDesplegable;","map":{"version":3,"sources":["/home/yamid/Documentos/ReactJS/puntogov/src/components/MenuDesplegable/MenuDesplegable.js"],"names":["React","useState","Formulario","Label","ContenedorTerminos","ContenedorBotonCentrado","MensajeExito","MensajeError","Select","LeyendaError","categorias","pais","estados","console","log","MenuDesplegable","setPais","idArticulos","setIdArticulos","handlerCargarArticulo","e","opcion","target","value","currentTarget","map","item","index","i"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport {\n  Formulario,\n  Label,\n  ContenedorTerminos,\n  ContenedorBotonCentrado,\n  MensajeExito,\n  MensajeError,\n  Select,\n  LeyendaError,\n} from \"../../Pages/FormularioSolicitud/elementos/Formularios\";\n\nconst categorias = [\n  {\n    pais: \"Colombia\",\n    estados: [\n      \"Amazonas\",\n      \"Antioquia\",\n      \"Arauca\",\n      \"Atlántico\",\n      \"Bogotá\",\n      \"Bolívar\",\n      \"Boyacá\",\n      \"Caldas\",\n      \"Caquetá\",\n      \"Casanare\",\n      \"Cauca\",\n      \"Cesar\",\n      \"Chóco\",\n      \"Córdoba\",\n      \"Cundinamarca\",\n      \"Guainia\",\n      \"Guaviare\",\n      \"Huila\",\n      \"La Guajira\",\n    ],\n  },\n  {\n    pais: \"Canada\",\n    estados: [\"Ciudad de Quebec\", \"Regina\", \"Calgary\"],\n  },\n];\n\nconsole.log(\"categorias\", categorias);\n\nconst MenuDesplegable = () => {\n  // Campo selección, lista desplegable, tipo persona y tipo dispositivo\n  const [pais, setPais] = useState();\n\n  const [idArticulos, setIdArticulos] = useState(-1);\n\n  // Funcion evento cambiar articulos\n  const handlerCargarArticulo = function (e) {\n    const opcion = e.target.value;\n    // Validar carga de -1 y desde 0 seleccion articulo\n    // console.log(opcion);\n    // Cambio del idArticulo de acuerdo a la opción seleccionada\n    setIdArticulos(opcion);\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <Label htmlFor=\"pais\">Pais *</Label>\n          <Select\n            required\n            id=\"pais\"\n            data-toggle=\"tooltip\"\n            title=\"Pais de residencia del usuario que realiza el trámite\"\n            value={pais}\n            onChange={(e) => setPais(e.currentTarget.value)}\n          >\n            <option value={-1} disabled selected hidden>\n              Ej. Colombia\n            </option>\n            {categorias.map((item, index) => (\n              <option key={\"categoria\" + index} value={index}>\n                {item.pais}\n              </option>\n            ))}\n          </Select>\n          <LeyendaError>Campo tipo persona es requerido</LeyendaError>\n        </div>\n        <div className=\"col-md-6\">\n          <Label htmlFor=\"tipoPersona\">Departamento *</Label>\n          <Select\n            required\n            id=\"tipoPersona\"\n            data-toggle=\"tooltip\"\n            title=\"Corresponde al tipo de persona, que efectúa el trámite, Natural o Juridica\"\n            value={pais}\n            onChange={(e) => setPais(e.currentTarget.value)}\n          >\n            <option value={-1} disabled selected hidden>\n              Ej. Bogotá\n            </option>\n            {categorias.map((item, index) => (\n              <option key={\"categoria\" + index} value={index}>\n                {item.pais}\n              </option>\n            ))}\n          </Select>\n          <LeyendaError>Campo tipo persona es requerido</LeyendaError>\n        </div>\n\n        \n        <div className=\"col-md-6\">\n          <h3>Articulos</h3>\n          <select name=\"articulos\" id=\"searticulo\">\n            <option> Ej. Cundinamarca </option>\n            {idArticulos > -1 &&\n              categorias[idArticulos].estados.map((item, i) => (\n                <option key={\"articulo\" + i} value=\"\">\n                  {item}\n                </option>\n              ))}\n          </select>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MenuDesplegable;\n"]},"metadata":{},"sourceType":"module"}
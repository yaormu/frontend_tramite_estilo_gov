{"ast":null,"code":"var _jsxFileName = \"/home/yamid/Documentos/ReactJS/puntogov/src/Pages/PruebaRespuesta/PruebaRespuesta.js\";\nimport React, { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik } from \"formik\"; // Estilos generales del formulario\n\nimport \"./../../Pages/FormularioSolicitud/FormularioSolicitud.scss\"; // Componentes obligatorios a mostrar en el sitio\n\nimport Header from \"../../components/Header/Header\";\nimport Navegacion from \"../../components/Navigation/Navegacion\";\nimport NavProceso from \"../../components/NavProceso/NavProceso\";\nimport BotonTutoriales from \"../../components/Botones/BotonTutoriales/BotonTutoriales\";\nimport BotonDeDudas from \"../../components/Botones/BotonDeDudas/BotonDeDudas\";\nimport CalificacionExperiencia from \"../../components/Cards/CalificacionExperiencia/CalificacionExperiencia\";\nimport CalificaExperienciaFooter from \"../../components/Cards/CalificacionExperiencia/CalificaExperienciaFooter\";\nimport BotonInicio from \"../../components/Botones/BotonInicio/BotonInicio\";\nimport Footer from \"../../components/Footer/Footer\";\nimport FooterGov from \"../../components/FooterGov/FooterGov\"; // Modal a mostra antes de enviar información formulario\n\nimport Modal from \"../../components/Modal/Modal\"; // Importación iconos para mostrar en mensajes de error o exito\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExclamationTriangle, faCheckCircle } from \"@fortawesome/free-solid-svg-icons\"; // Libreria para el uso de recaptcha\n\nimport ReCAPTCHA from \"react-google-recaptcha\"; // Libreria syled que nos permite crear componentes con diseños, despues la linea exportar se encuentran\n\nimport styled from \"styled-components\"; // Importación elementos html de componente con estilos predefinidos styled\n\nimport { Formulario, Label, Select, ContenedorTerminos, ContenedorBotonCentrado, LeyendaError, MensajeExito, MensajeError } from \"../FormularioSolicitud/elementos/Formularios\"; // Import componente styled con diseño predeterminado\n\nimport ComponenteInput from \"./../FormularioSolicitud/componentes/ComponenteInput\";\nimport ComponenteInputDisabled from \"./../FormularioSolicitud/componentes/ComponenteInputDisabled\";\nimport DragArea from \"./../FormularioSolicitud/componentes/DragArea\";\nimport TestingDocument from \"../../components/TestingDocument/TestingDocument\";\nimport MenuDesplegable from \"../../components/MenuDesplegable/MenuDesplegable\";\n\nconst FormularioSolicitud = () => {\n  // Validar Datos de identificación\n  const [persona, cambiarPersona] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [tipoId, cambiarTipoId] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [identificacion, cambiarIdentificacion] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [identificacion2, cambiarIdentificacion2] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nombre, cambiarNombre] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nombre2, cambiarNombre2] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [apellido, cambiarApellido] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [apellido2, cambiarApellido2] = useState({\n    campo: \"\",\n    valido: null\n  }); // Validar Datos de contacto y ubicación\n\n  const [nit, cambiarNit] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nit2, cambiarNit2] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nombreEmpresa, cambiarNombreEmpresa] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nombreRLoApoderado, cambiarNombreRLoApoderado] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [digitoVerificacion, cambiarDigitoVerificacion] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [digitoVerificacion2, cambiarDigitoVerificacion2] = useState({\n    campo: \"\",\n    valido: null\n  }); // Validar Datos de contacto y ubicación\n\n  const [pais, cambiarPais] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [departamento, cambiarDepartamento] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [municipio, cambiarMunicipio] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [direccion, cambiarDireccion] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [correo, cambiarCorreo] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [correo2, cambiarCorreo2] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [telefono, cambiarTelefono] = useState({\n    campo: \"\",\n    valido: null\n  }); // Validar Características del terminal móvil\n\n  const [nombreOtroDispositivo, cambiarNombreOtroDispositivo] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [marca, cambiarMarca] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nombreComercial, cambiarNombreComercial] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [modelo, cambiarModelo] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [fabricante, cambiarFabricante] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [casoUsoDispositivo, cambiarCasoUsoDispositivo] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [marcaEquipoAnfitrion, cambiarMarcaEquipoAnfitrion] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [modeloEquipoAnfitrion, cambiarModeloEquipoAnfitrion] = useState({\n    campo: \"\",\n    valido: null\n  }); // Validar formulario y términos condiciones\n\n  const [formularioValido, cambiarFormularioValido] = useState(null);\n  const [terminos, cambiarTerminos] = useState(false);\n  const [autorizaDatos, cambiarAutorizaDatos] = useState(false); // Referencia al captcha\n\n  const captcha = useRef(null); // Dependiendo el estado seleccionado en lista desplegable, mostrar x campos en formulario\n\n  const [tipoPersona, setTipoPersona] = useState(null);\n  const [tipoIdentificacion, setTipoIdentificacion] = useState(null);\n  const [tipoDispositivo, setTipoDispositivo] = useState(null); // Mostrar y ocultar modal\n\n  const [estadoModal, cambiarEstadoModal] = useState(false);\n  const [estadoModalTerminos, cambiarEstadoModalTerminos] = useState(false);\n  const [estadoModalDatos, cambiarEstadoModalDatos] = useState(false); //Dependiendo estado captcha a seleccionado dejar enviar formulario\n\n  const [captchaValido, cambiarCaptchaValido] = useState(null);\n  const [usuarioValido, cambiarUsuarioValido] = useState(false); // Expresiones regulares para validar que los campos cumplan con las condiciones\n\n  const expresiones = {\n    usuario: /^[a-zA-Z0-9_-]{4,16}$/,\n    // Letras, numeros, guion y guion_bajo\n    nombre: /^[a-zA-ZÀ-ÿ\\s]{1,40}$/,\n    // Letras y espacios, pueden llevar acentos.\n    identificacion: /^\\d{6,14}$/,\n    // 6 a 14 numeros.\n    password: /^.{4,12}$/,\n    // 4 a 12 digitos.\n    correo: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\n    telefono: /^\\d{7,14}$/,\n    // 7 a 14 numeros.\n    digitoV: /^\\d{1,1}$/ // 1 a 1 numero.\n\n  }; // Campo confirmar Número de Identificación se igual campo a comprobar\n\n  const validarIdentificacion2 = () => {\n    if (identificacion.campo.length > 0) {\n      if (identificacion.campo !== identificacion2.campo) {\n        cambiarIdentificacion2(prevState => {\n          return { ...prevState,\n            valido: \"false\"\n          };\n        });\n      } else {\n        cambiarIdentificacion2(prevState => {\n          return { ...prevState,\n            valido: \"true\"\n          };\n        });\n      }\n    }\n  }; // Campo confirmar Número de NIT se igual campo a comprobar\n\n\n  const validarNit2 = () => {\n    if (nit.campo.length > 0) {\n      if (nit.campo !== nit2.campo) {\n        cambiarNit2(prevState => {\n          return { ...prevState,\n            valido: \"false\"\n          };\n        });\n      } else {\n        cambiarNit2(prevState => {\n          return { ...prevState,\n            valido: \"true\"\n          };\n        });\n      }\n    }\n  }; // Campo confirmar Número Digito veririfcacion (DV) igual campo a comprobar\n\n\n  const validarDigitoVerificacion2 = () => {\n    if (digitoVerificacion.campo.length > 0) {\n      if (digitoVerificacion.campo !== digitoVerificacion2.campo) {\n        cambiarDigitoVerificacion2(prevState => {\n          return { ...prevState,\n            valido: \"false\"\n          };\n        });\n      } else {\n        cambiarDigitoVerificacion2(prevState => {\n          return { ...prevState,\n            valido: \"true\"\n          };\n        });\n      }\n    }\n  }; // Campo confirmar correo electronico igual campo a comprobar\n\n\n  const validarCorreo2 = () => {\n    if (correo.campo.length > 0) {\n      if (correo.campo !== correo2.campo) {\n        cambiarCorreo2(prevState => {\n          return { ...prevState,\n            valido: \"false\"\n          };\n        });\n      } else {\n        cambiarCorreo2(prevState => {\n          return { ...prevState,\n            valido: \"true\"\n          };\n        });\n      }\n    }\n  }; // Obtener los datos del formulario\n\n\n  const [formValues, setFormValues] = useState({\n    tipoIdentificacion: \"\",\n    tipoId: \"\",\n    identificacion: \"\",\n    identificacion2: \"\",\n    nit: \"\",\n    digitoVerificacion: \"\",\n    nombreEmpresa: \"\",\n    nombre: \"\",\n    nombre2: \"\",\n    apellido: \"\",\n    apellido2: \"\",\n    marca: \"\",\n    nombreComercial: \"\",\n    fabricante: \"\",\n    casoUsoDispositivo: \"\",\n    marcaModulo: \"\",\n    modelo: \"\",\n    modeloModuloInterno: \"\",\n    marcaEquipoFabricante: \"\",\n    modeloEquipoAnfitrion: \"\",\n    nombreOtroDispositivo: \"\",\n    direccion: \"\",\n    correo: \"\",\n    telefono: \"\",\n    departamento: \"\",\n    municipio: \"\",\n    pais: \"\",\n    tipoPersona: \"\",\n    tipoDispositivo: \"\"\n  });\n\n  const onChangeTerminos = e => {\n    cambiarTerminos(e.target.checked);\n  };\n\n  const onChangeDatos = e => {\n    cambiarAutorizaDatos(e.target.checked);\n  };\n\n  const onChange = () => {\n    if (captcha.current.getValue()) {\n      console.log(\"El usuario no es un robot\");\n      cambiarCaptchaValido(true);\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); //Colocar aquí la validación de los inputs del formulario. Si son correctos ya podemos enviar el formulario, actualizar la interfaz etc\n\n    if (captcha.current.getValue()) {\n      console.log(\"El usuario no es un robot\");\n      cambiarCaptchaValido(true);\n    } else {\n      console.log(\"Por favor acepta el captcha\");\n      cambiarCaptchaValido(false);\n    }\n\n    if (identificacion.valido === \"true\" && identificacion2.valido === \"true\" && nombre.valido === \"true\" && apellido.valido === \"true\" && terminos) {\n      cambiarFormularioValido(true);\n      cambiarPersona({\n        campo: \"\",\n        valido: null\n      });\n      cambiarTipoId({\n        campo: \"\",\n        valido: null\n      });\n      cambiarIdentificacion({\n        campo: \"\",\n        valido: null\n      });\n      cambiarIdentificacion2({\n        campo: \"\",\n        valido: null\n      });\n      cambiarNombre({\n        campo: \"\",\n        valido: null\n      });\n      cambiarNombre2({\n        campo: \"\",\n        valido: null\n      });\n      cambiarApellido({\n        campo: \"\",\n        valido: null\n      });\n      cambiarApellido2({\n        campo: \"\",\n        valido: null\n      });\n      cambiarTerminos(false); // ... Puedo ir código consumido externo como de una API\n    } else {\n      cambiarFormularioValido(false);\n    }\n  }; // Selección tipo persona\n\n\n  function getTipoPersonaDiv() {\n    switch (tipoPersona) {\n      case \"natural\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          htmlFor: \"tipoId\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }\n        }, \"Tipo de Identificaci\\xF3n *\"), /*#__PURE__*/React.createElement(Select, {\n          id: \"tipoIdentificacion\",\n          \"data-toggle\": \"tooltip\",\n          title: \"Seleccionar tipo documento de Identificaci\\xF3n\",\n          name: \"tipoIdentificacion\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"1\",\n          selected: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }\n        }, \"C\\xE9dula de Ciudadania\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }\n        }, \"C\\xE9dula extranjeria\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }\n        }, \"ID pasaporte\")), /*#__PURE__*/React.createElement(LeyendaError, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }\n        }, \"Campo tipo iden es requerido\")), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: identificacion,\n          cambiarEstado: cambiarIdentificacion,\n          tipo: \"text\",\n          label: \"N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 1001245785\",\n          name: \"identificacion\",\n          leyendaError: \"Campo requerido, solo se aceptan n\\xFAmeros y minimo 6 digitos\",\n          expresionRegular: expresiones.identificacion,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: identificacion2,\n          cambiarEstado: cambiarIdentificacion2,\n          tipo: \"text\",\n          label: \"Confirmar N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 1001245785\",\n          name: \"identificacion2\",\n          leyendaError: \"Campo requerido, debe ser igual al campo identificaci\\xF3n\",\n          funcion: validarIdentificacion2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombre,\n          cambiarEstado: cambiarNombre,\n          tipo: \"text\",\n          label: \"Primer Nombre *\",\n          placeholder: \"Ej: Pepito\",\n          name: \"nombre\",\n          leyendaError: \"Campo requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombre2,\n          cambiarEstado: cambiarNombre2,\n          tipo: \"text\",\n          label: \"Segundo Nombre\",\n          placeholder: \"Ej: Andres\",\n          name: \"nombre2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: apellido,\n          cambiarEstado: cambiarApellido,\n          tipo: \"text\",\n          label: \"Primer Apellido *\",\n          placeholder: \"Ej: Perez\",\n          name: \"apellido\",\n          leyendaError: \"Campo requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: apellido2,\n          cambiarEstado: cambiarApellido2,\n          tipo: \"text\",\n          label: \"Segundo Apellido\",\n          placeholder: \"Ej: Rodriguez\",\n          name: \"apellido2\",\n          leyendaError: \"Campo requerido\",\n          expresionRegular: expresiones.apellido2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }\n        }));\n\n      case \"juridica\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          htmlFor: \"tipoId\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }\n        }, \"Tipo de Identificaci\\xF3n *\"), /*#__PURE__*/React.createElement(Select, {\n          id: \"tipoIdentificacion\",\n          \"data-toggle\": \"tooltip\",\n          title: \"Seleccionar tipo documento de Identificaci\\xF3n\",\n          name: \"tipoIdentificacion\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"1\",\n          selected: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }\n        }, \"N\\xFAmero de Identificaci\\xF3n Tributaria (NIT)\")), /*#__PURE__*/React.createElement(LeyendaError, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }\n        }, \"Campo tipo iden es requerido\")), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nit,\n          cambiarEstado: cambiarNit,\n          tipo: \"text\",\n          label: \"N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 8603842563\",\n          name: \"nit\",\n          leyendaError: \"Campo requerido, solo se aceptan n\\xFAmeros\",\n          expresionRegular: expresiones.identificacion,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: digitoVerificacion,\n          cambiarEstado: cambiarDigitoVerificacion,\n          tipo: \"text\",\n          label: \"Digito Verificaci\\xF3n *\",\n          placeholder: \"Ej: 8\",\n          name: \"digitoVerificacion\",\n          leyendaError: \"Campo requerido, solo se un n\\xFAmero\",\n          expresionRegular: expresiones.digitoV,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nit2,\n          cambiarEstado: cambiarNit2,\n          tipo: \"text\",\n          label: \"Confirmar N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 8603842563\",\n          name: \"nit2\",\n          leyendaError: \"Campo requerido, coincidir con n\\xFAmero nit ingresado\",\n          funcion: validarNit2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: digitoVerificacion2,\n          cambiarEstado: cambiarDigitoVerificacion2,\n          tipo: \"text\",\n          label: \"Confirmar Digito Verificaci\\xF3n*\",\n          placeholder: \"Ej: 8\",\n          name: \"digitoVerificacion2\",\n          leyendaError: \"Campo es requerido, coincidir con n\\xFAmero DV ingresado\",\n          expresionRegular: expresiones.digitoV,\n          funcion: validarDigitoVerificacion2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreEmpresa,\n          cambiarEstado: cambiarNombreEmpresa,\n          tipo: \"text\",\n          label: \"Nombre de la empresa *\",\n          placeholder: \"Ej: Microchips y Telecomunicaciones SAS\",\n          name: \"nombreEmpresa\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreRLoApoderado,\n          cambiarEstado: cambiarNombreRLoApoderado,\n          tipo: \"text\",\n          label: \"Nombre Representante Legal o APoderado*\",\n          placeholder: \"Ej: Pablo Jesus Lozada Cortez\",\n          name: \"apellido\",\n          leyendaError: \"Campo primer apellido es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }\n        }));\n\n      default:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ComponenteInputDisabled, {\n          estado: tipoId,\n          cambiarEstado: cambiarTipoId,\n          tipo: \"text\",\n          label: \"Tipo de Identificaci\\xF3n *\",\n          placeholder: \"Ej: C\\xE9dula de Ciudadania\",\n          name: \"tipoId\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInputDisabled, {\n          estado: \"identificacionSeleccion\",\n          tipo: \"text\",\n          label: \"N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 1234567890\",\n          name: \"identificacionSeleccion\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInputDisabled, {\n          estado: nit2,\n          cambiarEstado: cambiarNit2,\n          tipo: \"text\",\n          label: \"Confirmar N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 1234567890\",\n          name: \"identificacion\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }\n        }));\n    }\n  } // Selección tipo dispositivo\n\n\n  function getTipoDispositivoDiv() {\n    switch (tipoDispositivo) {\n      case \"dispositivo\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: marca,\n          cambiarEstado: cambiarMarca,\n          tipo: \"text\",\n          label: \"Marca *\",\n          placeholder: \"Ej: Apple\",\n          name: \"marca\",\n          leyendaError: \"Campo es requerido\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreComercial,\n          cambiarEstado: cambiarNombreComercial,\n          tipo: \"text\",\n          label: \"Nombre Comercial *\",\n          placeholder: \"Ej: Serie 3\",\n          name: \"nombreComercial\",\n          leyendaError: \"Campo es requerido\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: modelo,\n          cambiarEstado: cambiarModelo,\n          tipo: \"text\",\n          label: \"Modelo *\",\n          placeholder: \"Ej: Once\",\n          name: \"modelo\",\n          leyendaError: \"Campo es requerido\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: fabricante,\n          cambiarEstado: cambiarFabricante,\n          tipo: \"text\",\n          label: \"Fabricante\",\n          placeholder: \"Ej: Huawei\",\n          name: \"fabricante\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: casoUsoDispositivo,\n          cambiarEstado: cambiarCasoUsoDispositivo,\n          tipo: \"text\",\n          label: \"Caso de uso del Dispositivo*\",\n          placeholder: \"Ej: Las caracteristicas de dispositivo...\",\n          name: \"casoUsoDispositivo\",\n          leyendaError: \"Campo requerido\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }\n        }));\n\n      case \"modulo\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: marca,\n          cambiarEstado: cambiarMarca,\n          tipo: \"text\",\n          label: \"Marca del M\\xF3dulo Interno*\",\n          placeholder: \"Ej: Apple\",\n          name: \"marcaModulo\",\n          leyendaError: \"Campo es requerido\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreComercial,\n          cambiarEstado: cambiarNombreComercial,\n          tipo: \"text\",\n          label: \"Nombre Comercial*\",\n          placeholder: \"Ej: Serie 3\",\n          name: \"nombreComercial\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: modelo,\n          cambiarEstado: cambiarModelo,\n          tipo: \"text\",\n          label: \"Modelo del M\\xF3dulo Interno*\",\n          placeholder: \"Ej: Once\",\n          name: \"modeloModuloInterno\",\n          leyendaError: \"Campo es requerido\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: fabricante,\n          cambiarEstado: cambiarFabricante,\n          tipo: \"text\",\n          label: \"Fabricante\",\n          placeholder: \"Ej: Huawei\",\n          name: \"fabricante\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: marcaEquipoAnfitrion,\n          cambiarEstado: cambiarMarcaEquipoAnfitrion,\n          tipo: \"text\",\n          label: \"Marca del Equipo Anfitri\\xF3n*\",\n          placeholder: \"Ej: Las caracteristicas de dispositivo...\",\n          name: \"marcaEquipoFabricante\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: modeloEquipoAnfitrion,\n          cambiarEstado: cambiarModeloEquipoAnfitrion,\n          tipo: \"text\",\n          label: \"Modelo del Equipo Anfitri\\xF3n*\",\n          placeholder: \"Ej: Las caracteristicas de dispositivo...\",\n          name: \"modeloEquipoAnfitrion\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 13\n          }\n        }));\n\n      case \"otro\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreOtroDispositivo,\n          cambiarEstado: cambiarNombreOtroDispositivo,\n          tipo: \"text\",\n          label: \"Nombre otro Dispositivo*\",\n          placeholder: \"Ej: Apple\",\n          name: \"nombreOtroDispositivo\",\n          leyendaError: \"Campo es requerido\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: marca,\n          cambiarEstado: cambiarMarca,\n          tipo: \"text\",\n          label: \"Marca *\",\n          placeholder: \"Ej: Apple\",\n          name: \"marca\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreComercial,\n          cambiarEstado: cambiarNombreComercial,\n          tipo: \"text\",\n          label: \"Nombre Comercial *\",\n          placeholder: \"Ej: Serie 3\",\n          name: \"nombreComercial\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: modelo,\n          cambiarEstado: cambiarModelo,\n          tipo: \"text\",\n          label: \"Modelo *\",\n          placeholder: \"Ej: Once\",\n          name: \"modelo\",\n          leyendaError: \"Campo es requerido\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: fabricante,\n          cambiarEstado: cambiarFabricante,\n          tipo: \"text\",\n          label: \"Fabricante\",\n          placeholder: \"Ej: Huawei\",\n          name: \"fabricante\",\n          leyendaError: \"Campo requerido\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }\n        }));\n\n      default:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: marca,\n          cambiarEstado: cambiarMarca,\n          tipo: \"text\",\n          label: \"Marca *\",\n          placeholder: \"Ej: Marca del Fabricante Dispositivo\",\n          name: \"marca\",\n          leyendaError: \"Campo es requerido\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreComercial,\n          cambiarEstado: cambiarNombreComercial,\n          tipo: \"text\",\n          label: \"Nombre Comercial *\",\n          placeholder: \"Ej: Nombre Comercial del Dispositivo\",\n          name: \"nombreComercial\",\n          leyendaError: \"Campo es requerido\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: modelo,\n          cambiarEstado: cambiarModelo,\n          tipo: \"text\",\n          label: \"Modelo *\",\n          placeholder: \"Ej: M\\xF3delo que estipula el fabricante\",\n          name: \"modelo\",\n          leyendaError: \"Campo es requerido\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: fabricante,\n          cambiarEstado: cambiarFabricante,\n          tipo: \"text\",\n          label: \"Fabricante\",\n          placeholder: \"Ej: Fabricante de la Marca\",\n          name: \"fabricante\",\n          leyendaError: \"Campo requerido\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 13\n          }\n        }));\n    }\n  } // Selección tipo dispositivo\n\n\n  function getTipoPaisDiv() {\n    switch (pais) {\n      case \"colombia\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MenuDesplegable, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: direccion,\n          cambiarEstado: cambiarDireccion,\n          tipo: \"text\",\n          label: \"Direcci\\xF3n *\",\n          placeholder: \"Ej: CL 1 23 45\",\n          name: \"direccion\",\n          leyendaError: \"Campo es requerido\",\n          name: \"direccion\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: correo,\n          cambiarEstado: cambiarCorreo,\n          tipo: \"text\",\n          label: \"Correo Electr\\xF3nico *\",\n          placeholder: \"Ej: falso@gmail.com\",\n          name: \"correo\",\n          leyendaError: \"Campo es requerido, cumplir con las caracteristicas de un email\",\n          expresionRegular: expresiones.correo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: correo2,\n          cambiarEstado: cambiarCorreo2,\n          tipo: \"text\",\n          label: \"Confirmar Correo Electr\\xF3nico *\",\n          placeholder: \"Ej: falso@gmail.com\",\n          name: \"correo\",\n          leyendaError: \"Campo es requerido, coincidir con email anteriormente digitado\",\n          expresionRegular: expresiones.correo,\n          funcion: validarCorreo2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: telefono,\n          cambiarEstado: cambiarTelefono,\n          tipo: \"text\",\n          label: \"Tel\\xE9fono Remitente *\",\n          placeholder: \"Ej: 300 123 45 67\",\n          name: \"telefono\",\n          leyendaError: \"Campo es requerido, solo se aceptan n\\xFAmeros\",\n          expresionRegular: expresiones.telefono,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }\n        }));\n\n      case \"otroPais\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ComponenteInputDisabled, {\n          estado: departamento,\n          cambiarEstado: cambiarDepartamento,\n          tipo: \"text\",\n          label: \"Departamento *\",\n          placeholder: \"Ej: Cundinamarca\",\n          name: \"departamento\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInputDisabled, {\n          estado: municipio,\n          cambiarEstado: cambiarMunicipio,\n          tipo: \"text\",\n          label: \"Municipio *\",\n          placeholder: \"Ej: Madrid\",\n          name: \"municipio\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: direccion,\n          cambiarEstado: cambiarDireccion,\n          tipo: \"text\",\n          label: \"Direcci\\xF3n *\",\n          placeholder: \"Ej: CL 1 23 45\",\n          name: \"direccion\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: correo,\n          cambiarEstado: cambiarCorreo,\n          tipo: \"text\",\n          label: \"Correo Electr\\xF3nico *\",\n          placeholder: \"Ej: falso@gmail.com\",\n          name: \"correo\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.correo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: correo2,\n          cambiarEstado: cambiarCorreo2,\n          tipo: \"text\",\n          label: \"Confirmar Correo Electr\\xF3nico *\",\n          placeholder: \"Ej: falso@gmail.com\",\n          name: \"correo\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.correo,\n          funcion: validarCorreo2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: telefono,\n          cambiarEstado: cambiarTelefono,\n          tipo: \"text\",\n          label: \"Tel\\xE9fono Remitente *\",\n          placeholder: \"Ej: 300 123 45 67\",\n          name: \"telefono\",\n          leyendaError: \"Campo es requerido, solo n\\xFAmeros\",\n          expresionRegular: expresiones.telefono,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 13\n          }\n        }));\n\n      default:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ComponenteInputDisabled, {\n          estado: departamento,\n          cambiarEstado: cambiarDepartamento,\n          tipo: \"text\",\n          label: \"Departamento *\",\n          placeholder: \"Ej: Cundinamarca\",\n          name: \"departamento\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInputDisabled, {\n          estado: municipio,\n          cambiarEstado: cambiarMunicipio,\n          tipo: \"text\",\n          label: \"Municipio *\",\n          placeholder: \"Ej: Madrid\",\n          name: \"municipio\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: direccion,\n          cambiarEstado: cambiarDireccion,\n          tipo: \"text\",\n          label: \"Direcci\\xF3n *\",\n          placeholder: \"Ej: CL 1 23 45\",\n          name: \"direccion\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: correo,\n          cambiarEstado: cambiarCorreo,\n          tipo: \"text\",\n          label: \"Correo Electr\\xF3nico *\",\n          placeholder: \"Ej: falso@gmail.com\",\n          name: \"correo\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.correo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: correo2,\n          cambiarEstado: cambiarCorreo2,\n          tipo: \"text\",\n          label: \"Confirmar Correo Electr\\xF3nico *\",\n          placeholder: \"Ej: falso@gmail.com\",\n          name: \"correo\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.correo,\n          funcion: validarCorreo2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: telefono,\n          cambiarEstado: cambiarTelefono,\n          tipo: \"text\",\n          label: \"Tel\\xE9fono Remitente *\",\n          placeholder: \"Ej: 300 123 45 67\",\n          name: \"telefono\",\n          leyendaError: \"Campo es requerido, solo n\\xFAmeros\",\n          expresionRegular: expresiones.telefono,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 13\n          }\n        }));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Navegacion, {\n    inicio: \"Inicio\",\n    pagina: \"Solicitud de Homologaci\\xF3n...\",\n    paginaActual: \"Formulario de Solicitud de Homologaci\\xF3n...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NavProceso, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 13\n    }\n  }, \"Formulario de Solicitud de Homologaci\\xF3n de Equipos Terminales M\\xF3viles\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      nombre: '',\n      correo: ''\n    },\n    validate: valores => {\n      let errores = {};\n\n      if (!valores.nombre) {\n        errores.nombre = 'Por favor ingrsa un nombre';\n      }\n\n      return errores;\n    },\n    onSubmit: valores => {\n      console.log(valores.nombre);\n      console.log('Formulario enviado');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 13\n    }\n  }, _ref => {\n    let {\n      values,\n      errors,\n      handleSubmit,\n      handleChange,\n      handleBlur\n    } = _ref;\n    return (\n      /*#__PURE__*/\n      //Destructuramos para no poner props\n      React.createElement(\"form\", {\n        className: \"formulario\",\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 17\n        }\n      }, \" \", console.log(errors), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"nombre\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 19\n        }\n      }, \"Nombre\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"nombre\",\n        name: \"nombre\",\n        placeholder: \"John\",\n        value: values.nombre,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 964,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"correo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 965,\n          columnNumber: 19\n        }\n      }, \"Correo\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"correo\",\n        name: \"correo\",\n        placeholder: \"correo@gmail.com\",\n        value: values.correo,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 966,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 17\n        }\n      }, \"Enviar\"))\n    );\n  }), /*#__PURE__*/React.createElement(Formulario, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 981,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 982,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 983,\n      columnNumber: 19\n    }\n  }, \"Datos de identificaci\\xF3n\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 984,\n      columnNumber: 19\n    }\n  }, \"*Campos obligatorios\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 987,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"tipoPersona\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 19\n    }\n  }, \"Tipo de Persona *\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"tipoPersona\",\n    name: \"tipoPersona\",\n    \"data-toggle\": \"tooltip\",\n    title: \"Seleccionar como persona Natural o Juridica\",\n    onClick: event => {\n      // here set target value to state which is 0, 1, 2, 3\n      setTipoPersona(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    selected: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 21\n    }\n  }, \"Ej. Natural\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"natural\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 21\n    }\n  }, \"Natural\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"juridica\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1005,\n      columnNumber: 21\n    }\n  }, \"Juridica\")), /*#__PURE__*/React.createElement(LeyendaError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 19\n    }\n  }, \"Campo tipo persona es requerido\")), getTipoPersonaDiv(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1012,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1013,\n      columnNumber: 19\n    }\n  }, \"Datos de contacto y ubicaci\\xF3n\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1014,\n      columnNumber: 19\n    }\n  }, \"*Campos obligatorios\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1017,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"tipoPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1018,\n      columnNumber: 19\n    }\n  }, \"Pa\\xEDs *\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"pais\",\n    id: \"tipoPais\",\n    \"data-toggle\": \"tooltip\",\n    title: \"Seleccionar pa\\xEDs de residencia\",\n    onClick: event => {\n      // here set target value to state which is 0, 1, 2, 3\n      cambiarPais(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1019,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    selected: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 21\n    }\n  }, \"Ej. Colombia\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"colombia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1032,\n      columnNumber: 21\n    }\n  }, \"Colombia\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1033,\n      columnNumber: 21\n    }\n  }, \"Alemania\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1034,\n      columnNumber: 21\n    }\n  }, \"Arabia Saudita\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 21\n    }\n  }, \"Argentina\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 21\n    }\n  }, \"Bolivia\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1037,\n      columnNumber: 21\n    }\n  }, \"Canada\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1038,\n      columnNumber: 21\n    }\n  }, \"Corea del Norte\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1039,\n      columnNumber: 21\n    }\n  }, \"China\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1040,\n      columnNumber: 21\n    }\n  }, \"Estados Unidos\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1041,\n      columnNumber: 21\n    }\n  }, \"Honkg Kong\")), /*#__PURE__*/React.createElement(LeyendaError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 19\n    }\n  }, \"Campo tipo persona es requerido\")), getTipoPaisDiv(), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1047,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1049,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 19\n    }\n  }, \"Caracter\\xEDsticas del terminal m\\xF3vil\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1055,\n      columnNumber: 19\n    }\n  }, \"*Campos obligatorios\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1057,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1059,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"tipoDispositivo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1060,\n      columnNumber: 19\n    }\n  }, \"Tipo de Dispositivo*\"), /*#__PURE__*/React.createElement(Select, {\n    nombre: \"tipoDispositivo\",\n    id: \"tipoDispositivo\",\n    \"data-toggle\": \"tooltip\",\n    title: \"Seleccionar tipo dispositivo\",\n    onClick: event => {\n      // here set target value to state which is 0, 1, 2, 3\n      setTipoDispositivo(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    selected: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1071,\n      columnNumber: 21\n    }\n  }, \"Ej. M\\xF3vil\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"telefono\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1074,\n      columnNumber: 21\n    }\n  }, \"T\\xE9lefono Inteligente\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"computador\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1075,\n      columnNumber: 21\n    }\n  }, \"Computador de Bolsillo\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dispositivo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1076,\n      columnNumber: 21\n    }\n  }, \"Dispositivo IoT\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"modulo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1077,\n      columnNumber: 21\n    }\n  }, \"M\\xF3dulo\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"reloj\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1078,\n      columnNumber: 21\n    }\n  }, \"Reloj Inteligente\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"router\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1079,\n      columnNumber: 21\n    }\n  }, \"Router\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 21\n    }\n  }, \"Otro \\xBFC\\xFAal?\")), /*#__PURE__*/React.createElement(LeyendaError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1082,\n      columnNumber: 19\n    }\n  }, \"Campo tipo persona es requerido\")), getTipoDispositivoDiv(), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1087,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1146,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1147,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1149,\n      columnNumber: 15\n    }\n  }, \"TAC *\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1150,\n      columnNumber: 15\n    }\n  }, \"En esta secci\\xF3n podr\\xE1 agregar m\\xFAltiples TAC para el modelo de terminal que est\\xE1 homologando. Tenga en cuenta que la CRC validar\\xE1 los TAC registrados en la solicitud ante la base de datos de la GSMA.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1156,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1157,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"button-carga-principal btn-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1158,\n      columnNumber: 17\n    }\n  }, \"Agregar TAC\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1160,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1163,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1164,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"tabla\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"titulo-tabla\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1167,\n      columnNumber: 15\n    }\n  }, \"Listado de TAC\"), /*#__PURE__*/React.createElement(\"table\", {\n    class: \"rwd-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1168,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1169,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1170,\n      columnNumber: 19\n    }\n  }, \"TAC\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1171,\n      columnNumber: 19\n    }\n  }, \"Acciones\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1173,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"data-th\": \"datos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1174,\n      columnNumber: 19\n    }\n  }, \"Sin datos\"), /*#__PURE__*/React.createElement(\"td\", {\n    \"data-th\": \"accion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1175,\n      columnNumber: 19\n    }\n  }, \" ... \")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1179,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1181,\n      columnNumber: 15\n    }\n  }, \" Archivos Adjuntos\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1182,\n      columnNumber: 15\n    }\n  }, \"Por favor tenga en cuenta:\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1183,\n      columnNumber: 15\n    }\n  }, \"** El tama\\xF1o total de todos los archivos adjuntos no podr\\xE1 ser mayor a 30 MB.\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1187,\n      columnNumber: 15\n    }\n  }, \"** Formatos admitidos para archivos adjuntos: Pdf, Doc, Docx, Xls, Xlsx, Gif, Png, Jpeg, Tif, Tiff, Zip y Rar\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1191,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1193,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DragArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1194,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1196,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1199,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1201,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1202,\n      columnNumber: 15\n    }\n  }, \"Aviso de T\\xE9rminos y Autorizaci\\xF3n para el Tratamiento de Datos Personales*\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1208,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ContenedorTerminos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1210,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1211,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"terminos\",\n    id: \"terminos\",\n    checked: terminos,\n    onChange: onChangeTerminos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1212,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"aceptacionFormulario\",\n    onClick: () => cambiarEstadoModalTerminos(!estadoModalTerminos),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1219,\n      columnNumber: 17\n    }\n  }, \"Acepto que he leido los T\\xE9rminos y condiciones *\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1228,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1229,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"autorizaDatos\",\n    id: \"autorizaDatos\",\n    checked: autorizaDatos,\n    onChange: onChangeDatos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1230,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"aceptacionFormulario\",\n    onClick: () => cambiarEstadoModalDatos(!estadoModalDatos),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1237,\n      columnNumber: 17\n    }\n  }, \"Autorizo el tratamiento de datos personales\"))), formularioValido === false && /*#__PURE__*/React.createElement(MensajeError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1247,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faExclamationTriangle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1248,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1249,\n      columnNumber: 19\n    }\n  }, \"Error: \"), \" Por favor rellena el formulario correctamente.\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1253,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1254,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1255,\n      columnNumber: 13\n    }\n  }, \"Verificaci\\xF3n de Seguridad *\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1256,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ReCAPTCHA, {\n    ref: captcha,\n    sitekey: \"6Lc9VDIeAAAAAHHQA1wEjx1FKlTy9uWIrZKGwwvN\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1257,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1263,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1264,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Boton, {\n    id: \"envio\",\n    type: \"submit\",\n    onClick: () => cambiarEstadoModal(!estadoModal),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1265,\n      columnNumber: 13\n    }\n  }, \"REGISTRAR SOLICITUD\"), formularioValido === true && /*#__PURE__*/React.createElement(MensajeExito, {\n    id: \"msjexito\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1273,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1274,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCheckCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1275,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1276,\n      columnNumber: 19\n    }\n  }, \"Exitosa: \"), \"Su solicitud se ha registrado satisfactoriamente\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1283,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1285,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"aside\", {\n    className: \"aside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1286,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1287,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1288,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(BotonTutoriales, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1289,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(BotonDeDudas, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1290,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1291,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1292,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CalificacionExperiencia, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1293,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1294,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1295,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(BotonInicio, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1296,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(CalificaExperienciaFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1302,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1303,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FooterGov, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1304,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    estado: estadoModal,\n    cambiarEstado: cambiarEstadoModal,\n    titulo: \"\",\n    mostrarHeader: true,\n    mostrarOverlay: true,\n    posicionModal: \"start\",\n    padding: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1307,\n      columnNumber: 7\n    }\n  }, !usuarioValido && /*#__PURE__*/React.createElement(Contenido, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1317,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1318,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1319,\n      columnNumber: 15\n    }\n  }, \"Confirmaci\\xF3n\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1320,\n      columnNumber: 15\n    }\n  }, \"\\xBFEstas seguro de registrar la informaci\\xF3n?\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1321,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ContenedorBotones, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1323,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Botoncito1, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1324,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/ProcesoSolicitud\",\n    className: \"irTramite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1325,\n      columnNumber: 19\n    }\n  }, \"ACEPTAR\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1329,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Botoncito2, {\n    onClick: () => cambiarEstadoModal(!estadoModal),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1330,\n      columnNumber: 17\n    }\n  }, \"CANCELAR\")))), usuarioValido && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1338,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1339,\n      columnNumber: 13\n    }\n  }, \"Bienvenido\"))), /*#__PURE__*/React.createElement(Modal, {\n    estado: estadoModalTerminos,\n    cambiarEstado: cambiarEstadoModalTerminos,\n    titulo: \"T\\xE9rminos y condiciones\",\n    mostrarHeader: true,\n    mostrarOverlay: true,\n    posicionModal: \"start\",\n    padding: \"20px\",\n    width: \"900px\",\n    \"min-height\": \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1345,\n      columnNumber: 7\n    }\n  }, !usuarioValido && /*#__PURE__*/React.createElement(Contenido, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1357,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1358,\n      columnNumber: 13\n    }\n  }, \"Homologaci\\xF3n de equipos terminales\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1359,\n      columnNumber: 13\n    }\n  }, \"1. Del Servicio\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1360,\n      columnNumber: 13\n    }\n  }, \"Tr\\xE1mite por medio del cual la CRC busca que un equipo terminal m\\xF3vil tenga un adecuado funcionamiento e interacci\\xF3n con las redes de comunicaciones del pa\\xEDs en t\\xE9rminos de sus frecuencias de operaci\\xF3n y que cumpla con los est\\xE1ndares internacionales sobre los l\\xEDmites de exposici\\xF3n humana a los campos electromagn\\xE9ticos para un uso seguro por parte del usuario interesado\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1368,\n      columnNumber: 13\n    }\n  }, \"Por lo anterior, para homologar un equipo terminal m\\xF3vil en Colombia, se debe realizar OBLIGATORIAMENTE la solicitud en l\\xEDnea a trav\\xE9s del formulario establecido para el efecto en el portal web (www.tramitescrcom.gov.co), en el cual se deber\\xE1 suministrar la informaci\\xF3n requerida en (http://bit.ly/homologarcelular). All\\xED podr\\xE1 encontrar una gu\\xEDa del paso a paso en videos para realizar este tr\\xE1mite.\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1377,\n      columnNumber: 13\n    }\n  }, \"2. De Las Responsabilidades de la CRC\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1378,\n      columnNumber: 13\n    }\n  }, \"La CRC es el \\xF3rgano encargado de promover la competencia en los mercados, promover el pluralismo informativo, evitar el abuso de posici\\xF3n dominante, regular los mercados de las redes y los servicios de comunicaciones y garantizar la protecci\\xF3n de los derechos de los usuarios; con el fin que la prestaci\\xF3n de los servicios sea econ\\xF3micamente eficiente, y refleje altos niveles de calidad, de las redes y los servicios de comunicaciones, incluidos los servicios de televisi\\xF3n abierta radiodifundida y de radiodifusi\\xF3n sonora.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1389,\n      columnNumber: 13\n    }\n  }, \"La CRC estudiar\\xE1 cada solicitud de homologaci\\xF3n y dar\\xE1 la RespuestaSolicitud pertinente.\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1393,\n      columnNumber: 13\n    }\n  }, \"3. Uso de los Datos Personales\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1394,\n      columnNumber: 13\n    }\n  }, \"La CRC garantiza que los datos suministrados por el usuario s\\xF3lo ser\\xE1n utilizados para la administraci\\xF3n y gesti\\xF3n del tr\\xE1mite de homologaci\\xF3n, conforme a la Ley 1581 de 2012 y de acuerdo con la\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    Target: \"_blanck\",\n    href: \"https://www.crcom.gov.co/uploads/images/files/Politica%20de%20Tratamiento%20Info%20Personal.pdf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1398,\n      columnNumber: 15\n    }\n  }, \" \", \"Pol\\xEDtica de Tratamiento de Informaci\\xF3n Personal\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1406,\n      columnNumber: 13\n    }\n  }, \"4. De los Costos\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1407,\n      columnNumber: 13\n    }\n  }, \"El tr\\xE1mite no tiene costo alguno.\")), usuarioValido && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1411,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1412,\n      columnNumber: 13\n    }\n  }, \"Bienvenido\"))), /*#__PURE__*/React.createElement(Modal, {\n    estado: estadoModalDatos,\n    cambiarEstado: cambiarEstadoModalDatos,\n    titulo: \"Politica de tratamiento de datos personales\",\n    mostrarHeader: true,\n    mostrarOverlay: true,\n    posicionModal: \"start\",\n    padding: \"20px\",\n    width: \"700px\",\n    \"min-height\": \"300px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1418,\n      columnNumber: 7\n    }\n  }, !usuarioValido && /*#__PURE__*/React.createElement(Contenido, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1430,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1431,\n      columnNumber: 13\n    }\n  }, \"La Comisi\\xF3n de Regulaci\\xF3n de Comunicaciones, como responsable del tratamiento de la informaci\\xF3n, manifiesta que no compartir\\xE1 ni entregar\\xE1 a terceros no autorizados expresamente por el titular, la informaci\\xF3n de car\\xE1cter personal, dada por los ciudadanos a la entidad, en cumplimiento de lo establecido en la Ley 1581 de 2012, para la protecci\\xF3n de Datos Personales, la Ley Estatutaria 1266 de 2008,con las disposiciones generales del Habeas Data y la regulaci\\xF3n del manejo de la informaci\\xF3n contenida en las bases de datos personales, as\\xED como la Ley 1712 de 2014, Ley de Transparencia y Derecho de Acceso a la Informaci\\xF3n P\\xFAblica Nacional.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1444,\n      columnNumber: 13\n    }\n  }, \"Para m\\xE1s informaci\\xF3n puedes consultar aqu\\xED la\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    Target: \"_blanck\",\n    href: \"https://crcom.gov.co/sites/default/files/transparencia/contenido_multimedia/Politica_de_tratamiento_info_personal.pdf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1446,\n      columnNumber: 15\n    }\n  }, \"Pol\\xEDtica de Tratamiento de Informaci\\xF3n Personal\"))), usuarioValido && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1456,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1457,\n      columnNumber: 13\n    }\n  }, \"Bienvenido\"))));\n};\n\nexport default FormularioSolicitud;\nconst Boton = styled.button`\n  border-radius: 20px;\n  border: 2px solid #1766dc;\n  background: #1766dc;\n  color: #FFFF;\n  cursor: pointer;\n  display: block;\n  font: normal bold 15px \"Works Sans\", sans-serif;\n  padding: 15px 10px;\n  transition: 0.3s ease all;\n  width: 35%;\n\n  &:hover {\n    background: #004884;\n    border-color: #004884;\n  }\n`;\n/*\n<ContenedorBotonCentrado className=\"recaptcha\">\n                <ReCAPTCHA\n                  ref={captcha}\n                  sitekey=\"6Lc9VDIeAAAAAHHQA1wEjx1FKlTy9uWIrZKGwwvN\"\n                  onChange={onChange}\n                />\n              </ContenedorBotonCentrado>\n\n              {captchaValido === false && (\n                <div className=\"error-captcha\">Por favor acepta el captcha</div>\n              )}\n*/\n\nconst Botoncito1 = styled.button`\n  background: #3366cc;\n  border-radius: 15px;\n  border: 2px solid #3366cc;\n  color: #ffff;\n  cursor: pointer;\n  display: block;\n  font: normal 500 15px \"Work Sans\", sans-serif;\n  transition: 0.3s ease all;\n  padding: 15px 10px 15px 10px;\n  width: 40%;\n\n  &:hover {\n    background: #004884;\n    border-color: #004884; \n  }\n\n  a {\n    color: #FFFF;\n  }\n`;\nconst Botoncito2 = styled.button`\n  background: #ffff;\n  border-radius: 15px;\n  border: 2px solid #3366cc;\n  color: #3366cc;\n  cursor: pointer;\n  display: block;\n  font: normal 500 15px \"Work Sans\", sans-serif;\n  transition: 0.3s ease all;\n  padding: 15px 10px 15px 10px;\n  width: 42%;\n\n  &:hover {\n    background: #3366cc;\n    color: #ffff;\n  }\n`;\nconst Contenido = styled.div`\n  display: flex;\n  padding: 20px;\n  flex-direction: column;\n  max-height: calc(100vh - 210px);\n  overflow-y: auto;\n\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n  }\n\n  h1 {\n    color: #13386d;\n    font: normal 600 18px/10px \"Montserrat\", sans-serif;\n    line-height: 1.5;\n    margin-bottom: 10px;\n  }\n\n  h6 {\n    color: #4b4b4b;\n    font: normal normal 1rem/10px \"Works Sans\", sans-serif;\n    margin: 0;\n    text-align: left;\n    line-height: 1.5;\n  }\n\n  a {\n    font: normal normal 1rem/10px \"Works Sans\", sans-serif;\n  }\n`;\nconst ContenedorBotones = styled.div`\n  padding: 0px;\n  display: flex;\n  float: left;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;","map":{"version":3,"sources":["/home/yamid/Documentos/ReactJS/puntogov/src/Pages/PruebaRespuesta/PruebaRespuesta.js"],"names":["React","useState","useRef","Link","Formik","Header","Navegacion","NavProceso","BotonTutoriales","BotonDeDudas","CalificacionExperiencia","CalificaExperienciaFooter","BotonInicio","Footer","FooterGov","Modal","FontAwesomeIcon","faExclamationTriangle","faCheckCircle","ReCAPTCHA","styled","Formulario","Label","Select","ContenedorTerminos","ContenedorBotonCentrado","LeyendaError","MensajeExito","MensajeError","ComponenteInput","ComponenteInputDisabled","DragArea","TestingDocument","MenuDesplegable","FormularioSolicitud","persona","cambiarPersona","campo","valido","tipoId","cambiarTipoId","identificacion","cambiarIdentificacion","identificacion2","cambiarIdentificacion2","nombre","cambiarNombre","nombre2","cambiarNombre2","apellido","cambiarApellido","apellido2","cambiarApellido2","nit","cambiarNit","nit2","cambiarNit2","nombreEmpresa","cambiarNombreEmpresa","nombreRLoApoderado","cambiarNombreRLoApoderado","digitoVerificacion","cambiarDigitoVerificacion","digitoVerificacion2","cambiarDigitoVerificacion2","pais","cambiarPais","departamento","cambiarDepartamento","municipio","cambiarMunicipio","direccion","cambiarDireccion","correo","cambiarCorreo","correo2","cambiarCorreo2","telefono","cambiarTelefono","nombreOtroDispositivo","cambiarNombreOtroDispositivo","marca","cambiarMarca","nombreComercial","cambiarNombreComercial","modelo","cambiarModelo","fabricante","cambiarFabricante","casoUsoDispositivo","cambiarCasoUsoDispositivo","marcaEquipoAnfitrion","cambiarMarcaEquipoAnfitrion","modeloEquipoAnfitrion","cambiarModeloEquipoAnfitrion","formularioValido","cambiarFormularioValido","terminos","cambiarTerminos","autorizaDatos","cambiarAutorizaDatos","captcha","tipoPersona","setTipoPersona","tipoIdentificacion","setTipoIdentificacion","tipoDispositivo","setTipoDispositivo","estadoModal","cambiarEstadoModal","estadoModalTerminos","cambiarEstadoModalTerminos","estadoModalDatos","cambiarEstadoModalDatos","captchaValido","cambiarCaptchaValido","usuarioValido","cambiarUsuarioValido","expresiones","usuario","password","digitoV","validarIdentificacion2","length","prevState","validarNit2","validarDigitoVerificacion2","validarCorreo2","formValues","setFormValues","marcaModulo","modeloModuloInterno","marcaEquipoFabricante","onChangeTerminos","e","target","checked","onChangeDatos","onChange","current","getValue","console","log","onSubmit","preventDefault","getTipoPersonaDiv","getTipoDispositivoDiv","getTipoPaisDiv","valores","errores","values","errors","handleSubmit","handleChange","handleBlur","event","value","Boton","button","Botoncito1","Botoncito2","Contenido","div","ContenedorBotones"],"mappings":"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,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,grBADF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DACgD,GADhD,eAEE;AACE,IAAA,MAAM,EAAC,SADT;AAEE,IAAA,IAAI,EAAC,uHAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAFF,CAdF,CAZJ,EAqCGA,aAAa,iBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAtCJ,CA9fF,CADF;AA4iBD,CA34CD;;AA64CA,eAAelF,mBAAf;AAEA,MAAM2H,KAAK,GAAGzI,MAAM,CAAC0I,MAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG3I,MAAM,CAAC0I,MAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;AAsBA,MAAME,UAAU,GAAG5I,MAAM,CAAC0I,MAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAkBA,MAAMG,SAAS,GAAG7I,MAAM,CAAC8I,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7BA;AA+BA,MAAMC,iBAAiB,GAAG/I,MAAM,CAAC8I,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA","sourcesContent":["import React, {useState, useRef} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Formik} from \"formik\";\n\n// Estilos generales del formulario\nimport \"./../../Pages/FormularioSolicitud/FormularioSolicitud.scss\";\n\n// Componentes obligatorios a mostrar en el sitio\nimport Header from \"../../components/Header/Header\";\nimport Navegacion from \"../../components/Navigation/Navegacion\";\nimport NavProceso from \"../../components/NavProceso/NavProceso\";\nimport BotonTutoriales from \"../../components/Botones/BotonTutoriales/BotonTutoriales\";\nimport BotonDeDudas from \"../../components/Botones/BotonDeDudas/BotonDeDudas\";\nimport CalificacionExperiencia from \"../../components/Cards/CalificacionExperiencia/CalificacionExperiencia\";\nimport CalificaExperienciaFooter from \"../../components/Cards/CalificacionExperiencia/CalificaExperienciaFooter\";\nimport BotonInicio from \"../../components/Botones/BotonInicio/BotonInicio\";\nimport Footer from \"../../components/Footer/Footer\";\nimport FooterGov from \"../../components/FooterGov/FooterGov\";\n// Modal a mostra antes de enviar información formulario\nimport Modal from \"../../components/Modal/Modal\";\n\n// Importación iconos para mostrar en mensajes de error o exito\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faExclamationTriangle,\n  faCheckCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Libreria para el uso de recaptcha\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\n// Libreria syled que nos permite crear componentes con diseños, despues la linea exportar se encuentran\nimport styled from \"styled-components\";\n// Importación elementos html de componente con estilos predefinidos styled\nimport { Formulario, Label, Select, ContenedorTerminos, ContenedorBotonCentrado,\n  LeyendaError, MensajeExito, MensajeError, } from \"../FormularioSolicitud/elementos/Formularios\";\n// Import componente styled con diseño predeterminado\nimport ComponenteInput from \"./../FormularioSolicitud/componentes/ComponenteInput\";\nimport ComponenteInputDisabled from \"./../FormularioSolicitud/componentes/ComponenteInputDisabled\";\nimport DragArea from \"./../FormularioSolicitud/componentes/DragArea\";\nimport TestingDocument from \"../../components/TestingDocument/TestingDocument\";\nimport MenuDesplegable from \"../../components/MenuDesplegable/MenuDesplegable\";\n\nconst FormularioSolicitud = () => {\n  // Validar Datos de identificación\n  const [persona, cambiarPersona] = useState({campo: \"\", valido: null});\n  const [tipoId, cambiarTipoId] = useState({campo: \"\", valido: null});\n  const [identificacion, cambiarIdentificacion] = useState({campo: \"\",valido: null});\n  const [identificacion2, cambiarIdentificacion2] = useState({campo: \"\", valido: null});\n  const [nombre, cambiarNombre] = useState({campo: \"\", valido: null});\n  const [nombre2, cambiarNombre2] = useState({campo: \"\", valido: null});\n  const [apellido, cambiarApellido] = useState({campo: \"\", valido: null});\n  const [apellido2, cambiarApellido2] = useState({campo: \"\", valido: null});\n\n  // Validar Datos de contacto y ubicación\n  const [nit, cambiarNit] = useState({campo: \"\", valido: null});\n  const [nit2, cambiarNit2] = useState({campo: \"\", valido: null});\n  const [nombreEmpresa, cambiarNombreEmpresa] = useState({campo: \"\", valido: null});\n  const [nombreRLoApoderado, cambiarNombreRLoApoderado] = useState({campo: \"\", valido: null});\n  const [digitoVerificacion, cambiarDigitoVerificacion] = useState({campo: \"\", valido: null});\n  const [digitoVerificacion2, cambiarDigitoVerificacion2] = useState({campo: \"\", valido: null});\n\n  // Validar Datos de contacto y ubicación\n  const [pais, cambiarPais] = useState({campo: \"\", valido: null});\n  const [departamento, cambiarDepartamento] = useState({campo: \"\", valido: null});\n  const [municipio, cambiarMunicipio] = useState({campo: \"\", valido: null});\n  const [direccion, cambiarDireccion] = useState({campo: \"\", valido: null});\n  const [correo, cambiarCorreo] = useState({campo: \"\", valido: null});\n  const [correo2, cambiarCorreo2] = useState({campo: \"\", valido: null});\n  const [telefono, cambiarTelefono] = useState({campo: \"\", valido: null});\n\n  // Validar Características del terminal móvil\n  const [nombreOtroDispositivo, cambiarNombreOtroDispositivo] = useState({campo: \"\", valido: null});\n  const [marca, cambiarMarca] = useState({campo: \"\", valido: null});\n  const [nombreComercial, cambiarNombreComercial] = useState({campo: \"\", valido: null});\n  const [modelo, cambiarModelo] = useState({ campo: \"\", valido: null });\n  const [fabricante, cambiarFabricante] = useState({ campo: \"\", valido: null });\n  const [casoUsoDispositivo, cambiarCasoUsoDispositivo] = useState({campo: \"\", valido: null});\n  const [marcaEquipoAnfitrion, cambiarMarcaEquipoAnfitrion] = useState({campo: \"\", valido: null});\n  const [modeloEquipoAnfitrion, cambiarModeloEquipoAnfitrion] = useState({campo: \"\", valido: null});\n  // Validar formulario y términos condiciones\n  const [formularioValido, cambiarFormularioValido] = useState(null);\n  const [terminos, cambiarTerminos] = useState(false);\n  const [autorizaDatos, cambiarAutorizaDatos] = useState(false);\n\n  // Referencia al captcha\n  const captcha = useRef(null);\n\n  // Dependiendo el estado seleccionado en lista desplegable, mostrar x campos en formulario\n  const [tipoPersona, setTipoPersona] = useState(null);\n  const [tipoIdentificacion, setTipoIdentificacion] = useState(null);\n  const [tipoDispositivo, setTipoDispositivo] = useState(null);\n  // Mostrar y ocultar modal\n  const [estadoModal, cambiarEstadoModal] = useState(false);\n  const [estadoModalTerminos, cambiarEstadoModalTerminos] = useState(false);\n  const [estadoModalDatos, cambiarEstadoModalDatos] = useState(false);\n\n  //Dependiendo estado captcha a seleccionado dejar enviar formulario\n  const [captchaValido, cambiarCaptchaValido] = useState(null);\n  const [usuarioValido, cambiarUsuarioValido] = useState(false);\n\n  // Expresiones regulares para validar que los campos cumplan con las condiciones\n  const expresiones = {\n    usuario: /^[a-zA-Z0-9_-]{4,16}$/, // Letras, numeros, guion y guion_bajo\n    nombre: /^[a-zA-ZÀ-ÿ\\s]{1,40}$/, // Letras y espacios, pueden llevar acentos.\n    identificacion: /^\\d{6,14}$/, // 6 a 14 numeros.\n    password: /^.{4,12}$/, // 4 a 12 digitos.\n    correo: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\n    telefono: /^\\d{7,14}$/, // 7 a 14 numeros.\n    digitoV: /^\\d{1,1}$/, // 1 a 1 numero.\n  };\n\n  // Campo confirmar Número de Identificación se igual campo a comprobar\n  const validarIdentificacion2 = () => {\n    if (identificacion.campo.length > 0) {\n      if (identificacion.campo !== identificacion2.campo) {\n        cambiarIdentificacion2((prevState) => {\n          return { ...prevState, valido: \"false\" };\n        });\n      } else {\n        cambiarIdentificacion2((prevState) => {\n          return { ...prevState, valido: \"true\" };\n        });\n      }\n    }\n  };\n\n  // Campo confirmar Número de NIT se igual campo a comprobar\n  const validarNit2 = () => {\n    if (nit.campo.length > 0) {\n      if (nit.campo !== nit2.campo) {\n        cambiarNit2((prevState) => {\n          return { ...prevState, valido: \"false\" };\n        });\n      } else {\n        cambiarNit2((prevState) => {\n          return { ...prevState, valido: \"true\" };\n        });\n      }\n    }\n  };\n\n  // Campo confirmar Número Digito veririfcacion (DV) igual campo a comprobar\n  const validarDigitoVerificacion2 = () => {\n    if (digitoVerificacion.campo.length > 0) {\n      if (digitoVerificacion.campo !== digitoVerificacion2.campo) {\n        cambiarDigitoVerificacion2((prevState) => {\n          return { ...prevState, valido: \"false\" };\n        });\n      } else {\n        cambiarDigitoVerificacion2((prevState) => {\n          return { ...prevState, valido: \"true\" };\n        });\n      }\n    }\n  };\n\n  // Campo confirmar correo electronico igual campo a comprobar\n  const validarCorreo2 = () => {\n    if (correo.campo.length > 0) {\n      if (correo.campo !== correo2.campo) {\n        cambiarCorreo2((prevState) => {\n          return { ...prevState, valido: \"false\" };\n        });\n      } else {\n        cambiarCorreo2((prevState) => {\n          return { ...prevState, valido: \"true\" };\n        });\n      }\n    }\n  };\n\n  // Obtener los datos del formulario\n  const [formValues, setFormValues] = useState({\n    tipoIdentificacion: \"\",\n    tipoId: \"\",\n    identificacion: \"\",\n    identificacion2: \"\",\n    nit: \"\",\n    digitoVerificacion: \"\",\n    nombreEmpresa: \"\",\n    nombre: \"\",\n    nombre2: \"\",\n    apellido: \"\",\n    apellido2: \"\",\n    marca: \"\",\n    nombreComercial: \"\",\n    fabricante: \"\",\n    casoUsoDispositivo: \"\",\n    marcaModulo: \"\",\n    modelo: \"\",\n    modeloModuloInterno: \"\",\n    marcaEquipoFabricante: \"\",\n    modeloEquipoAnfitrion: \"\",\n    nombreOtroDispositivo: \"\",\n    direccion: \"\",\n    correo: \"\",\n    telefono: \"\",\n    departamento: \"\",\n    municipio: \"\",\n    pais: \"\",\n    tipoPersona: \"\",\n    tipoDispositivo: \"\",\n  });\n\n  \n\n  const onChangeTerminos = (e) => {\n    cambiarTerminos(e.target.checked);\n  };\n\n  const onChangeDatos = (e) => {\n    cambiarAutorizaDatos(e.target.checked);\n  };\n\n  const onChange = () => {\n    if (captcha.current.getValue()) {\n      console.log(\"El usuario no es un robot\");\n      cambiarCaptchaValido(true);\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    //Colocar aquí la validación de los inputs del formulario. Si son correctos ya podemos enviar el formulario, actualizar la interfaz etc\n    if (captcha.current.getValue()) {\n      console.log(\"El usuario no es un robot\");\n      cambiarCaptchaValido(true);\n    } else {\n      console.log(\"Por favor acepta el captcha\");\n      cambiarCaptchaValido(false);\n    }\n\n    if (\n      identificacion.valido === \"true\" &&\n      identificacion2.valido === \"true\" &&\n      nombre.valido === \"true\" &&\n      apellido.valido === \"true\" &&\n      terminos\n    ) {\n      cambiarFormularioValido(true);\n      cambiarPersona({ campo: \"\", valido: null });\n      cambiarTipoId({ campo: \"\", valido: null });\n      cambiarIdentificacion({ campo: \"\", valido: null });\n      cambiarIdentificacion2({ campo: \"\", valido: null });\n      cambiarNombre({ campo: \"\", valido: null });\n      cambiarNombre2({ campo: \"\", valido: null });\n      cambiarApellido({ campo: \"\", valido: null });\n      cambiarApellido2({ campo: \"\", valido: null });\n      cambiarTerminos(false);\n\n      // ... Puedo ir código consumido externo como de una API\n    } else {\n      cambiarFormularioValido(false);\n    }\n  };\n\n  // Selección tipo persona\n  function getTipoPersonaDiv() {\n    switch (tipoPersona) {\n      case \"natural\":\n        return (\n          <>\n            <div>\n              <Label htmlFor=\"tipoId\">Tipo de Identificación *</Label>\n              <Select\n                id=\"tipoIdentificacion\"\n                data-toggle=\"tooltip\"\n                title=\"Seleccionar tipo documento de Identificación\"\n                name=\"tipoIdentificacion\"\n              >\n                <option value=\"1\" selected>\n                  Cédula de Ciudadania\n                </option>\n                <option value=\"2\">Cédula extranjeria</option>\n                <option value=\"3\">ID pasaporte</option>\n              </Select>\n              <LeyendaError>Campo tipo iden es requerido</LeyendaError>\n              \n            </div>\n\n            <ComponenteInput\n              estado={identificacion}\n              cambiarEstado={cambiarIdentificacion}\n              tipo=\"text\"\n              label=\"Número de Identificación *\"\n              placeholder=\"Ej: 1001245785\"\n              name=\"identificacion\"\n              leyendaError=\"Campo requerido, solo se aceptan números y minimo 6 digitos\"\n              expresionRegular={expresiones.identificacion}\n            />\n            \n            <ComponenteInput\n              estado={identificacion2}\n              cambiarEstado={cambiarIdentificacion2}\n              tipo=\"text\"\n              label=\"Confirmar Número de Identificación *\"\n              placeholder=\"Ej: 1001245785\"\n              name=\"identificacion2\"\n              leyendaError=\"Campo requerido, debe ser igual al campo identificación\"\n              funcion={validarIdentificacion2}\n            />\n\n            <ComponenteInput\n              estado={nombre}\n              cambiarEstado={cambiarNombre}\n              tipo=\"text\"\n              label=\"Primer Nombre *\"\n              placeholder=\"Ej: Pepito\"\n              name=\"nombre\"\n              leyendaError=\"Campo requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={nombre2}\n              cambiarEstado={cambiarNombre2}\n              tipo=\"text\"\n              label=\"Segundo Nombre\"\n              placeholder=\"Ej: Andres\"\n              name=\"nombre2\"\n            />\n\n            <ComponenteInput\n              estado={apellido}\n              cambiarEstado={cambiarApellido}\n              tipo=\"text\"\n              label=\"Primer Apellido *\"\n              placeholder=\"Ej: Perez\"\n              name=\"apellido\"\n              leyendaError=\"Campo requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={apellido2}\n              cambiarEstado={cambiarApellido2}\n              tipo=\"text\"\n              label=\"Segundo Apellido\"\n              placeholder=\"Ej: Rodriguez\"\n              name=\"apellido2\"\n              leyendaError=\"Campo requerido\"\n              expresionRegular={expresiones.apellido2}\n            />\n          </>\n        );\n      case \"juridica\":\n        return (\n          <>\n            <div>\n              <Label htmlFor=\"tipoId\">Tipo de Identificación *</Label>\n              <Select\n                id=\"tipoIdentificacion\"\n                data-toggle=\"tooltip\"\n                title=\"Seleccionar tipo documento de Identificación\"\n                name=\"tipoIdentificacion\"\n              >\n                <option value=\"1\" selected>\n                  Número de Identificación Tributaria (NIT)\n                </option>\n              </Select>\n              <LeyendaError>Campo tipo iden es requerido</LeyendaError>\n            </div>\n\n            <ComponenteInput\n              estado={nit}\n              cambiarEstado={cambiarNit}\n              tipo=\"text\"\n              label=\"Número de Identificación *\"\n              placeholder=\"Ej: 8603842563\"\n              name=\"nit\"\n              leyendaError=\"Campo requerido, solo se aceptan números\"\n              expresionRegular={expresiones.identificacion}\n            />\n\n            <ComponenteInput\n              estado={digitoVerificacion}\n              cambiarEstado={cambiarDigitoVerificacion}\n              tipo=\"text\"\n              label=\"Digito Verificación *\"\n              placeholder=\"Ej: 8\"\n              name=\"digitoVerificacion\"\n              leyendaError=\"Campo requerido, solo se un número\"\n              expresionRegular={expresiones.digitoV}\n            />\n\n            <ComponenteInput\n              estado={nit2}\n              cambiarEstado={cambiarNit2}\n              tipo=\"text\"\n              label=\"Confirmar Número de Identificación *\"\n              placeholder=\"Ej: 8603842563\"\n              name=\"nit2\"\n              leyendaError=\"Campo requerido, coincidir con número nit ingresado\"\n              funcion={validarNit2}\n            />\n\n            <ComponenteInput\n              estado={digitoVerificacion2}\n              cambiarEstado={cambiarDigitoVerificacion2}\n              tipo=\"text\"\n              label=\"Confirmar Digito Verificación*\"\n              placeholder=\"Ej: 8\"\n              name=\"digitoVerificacion2\"\n              leyendaError=\"Campo es requerido, coincidir con número DV ingresado\"\n              expresionRegular={expresiones.digitoV}\n              funcion={validarDigitoVerificacion2}\n            />\n\n            <ComponenteInput\n              estado={nombreEmpresa}\n              cambiarEstado={cambiarNombreEmpresa}\n              tipo=\"text\"\n              label=\"Nombre de la empresa *\"\n              placeholder=\"Ej: Microchips y Telecomunicaciones SAS\"\n              name=\"nombreEmpresa\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={nombreRLoApoderado}\n              cambiarEstado={cambiarNombreRLoApoderado}\n              tipo=\"text\"\n              label=\"Nombre Representante Legal o APoderado*\"\n              placeholder=\"Ej: Pablo Jesus Lozada Cortez\"\n              name=\"apellido\"\n              leyendaError=\"Campo primer apellido es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <ComponenteInputDisabled\n              estado={tipoId}\n              cambiarEstado={cambiarTipoId}\n              tipo=\"text\"\n              label=\"Tipo de Identificación *\"\n              placeholder=\"Ej: Cédula de Ciudadania\"\n              name=\"tipoId\"\n            />\n            <ComponenteInputDisabled\n              estado=\"identificacionSeleccion\"\n              tipo=\"text\"\n              label=\"Número de Identificación *\"\n              placeholder=\"Ej: 1234567890\"\n              name=\"identificacionSeleccion\"\n            />\n\n            <ComponenteInputDisabled\n              estado={nit2}\n              cambiarEstado={cambiarNit2}\n              tipo=\"text\"\n              label=\"Confirmar Número de Identificación *\"\n              placeholder=\"Ej: 1234567890\"\n              name=\"identificacion\"\n            />\n          </>\n        );\n    }\n  }\n\n  // Selección tipo dispositivo\n  function getTipoDispositivoDiv() {\n    switch (tipoDispositivo) {\n      case \"dispositivo\":\n        return (\n          <>\n            <span />\n            <ComponenteInput\n              estado={marca}\n              cambiarEstado={cambiarMarca}\n              tipo=\"text\"\n              label=\"Marca *\"\n              placeholder=\"Ej: Apple\"\n              name=\"marca\"\n              leyendaError=\"Campo es requerido\"\n              \n            />\n            <ComponenteInput\n              estado={nombreComercial}\n              cambiarEstado={cambiarNombreComercial}\n              tipo=\"text\"\n              label=\"Nombre Comercial *\"\n              placeholder=\"Ej: Serie 3\"\n              name=\"nombreComercial\"\n              leyendaError=\"Campo es requerido\"\n              \n            />\n\n            <ComponenteInput\n              estado={modelo}\n              cambiarEstado={cambiarModelo}\n              tipo=\"text\"\n              label=\"Modelo *\"\n              placeholder=\"Ej: Once\"\n              name=\"modelo\"\n              leyendaError=\"Campo es requerido\"\n              \n            />\n\n            <ComponenteInput\n              estado={fabricante}\n              cambiarEstado={cambiarFabricante}\n              tipo=\"text\"\n              label=\"Fabricante\"\n              placeholder=\"Ej: Huawei\"\n              name=\"fabricante\"\n            />\n            \n            <ComponenteInput\n              estado={casoUsoDispositivo}\n              cambiarEstado={cambiarCasoUsoDispositivo}\n              tipo=\"text\"\n              label=\"Caso de uso del Dispositivo*\"\n              placeholder=\"Ej: Las caracteristicas de dispositivo...\"\n              name=\"casoUsoDispositivo\"\n              leyendaError=\"Campo requerido\"\n            \n            />\n\n            \n            {/*\n            <div class=\"form-group\">\n              <label for=\"exampleFormControlTextarea1\">Escribre tus comentarios:</label>\n              <textarea\n                class=\"form-control\"\n                id=\"exampleFormControlTextarea1\"\n                placeholder=\"Ej: Caracteristicas u observaciones del dispositivo IoT decir...\"\n                rows=\"3\"\n              ></textarea>\n            </div>\n            */}\n            \n\n          </>\n        );\n      case \"modulo\":\n        return (\n          <>\n            <span />\n            <ComponenteInput\n              estado={marca}\n              cambiarEstado={cambiarMarca}\n              tipo=\"text\"\n              label=\"Marca del Módulo Interno*\"\n              placeholder=\"Ej: Apple\"\n              name=\"marcaModulo\"\n              leyendaError=\"Campo es requerido\"\n              \n            />\n            <ComponenteInput\n              estado={nombreComercial}\n              cambiarEstado={cambiarNombreComercial}\n              tipo=\"text\"\n              label=\"Nombre Comercial*\"\n              placeholder=\"Ej: Serie 3\"\n              name=\"nombreComercial\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              \n            />\n\n            <ComponenteInput\n              estado={modelo}\n              cambiarEstado={cambiarModelo}\n              tipo=\"text\"\n              label=\"Modelo del Módulo Interno*\"\n              placeholder=\"Ej: Once\"\n              name=\"modeloModuloInterno\"\n              leyendaError=\"Campo es requerido\"\n              \n            />\n\n            <ComponenteInput\n              estado={fabricante}\n              cambiarEstado={cambiarFabricante}\n              tipo=\"text\"\n              label=\"Fabricante\"\n              placeholder=\"Ej: Huawei\"\n              name=\"fabricante\"\n            />\n\n            <ComponenteInput\n              estado={marcaEquipoAnfitrion}\n              cambiarEstado={cambiarMarcaEquipoAnfitrion}\n              tipo=\"text\"\n              label=\"Marca del Equipo Anfitrión*\"\n              placeholder=\"Ej: Las caracteristicas de dispositivo...\"\n              name=\"marcaEquipoFabricante\"\n            />\n\n            <ComponenteInput\n              estado={modeloEquipoAnfitrion}\n              cambiarEstado={cambiarModeloEquipoAnfitrion}\n              tipo=\"text\"\n              label=\"Modelo del Equipo Anfitrión*\"\n              placeholder=\"Ej: Las caracteristicas de dispositivo...\"\n              name=\"modeloEquipoAnfitrion\"\n            />\n          </>\n        );\n      case \"otro\":\n        return (\n          <>\n            <ComponenteInput\n              estado={nombreOtroDispositivo}\n              cambiarEstado={cambiarNombreOtroDispositivo}\n              tipo=\"text\"\n              label=\"Nombre otro Dispositivo*\"\n              placeholder=\"Ej: Apple\"\n              name=\"nombreOtroDispositivo\"\n              leyendaError=\"Campo es requerido\"\n              \n            />\n            <ComponenteInput\n              estado={marca}\n              cambiarEstado={cambiarMarca}\n              tipo=\"text\"\n              label=\"Marca *\"\n              placeholder=\"Ej: Apple\"\n              name=\"marca\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              \n            />\n            <ComponenteInput\n              estado={nombreComercial}\n              cambiarEstado={cambiarNombreComercial}\n              tipo=\"text\"\n              label=\"Nombre Comercial *\"\n              placeholder=\"Ej: Serie 3\"\n              name=\"nombreComercial\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={modelo}\n              cambiarEstado={cambiarModelo}\n              tipo=\"text\"\n              label=\"Modelo *\"\n              placeholder=\"Ej: Once\"\n              name=\"modelo\"\n              leyendaError=\"Campo es requerido\"\n              \n            />\n\n            <ComponenteInput\n              estado={fabricante}\n              cambiarEstado={cambiarFabricante}\n              tipo=\"text\"\n              label=\"Fabricante\"\n              placeholder=\"Ej: Huawei\"\n              name=\"fabricante\"\n              leyendaError=\"Campo requerido\"\n              \n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <span />\n            <ComponenteInput\n              estado={marca}\n              cambiarEstado={cambiarMarca}\n              tipo=\"text\"\n              label=\"Marca *\"\n              placeholder=\"Ej: Marca del Fabricante Dispositivo\"\n              name=\"marca\"\n              leyendaError=\"Campo es requerido\"\n              \n            />\n            <ComponenteInput\n              estado={nombreComercial}\n              cambiarEstado={cambiarNombreComercial}\n              tipo=\"text\"\n              label=\"Nombre Comercial *\"\n              placeholder=\"Ej: Nombre Comercial del Dispositivo\"\n              name=\"nombreComercial\"\n              leyendaError=\"Campo es requerido\"\n             \n            />\n\n            <ComponenteInput\n              estado={modelo}\n              cambiarEstado={cambiarModelo}\n              tipo=\"text\"\n              label=\"Modelo *\"\n              placeholder=\"Ej: Módelo que estipula el fabricante\"\n              name=\"modelo\"\n              leyendaError=\"Campo es requerido\"\n              \n            />\n\n            <ComponenteInput\n              estado={fabricante}\n              cambiarEstado={cambiarFabricante}\n              tipo=\"text\"\n              label=\"Fabricante\"\n              placeholder=\"Ej: Fabricante de la Marca\"\n              name=\"fabricante\"\n              leyendaError=\"Campo requerido\"\n            />\n          </>\n        );\n    }\n  }\n\n  // Selección tipo dispositivo\n  function getTipoPaisDiv() {\n    switch (pais) {\n      case \"colombia\":\n        return (\n          <>\n            <MenuDesplegable />\n\n            <ComponenteInput\n              estado={direccion}\n              cambiarEstado={cambiarDireccion}\n              tipo=\"text\"\n              label=\"Dirección *\"\n              placeholder=\"Ej: CL 1 23 45\"\n              name=\"direccion\"\n              leyendaError=\"Campo es requerido\"\n              name=\"direccion\"\n            />\n\n            <ComponenteInput\n              estado={correo}\n              cambiarEstado={cambiarCorreo}\n              tipo=\"text\"\n              label=\"Correo Electrónico *\"\n              placeholder=\"Ej: falso@gmail.com\"\n              name=\"correo\"\n              leyendaError=\"Campo es requerido, cumplir con las caracteristicas de un email\"\n              expresionRegular={expresiones.correo}\n            />\n\n            <ComponenteInput\n              estado={correo2}\n              cambiarEstado={cambiarCorreo2}\n              tipo=\"text\"\n              label=\"Confirmar Correo Electrónico *\"\n              placeholder=\"Ej: falso@gmail.com\"\n              name=\"correo\"\n              leyendaError=\"Campo es requerido, coincidir con email anteriormente digitado\"\n              expresionRegular={expresiones.correo}\n              funcion={validarCorreo2}\n            />\n\n            <ComponenteInput\n              estado={telefono}\n              cambiarEstado={cambiarTelefono}\n              tipo=\"text\"\n              label=\"Teléfono Remitente *\"\n              placeholder=\"Ej: 300 123 45 67\"\n              name=\"telefono\"\n              leyendaError=\"Campo es requerido, solo se aceptan números\"\n              expresionRegular={expresiones.telefono}\n            />\n          </>\n        );\n      case \"otroPais\":\n        return (\n          <>\n            <ComponenteInputDisabled\n              estado={departamento}\n              cambiarEstado={cambiarDepartamento}\n              tipo=\"text\"\n              label=\"Departamento *\"\n              placeholder=\"Ej: Cundinamarca\"\n              name=\"departamento\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n            <ComponenteInputDisabled\n              estado={municipio}\n              cambiarEstado={cambiarMunicipio}\n              tipo=\"text\"\n              label=\"Municipio *\"\n              placeholder=\"Ej: Madrid\"\n              name=\"municipio\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n            <ComponenteInput\n              estado={direccion}\n              cambiarEstado={cambiarDireccion}\n              tipo=\"text\"\n              label=\"Dirección *\"\n              placeholder=\"Ej: CL 1 23 45\"\n              name=\"direccion\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              \n            />\n\n            <ComponenteInput\n              estado={correo}\n              cambiarEstado={cambiarCorreo}\n              tipo=\"text\"\n              label=\"Correo Electrónico *\"\n              placeholder=\"Ej: falso@gmail.com\"\n              name=\"correo\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.correo}\n            />\n\n            <ComponenteInput\n              estado={correo2}\n              cambiarEstado={cambiarCorreo2}\n              tipo=\"text\"\n              label=\"Confirmar Correo Electrónico *\"\n              placeholder=\"Ej: falso@gmail.com\"\n              name=\"correo\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.correo}\n              funcion={validarCorreo2}\n            />\n\n            <ComponenteInput\n              estado={telefono}\n              cambiarEstado={cambiarTelefono}\n              tipo=\"text\"\n              label=\"Teléfono Remitente *\"\n              placeholder=\"Ej: 300 123 45 67\"\n              name=\"telefono\"\n              leyendaError=\"Campo es requerido, solo números\"\n              expresionRegular={expresiones.telefono}\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <ComponenteInputDisabled\n              estado={departamento}\n              cambiarEstado={cambiarDepartamento}\n              tipo=\"text\"\n              label=\"Departamento *\"\n              placeholder=\"Ej: Cundinamarca\"\n              name=\"departamento\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n            <ComponenteInputDisabled\n              estado={municipio}\n              cambiarEstado={cambiarMunicipio}\n              tipo=\"text\"\n              label=\"Municipio *\"\n              placeholder=\"Ej: Madrid\"\n              name=\"municipio\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n            <ComponenteInput\n              estado={direccion}\n              cambiarEstado={cambiarDireccion}\n              tipo=\"text\"\n              label=\"Dirección *\"\n              placeholder=\"Ej: CL 1 23 45\"\n              name=\"direccion\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              \n            />\n\n            <ComponenteInput\n              estado={correo}\n              cambiarEstado={cambiarCorreo}\n              tipo=\"text\"\n              label=\"Correo Electrónico *\"\n              placeholder=\"Ej: falso@gmail.com\"\n              name=\"correo\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.correo}\n            />\n\n            <ComponenteInput\n              estado={correo2}\n              cambiarEstado={cambiarCorreo2}\n              tipo=\"text\"\n              label=\"Confirmar Correo Electrónico *\"\n              placeholder=\"Ej: falso@gmail.com\"\n              name=\"correo\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.correo}\n              funcion={validarCorreo2}\n            />\n\n            <ComponenteInput\n              estado={telefono}\n              cambiarEstado={cambiarTelefono}\n              tipo=\"text\"\n              label=\"Teléfono Remitente *\"\n              placeholder=\"Ej: 300 123 45 67\"\n              name=\"telefono\"\n              leyendaError=\"Campo es requerido, solo números\"\n              expresionRegular={expresiones.telefono}\n            />\n          </>\n        );\n    }\n  }\n\n  return (\n    <>\n      <div className=\"container\">\n        <Header />\n        <div className=\"row\">\n          <div className=\"col-md-8\">\n            <Navegacion\n              inicio=\"Inicio\"\n              pagina=\"Solicitud de Homologación...\"\n              paginaActual=\"Formulario de Solicitud de Homologación...\"\n            />\n            <NavProceso />\n\n            <br />\n            <h3 className=\"title-form\">\n              Formulario de Solicitud de Homologación de Equipos Terminales\n              Móviles\n            </h3>\n            <br />\n            <br />\n            \n            <Formik\n              initialValues={{\n                nombre: '',\n                correo: ''\n              }}\n\n              validate={(valores) => {\n                let errores = {}\n\n                if(!valores.nombre){\n                  errores.nombre = 'Por favor ingrsa un nombre'\n                }\n\n                return errores\n              }}\n\n              onSubmit={(valores) => {\n                console.log(valores.nombre)\n                console.log('Formulario enviado')\n              }}\n            >\n              {({values, errors, handleSubmit, handleChange, handleBlur}) => ( //Destructuramos para no poner props\n                <form className=\"formulario\" onSubmit={handleSubmit}> {/* Al destructura ya no se utiliza props.handeSubmit*/}\n                {console.log(errors)} \n                <div>\n                  <label htmlFor=\"nombre\">Nombre</label>\n                  <input \n                    type=\"text\" \n                    id=\"nombre\" \n                    name=\"nombre\" \n                    placeholder=\"John\" \n                    value={values.nombre} \n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"correo\">Correo</label>\n                  <input \n                    type=\"text\" \n                    id=\"correo\" \n                    name=\"correo\" \n                    placeholder=\"correo@gmail.com\" \n                    value={values.correo} \n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                </div>\n                <button type=\"submit\">Enviar</button>\n                </form>\n                \n                )}\n              </Formik>\n              <Formulario onSubmit={onSubmit}>\n                <div className=\"titulo-indicativo\">\n                  <h4 className=\"subtitle-form\">Datos de identificación</h4>\n                  <p className=\"txt-obliga\">*Campos obligatorios</p>\n                </div>\n\n                <span />\n\n                <div>\n                  <Label htmlFor=\"tipoPersona\">Tipo de Persona *</Label>\n                  <Select\n                    id=\"tipoPersona\"\n                    name=\"tipoPersona\"\n                    data-toggle=\"tooltip\"\n                    title=\"Seleccionar como persona Natural o Juridica\"\n                    onClick={(event) => {\n                      // here set target value to state which is 0, 1, 2, 3\n                      setTipoPersona(event.target.value);\n                    }}\n                  >\n                    <option value=\"\" selected hidden>\n                      Ej. Natural\n                    </option>\n                    <option value=\"natural\">Natural</option>\n                    <option value=\"juridica\">Juridica</option>\n                  </Select>\n                  <LeyendaError>Campo tipo persona es requerido</LeyendaError>\n                </div>\n\n                {getTipoPersonaDiv()}\n\n                <div className=\"col-md-12 titulo-indicativo\">\n                  <h4 className=\"subtitle-form\">Datos de contacto y ubicación</h4>\n                  <p className=\"txt-obliga\">*Campos obligatorios</p>\n                </div>\n                <span />\n                <div>\n                  <Label htmlFor=\"tipoPais\">País *</Label>\n                  <Select\n                    name=\"pais\"\n                    id=\"tipoPais\"\n                    data-toggle=\"tooltip\"\n                    title=\"Seleccionar país de residencia\"\n                    onClick={(event) => {\n                      // here set target value to state which is 0, 1, 2, 3\n                      cambiarPais(event.target.value);\n                    }}\n                  >\n                    <option value=\"\" selected hidden>\n                      Ej. Colombia\n                    </option>\n                    <option value=\"colombia\">Colombia</option>\n                    <option value=\"otroPais\">Alemania</option>\n                    <option value=\"otroPais\">Arabia Saudita</option>\n                    <option value=\"otroPais\">Argentina</option>\n                    <option value=\"otroPais\">Bolivia</option>\n                    <option value=\"otroPais\">Canada</option>\n                    <option value=\"otroPais\">Corea del Norte</option>\n                    <option value=\"otroPais\">China</option>\n                    <option value=\"otroPais\">Estados Unidos</option>\n                    <option value=\"otroPais\">Honkg Kong</option>\n                  </Select>\n                  <LeyendaError>Campo tipo persona es requerido</LeyendaError>\n                </div>\n\n                {getTipoPaisDiv()}\n                <br />\n\n                <br />\n\n                <div className=\"col-md-12 titulo-indicativo\">\n                  <h4 className=\"subtitle-form\">\n                    Características del terminal móvil\n                  </h4>\n                  <p className=\"txt-obliga\">*Campos obligatorios</p>\n                </div>\n                <br />\n\n                <div>\n                  <Label htmlFor=\"tipoDispositivo\">Tipo de Dispositivo*</Label>\n                  <Select\n                  nombre=\"tipoDispositivo\"\n                    id=\"tipoDispositivo\"\n                    data-toggle=\"tooltip\"\n                    title=\"Seleccionar tipo dispositivo\"\n                    onClick={(event) => {\n                      // here set target value to state which is 0, 1, 2, 3\n                      setTipoDispositivo(event.target.value);\n                    }}\n                  >\n                    <option value=\"\" selected hidden>\n                      Ej. Móvil\n                    </option>\n                    <option value=\"telefono\">Télefono Inteligente</option>\n                    <option value=\"computador\">Computador de Bolsillo</option>\n                    <option value=\"dispositivo\">Dispositivo IoT</option>\n                    <option value=\"modulo\">Módulo</option>\n                    <option value=\"reloj\">Reloj Inteligente</option>\n                    <option value=\"router\">Router</option>\n                    <option value=\"otro\">Otro ¿Cúal?</option>\n                  </Select>\n                  <LeyendaError>Campo tipo persona es requerido</LeyendaError>\n                </div>\n\n                {getTipoDispositivoDiv()}\n\n                <br />\n                {/*\n                  <ComponenteInput\n                  estado={tipoDeDispositivo}\n                  cambiarEstado={cambiarTipoDeDispositivo}\n                  tipo=\"text\"\n                  label=\"Tipo de Dispositivo *\"\n                  placeholder=\"Ej: Télefono Inteligente\"\n                  name=\"tipoDeDispositivo\"\n                  leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                  expresionRegular={expresiones.nombre}\n                />\n\n                <ComponenteInput\n                  estado={marca}\n                  cambiarEstado={cambiarMarca}\n                  tipo=\"text\"\n                  label=\"Marca *\"\n                  placeholder=\"Ej: Apple\"\n                  name=\"marca\"\n                  leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                  expresionRegular={expresiones.nombre}\n                />\n\n                <ComponenteInput\n                  estado={nombreComercial}\n                  cambiarEstado={cambiarNombreComercial}\n                  tipo=\"text\"\n                  label=\"Nombre Comercial *\"\n                  placeholder=\"Ej: Serie 3\"\n                  name=\"nombreComercial\"\n                  leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                  expresionRegular={expresiones.nombre}\n                />\n\n                <ComponenteInput\n                  estado={modelo}\n                  cambiarEstado={cambiarModelo}\n                  tipo=\"text\"\n                  label=\"Modelo *\"\n                  placeholder=\"Ej: Once\"\n                  name=\"modelo\"\n                  leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                  expresionRegular={expresiones.nombre}\n                />\n\n                <ComponenteInput\n                  estado={fabricante}\n                  cambiarEstado={cambiarFabricante}\n                  tipo=\"text\"\n                  label=\"Fabricante\"\n                  placeholder=\"Ej: Huawei\"\n                  name=\"fabricante\"\n                  leyendaError=\"Campo requerido\"\n                  expresionRegular={expresiones.apellido2}\n                />\n                */}\n              </Formulario>\n            \n            <br />\n            <br />\n            <div className=\"col-md-12 titulo-indicativo\">\n              <h4 className=\"subtitle-form\">TAC *</h4>\n              <p className=\"txt-obliga\">\n                En esta sección podrá agregar múltiples TAC para el modelo de\n                terminal que está homologando. Tenga en cuenta que la CRC\n                validará los TAC registrados en la solicitud ante la base de\n                datos de la GSMA.\n              </p>\n              <br />\n              <div>\n                <span class=\"button-carga-principal btn-file\">\n                  Agregar TAC\n                  <input type=\"file\" />\n                </span>\n              </div>\n              <br />\n              <br />\n            </div>\n            <div class=\"tabla\">\n              <p class=\"titulo-tabla\">Listado de TAC</p>\n              <table class=\"rwd-table\">\n                <tr>\n                  <th>TAC</th>\n                  <th>Acciones</th>\n                </tr>\n                <tr>\n                  <td data-th=\"datos\">Sin datos</td>\n                  <td data-th=\"accion\"> ... </td>\n                </tr>\n              </table>\n            </div>\n            <br />\n            <div className=\"col-md-12 titulo-indicativo\">\n              <h4 className=\"subtitle-form\"> Archivos Adjuntos</h4>\n              <p className=\"txt-obliga\">Por favor tenga en cuenta:</p>\n              <p className=\"txt-obliga\">\n                ** El tamaño total de todos los archivos adjuntos no podrá ser\n                mayor a 30 MB.\n              </p>\n              <p className=\"txt-obliga\">\n                ** Formatos admitidos para archivos adjuntos: Pdf, Doc, Docx,\n                Xls, Xlsx, Gif, Png, Jpeg, Tif, Tiff, Zip y Rar\n              </p>\n              <br />\n\n              <div>\n                <DragArea />\n              </div>\n              <br />\n            </div>\n\n            <br />\n\n            <div className=\"col-md-12 titulo-indicativo\">\n              <h4 className=\"subtitle-form\">\n                Aviso de Términos y Autorización para el Tratamiento de Datos\n                Personales*\n              </h4>\n            </div>\n\n            <br />\n\n            <ContenedorTerminos>\n              <Label>\n                <input\n                  type=\"checkbox\"\n                  name=\"terminos\"\n                  id=\"terminos\"\n                  checked={terminos}\n                  onChange={onChangeTerminos}\n                />\n                <a\n                  className=\"aceptacionFormulario\"\n                  onClick={() =>\n                    cambiarEstadoModalTerminos(!estadoModalTerminos)\n                  }\n                >\n                  Acepto que he leido los Términos y condiciones *\n                </a>\n              </Label>\n              <br />\n              <Label>\n                <input\n                  type=\"checkbox\"\n                  name=\"autorizaDatos\"\n                  id=\"autorizaDatos\"\n                  checked={autorizaDatos}\n                  onChange={onChangeDatos}\n                />\n                <a\n                  className=\"aceptacionFormulario\"\n                  onClick={() => cambiarEstadoModalDatos(!estadoModalDatos)}\n                >\n                  Autorizo el tratamiento de datos personales\n                </a>\n              </Label>\n            </ContenedorTerminos>\n            {formularioValido === false && (\n              <MensajeError>\n                <p>\n                  <FontAwesomeIcon icon={faExclamationTriangle} />\n                  <b>Error: </b> Por favor rellena el formulario correctamente.\n                </p>\n              </MensajeError>\n            )}\n            <br />\n            <br />\n            <h4 className=\"subtitle-form\">Verificación de Seguridad *</h4>\n            <br />\n            <ReCAPTCHA\n              ref={captcha}\n              sitekey=\"6Lc9VDIeAAAAAHHQA1wEjx1FKlTy9uWIrZKGwwvN\"\n              onChange={onChange}\n            />\n\n            <br />\n            <br />\n            <Boton\n              id=\"envio\"\n              type=\"submit\"\n              onClick={() => cambiarEstadoModal(!estadoModal)}\n            >\n              REGISTRAR SOLICITUD\n            </Boton>\n            {formularioValido === true && (\n              <MensajeExito id=\"msjexito\">\n                <p>\n                  <FontAwesomeIcon icon={faCheckCircle} />\n                  <b>Exitosa: </b>Su solicitud se ha registrado\n                  satisfactoriamente\n                </p>\n              </MensajeExito>\n            )}\n          </div>\n\n          <div className=\"col-md-1\"></div>\n\n          <div className=\"col-md-3 p-0\">\n            <aside className=\"aside\">\n              <br />\n              <br />\n              <BotonTutoriales />\n              <BotonDeDudas />\n              <br />\n              <br />\n              <CalificacionExperiencia />\n              <br />\n              <br />\n              <BotonInicio />\n            </aside>\n          </div>\n        </div>\n        {/* END CONTAINER */}\n      </div>\n      <CalificaExperienciaFooter />\n      <Footer />\n      <FooterGov />\n\n      {/* MODAL DE ACEPTAR FORMULARIO */}\n      <Modal\n        estado={estadoModal}\n        cambiarEstado={cambiarEstadoModal}\n        titulo=\"\"\n        mostrarHeader={true}\n        mostrarOverlay={true}\n        posicionModal={\"start\"}\n        padding={\"20px\"}\n      >\n        {!usuarioValido && (\n          <Contenido>\n            <form>\n              <h1>Confirmación</h1>\n              <h6>¿Estas seguro de registrar la información?</h6>\n              <br />\n\n              <ContenedorBotones>\n                <Botoncito1 type=\"submit\">\n                  <Link to=\"/ProcesoSolicitud\" className=\"irTramite\">\n                    ACEPTAR\n                  </Link>\n                </Botoncito1>\n                <br />\n                <Botoncito2 onClick={() => cambiarEstadoModal(!estadoModal)}>\n                  CANCELAR\n                </Botoncito2>\n              </ContenedorBotones>\n            </form>\n          </Contenido>\n        )}\n        {usuarioValido && (\n          <div>\n            <h1>Bienvenido</h1>\n          </div>\n        )}\n      </Modal>\n\n      {/* MODAL TERMINOS Y CONDICIONES */}\n      <Modal\n        estado={estadoModalTerminos}\n        cambiarEstado={cambiarEstadoModalTerminos}\n        titulo=\"Términos y condiciones\"\n        mostrarHeader={true}\n        mostrarOverlay={true}\n        posicionModal={\"start\"}\n        padding={\"20px\"}\n        width={\"900px\"}\n        min-height={\"400px\"}\n      >\n        {!usuarioValido && (\n          <Contenido>\n            <h1>Homologación de equipos terminales</h1>\n            <h2>1. Del Servicio</h2>\n            <p>\n              Trámite por medio del cual la CRC busca que un equipo terminal\n              móvil tenga un adecuado funcionamiento e interacción con las redes\n              de comunicaciones del país en términos de sus frecuencias de\n              operación y que cumpla con los estándares internacionales sobre\n              los límites de exposición humana a los campos electromagnéticos\n              para un uso seguro por parte del usuario interesado\n            </p>\n            <p>\n              Por lo anterior, para homologar un equipo terminal móvil en\n              Colombia, se debe realizar OBLIGATORIAMENTE la solicitud en línea\n              a través del formulario establecido para el efecto en el portal\n              web (www.tramitescrcom.gov.co), en el cual se deberá suministrar\n              la información requerida en (http://bit.ly/homologarcelular). Allí\n              podrá encontrar una guía del paso a paso en videos para realizar\n              este trámite.\n            </p>\n            <h2>2. De Las Responsabilidades de la CRC</h2>\n            <p>\n              La CRC es el órgano encargado de promover la competencia en los\n              mercados, promover el pluralismo informativo, evitar el abuso de\n              posición dominante, regular los mercados de las redes y los\n              servicios de comunicaciones y garantizar la protección de los\n              derechos de los usuarios; con el fin que la prestación de los\n              servicios sea económicamente eficiente, y refleje altos niveles de\n              calidad, de las redes y los servicios de comunicaciones, incluidos\n              los servicios de televisión abierta radiodifundida y de\n              radiodifusión sonora.\n            </p>\n            <p>\n              La CRC estudiará cada solicitud de homologación y dará la\n              RespuestaSolicitud pertinente.\n            </p>\n            <h2>3. Uso de los Datos Personales</h2>\n            <p>\n              La CRC garantiza que los datos suministrados por el usuario sólo\n              serán utilizados para la administración y gestión del trámite de\n              homologación, conforme a la Ley 1581 de 2012 y de acuerdo con la{\" \"}\n              <a\n                Target=\"_blanck\"\n                href=\"https://www.crcom.gov.co/uploads/images/files/Politica%20de%20Tratamiento%20Info%20Personal.pdf\"\n              >\n                {\" \"}\n                Política de Tratamiento de Información Personal\n              </a>\n            </p>\n            <h2>4. De los Costos</h2>\n            <p>El trámite no tiene costo alguno.</p>\n          </Contenido>\n        )}\n        {usuarioValido && (\n          <div>\n            <h1>Bienvenido</h1>\n          </div>\n        )}\n      </Modal>\n\n      {/* MODAL TRATAMIENTO DE DATOS */}\n      <Modal\n        estado={estadoModalDatos}\n        cambiarEstado={cambiarEstadoModalDatos}\n        titulo=\"Politica de tratamiento de datos personales\"\n        mostrarHeader={true}\n        mostrarOverlay={true}\n        posicionModal={\"start\"}\n        padding={\"20px\"}\n        width={\"700px\"}\n        min-height={\"300px\"}\n      >\n        {!usuarioValido && (\n          <Contenido>\n            <p>\n              La Comisión de Regulación de Comunicaciones, como responsable del\n              tratamiento de la información, manifiesta que no compartirá ni\n              entregará a terceros no autorizados expresamente por el titular,\n              la información de carácter personal, dada por los ciudadanos a la\n              entidad, en cumplimiento de lo establecido en la Ley 1581 de 2012,\n              para la protección de Datos Personales, la Ley Estatutaria 1266 de\n              2008,con las disposiciones generales del Habeas Data y la\n              regulación del manejo de la información contenida en las bases de\n              datos personales, así como la Ley 1712 de 2014, Ley de\n              Transparencia y Derecho de Acceso a la Información Pública\n              Nacional.\n            </p>\n            <p>\n              Para más información puedes consultar aquí la{\" \"}\n              <a\n                Target=\"_blanck\"\n                href=\"https://crcom.gov.co/sites/default/files/transparencia/contenido_multimedia/Politica_de_tratamiento_info_personal.pdf\"\n              >\n                Política de Tratamiento de Información Personal\n              </a>\n            </p>\n          </Contenido>\n        )}\n        {usuarioValido && (\n          <div>\n            <h1>Bienvenido</h1>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default FormularioSolicitud;\n\nconst Boton = styled.button`\n  border-radius: 20px;\n  border: 2px solid #1766dc;\n  background: #1766dc;\n  color: #FFFF;\n  cursor: pointer;\n  display: block;\n  font: normal bold 15px \"Works Sans\", sans-serif;\n  padding: 15px 10px;\n  transition: 0.3s ease all;\n  width: 35%;\n\n  &:hover {\n    background: #004884;\n    border-color: #004884;\n  }\n`;\n\n\n/*\n<ContenedorBotonCentrado className=\"recaptcha\">\n                <ReCAPTCHA\n                  ref={captcha}\n                  sitekey=\"6Lc9VDIeAAAAAHHQA1wEjx1FKlTy9uWIrZKGwwvN\"\n                  onChange={onChange}\n                />\n              </ContenedorBotonCentrado>\n\n              {captchaValido === false && (\n                <div className=\"error-captcha\">Por favor acepta el captcha</div>\n              )}\n*/\n\nconst Botoncito1 = styled.button`\n  background: #3366cc;\n  border-radius: 15px;\n  border: 2px solid #3366cc;\n  color: #ffff;\n  cursor: pointer;\n  display: block;\n  font: normal 500 15px \"Work Sans\", sans-serif;\n  transition: 0.3s ease all;\n  padding: 15px 10px 15px 10px;\n  width: 40%;\n\n  &:hover {\n    background: #004884;\n    border-color: #004884; \n  }\n\n  a {\n    color: #FFFF;\n  }\n`;\n\nconst Botoncito2 = styled.button`\n  background: #ffff;\n  border-radius: 15px;\n  border: 2px solid #3366cc;\n  color: #3366cc;\n  cursor: pointer;\n  display: block;\n  font: normal 500 15px \"Work Sans\", sans-serif;\n  transition: 0.3s ease all;\n  padding: 15px 10px 15px 10px;\n  width: 42%;\n\n  &:hover {\n    background: #3366cc;\n    color: #ffff;\n  }\n`;\n\nconst Contenido = styled.div`\n  display: flex;\n  padding: 20px;\n  flex-direction: column;\n  max-height: calc(100vh - 210px);\n  overflow-y: auto;\n\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n  }\n\n  h1 {\n    color: #13386d;\n    font: normal 600 18px/10px \"Montserrat\", sans-serif;\n    line-height: 1.5;\n    margin-bottom: 10px;\n  }\n\n  h6 {\n    color: #4b4b4b;\n    font: normal normal 1rem/10px \"Works Sans\", sans-serif;\n    margin: 0;\n    text-align: left;\n    line-height: 1.5;\n  }\n\n  a {\n    font: normal normal 1rem/10px \"Works Sans\", sans-serif;\n  }\n`;\n\nconst ContenedorBotones = styled.div`\n  padding: 0px;\n  display: flex;\n  float: left;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/yamid/Documentos/ReactJS/puntogov/src/Pages/PRUEBAS/Prueba/Prueba.js\";\nimport React, { useState } from \"react\"; // Libreria validación formulario\n\nimport { Formik, Form, ErrorMessage } from \"formik\"; // Libreria complemento para validación y estilos\n\nimport * as Yup from \"yup\";\nimport Select from \"react-select\"; //import { Link } from \"react-router-dom\";\n\nimport Footer from \"../../../components/Footer/Footer\";\nimport FooterGov from \"../../../components/FooterGov/FooterGov\";\nimport Header from \"../../../components/Header/Header\";\nimport Navegacion from \"../../../components/Navigation/Navegacion\";\nimport NavProceso from \"../../../components/NavProceso/NavProceso\";\nimport BotonInicio from \"../../../components/Botones/BotonInicio/BotonInicio\";\nimport BotonTutoriales from \"../../../components/Botones/BotonTutoriales/BotonTutoriales\";\nimport BotonDeDudas from \"../../../components/Botones/BotonDeDudas/BotonDeDudas\";\nimport CalificacionExperiencia from \"../../../components/Cards/CalificacionExperiencia/CalificacionExperiencia\"; // Libreria para subir archivos\n\nimport { useFileUpload } from \"use-file-upload\";\nimport \"./Prueba.css\"; // Importar estilos de campos\n\nimport { PageWrapper, Title, Label, Input, StyledInlineErrorMessage, Submit, CodeWrapper } from \"./styles\";\nimport Modals from \"./Modals\"; // Validación para campos\n\nconst validationSchema = Yup.object().shape({\n  fullname: Yup.string().min(2, \"Your name is too short\").max(5, \"Max 5 letras\").required(\"Please enter your full name\").matches(/^[aA-zZs]+$/, \"solo se aceptan letras\"),\n  email: Yup.string().email(\"The email is incorrect\").required(\"Please enter your email\")\n}); // Se importo import Select from 'react-select'\n// Se crea componente select con opciones\n\nconst options = [{\n  value: \"chocolate\",\n  label: \"Chocolate\"\n}, {\n  value: \"strawberry\",\n  label: \"Strawberry\"\n}, {\n  value: \"vanilla\",\n  label: \"Vanilla\"\n}];\n\nconst MyComponent = () => /*#__PURE__*/React.createElement(Select, {\n  \"data-toggle\": \"tooltip\",\n  title: \"Seleccionar pa\\xEDs de residencia\",\n  placeholder: \"Colombia\",\n  options: options,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }\n});\n\nconst Prueba = () => {\n  // Obtener valores de campo\n  const [formValues, setFormValues] = useState();\n  const [file, selectFile] = useFileUpload();\n  const [file2, selectFile2] = useFileUpload();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const [formularioEnviado, setFormularioEnviado] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8 p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Navegacion, {\n    inicio: \"Inicio\",\n    pagina: \"Solicitud de Homologaci\\xF3n\",\n    paginaActual: \"Solicitud de Homologaci\\xF3n de Equipos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NavProceso, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modals, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      // Single File Upload accepts only images\n      selectFile({\n        accept: \"image/*, application/pdf,application/vnd.ms-excel\"\n      }, _ref => {\n        let {\n          source,\n          name,\n          size,\n          file\n        } = _ref;\n        // file - is the raw File Object\n        console.log({\n          source,\n          name,\n          size,\n          file\n        }); // Todo: Upload to cloud.\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"+ Etiqueta del equipo*\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      // Single File Upload accepts only images\n      selectFile2({\n        accept: \"image/*, application/pdf,application/vnd.ms-excel\"\n      }, _ref2 => {\n        let {\n          source,\n          name,\n          size,\n          file\n        } = _ref2;\n        // file - is the raw File Object\n        console.log({\n          source,\n          name,\n          size,\n          file\n        }); // Todo: Upload to cloud.\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"+ Certificado de conformidad de normas t\\xE9cnias (opcional)\"), file ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabla\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"titulo-tabla\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, \"Archivos para Homologaci\\xF3n\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"rwd-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, \"Nombre del Archivo\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, \"Archivo Cargado \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, \"Accion\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"data-th\": \"etiqueta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, \"Etiqueta del equipo *\"), /*#__PURE__*/React.createElement(\"td\", {\n    \"data-th\": \"archivo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 27\n    }\n  }, \" Name: \", file.name, \" \")), /*#__PURE__*/React.createElement(\"td\", {\n    \"data-tj\": \"accion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, \"ELIMINAR\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"data-th\": \"etiqueta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }, \"Certificado de conformidad de normas t\\xE9cnicas (opcional)\"), /*#__PURE__*/React.createElement(\"td\", {\n    \"data-th\": \"archivo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 27\n    }\n  }, \" Size: \", file2.name, \" \")), /*#__PURE__*/React.createElement(\"td\", {\n    \"data-tj\": \"accion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }, \"ELIMINAR\"))))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabla\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"titulo-tabla\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, \"Archivos para Homologaci\\xF3n\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"rwd-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, \"Nombre del Archivo\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, \"Archivo Cargado \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, \"Accion\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"data-th\": \"etiqueta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, \"Etiqueta del equipo *\"), /*#__PURE__*/React.createElement(\"td\", {\n    \"data-th\": \"archivo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 27\n    }\n  }, \"Sin Datos\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"data-tj\": \"accion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"data-th\": \"etiqueta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, \"Certificado de conformidad de normas t\\xE9cnicas (opcional)\"), /*#__PURE__*/React.createElement(\"td\", {\n    \"data-th\": \"archivo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 27\n    }\n  }, \"Sin Datos\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"data-tj\": \"accion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  })))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      fullname: \"\",\n      email: \"\"\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values, actions) => {\n      console.log(values);\n      setFormValues(values);\n      const timeOut = setTimeout(() => {\n        actions.setSubmitting(false);\n        clearTimeout(timeOut);\n      }, 1000);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, _ref3 => {\n    let {\n      values,\n      errors,\n      touched,\n      handleSubmit,\n      isSubmitting,\n      isValidating,\n      isValid\n    } = _ref3;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"title-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }\n    }, \"Solicitud de Homologaci\\xF3n de Equipos Terminales M\\xF3viles\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"titulo-indicativo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"subtitle-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 23\n      }\n    }, \"Datos de identificaci\\xF3n\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"txt-obliga\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 23\n      }\n    }, \"*Campos obligatorios\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 p-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"fullname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 23\n      }\n    }, \"Fullname\", /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"fullname\",\n      autoCorrect: \"off\",\n      autoComplete: \"name\",\n      placeholder: \"your fullname\",\n      valid: touched.fullname && !errors.fullname,\n      error: touched.fullname && errors.fullname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 25\n      }\n    })), errors.fullname && touched.fullname && /*#__PURE__*/React.createElement(StyledInlineErrorMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }\n    }, errors.fullname)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 p-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 23\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      autoCapitalize: \"off\",\n      autoCorrect: \"off\",\n      autoComplete: \"email\",\n      placeholder: \"your email\",\n      valid: touched.email && !errors.email,\n      error: touched.email && errors.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 23\n      }\n    }, msg => /*#__PURE__*/React.createElement(StyledInlineErrorMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 27\n      }\n    }, msg))), /*#__PURE__*/React.createElement(Submit, {\n      type: \"submit\",\n      disabled: !isValid || isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }\n    }, isSubmitting ? `Submiting...` : `Registrar`));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-1 p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"aside\", {\n    className: \"aside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(BotonTutoriales, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(BotonDeDudas, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CalificacionExperiencia, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(BotonInicio, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FooterGov, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Prueba;\n/*\n<h1>Basic</h1>\n\n            *Contenedor Formik del formulario\n            <Formik\n              //Valores Iniciales Formik\n              initialValues={\n                {\n                  nombre: '',\n                  correo: ''\n                }\n              }\n              // Validaciones Formik\n              validate={(valores) => {\n                let errores = {}\n\n                if(!valores.nombre) {\n                  errores.nombre = 'Campo nombre es obligatorio'\n                } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(valores.nombre)) {\n                  errores.nombre = 'El nombre solo puede contener letras y espacios'\n                }\n\n                if(!valores.correo) {\n                  errores.correo = 'Campo correo es obligatorio'\n                } else if (!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(valores.correo)) {\n                  errores.correo = 'No cumple con los parametros para un email@email.co'\n                }\n\n                if(!valores.pais) {\n                  errores.pais = 'Campo pais es obligatorio'\n                } \n\n                return errores\n              }}\n\n              // Envío formulario Formik\n              onSubmit = {(valores, {resetForm}) => {\n                resetForm()\n                console.log('Formulario enviado')\n                setFormularioEnviado(true)\n                setTimeout(() => setFormularioEnviado(false), 3000)\n                //console.log(valores)\n                console.log(valores.pais)\n                \n              }}\n            >\n              \n              Estructura render props (destructuramos): se renderiza este formulario. Al tenerlo en una funcion se puede agregar valores de formik\n              Funcion que va dentro del componente Formik y nos permite inyectar informacion como los errores\n              \n              {({errors}) => ( \n                <Form className=\"formulario\">\n                  console.log(errors)\n                  <div>\n                    <label htmlFor=\"nombre\">Nombre</label>\n                    <Field\n                      type=\"text\"\n                      id=\"nombre\"\n                      name=\"nombre\"\n                      placeholder=\"John Doe\"\n                    />\n                    <ErrorMessage name=\"nombre\" component={() => (\n                        <div className=\"error\">{errors.nombre}</div>\n                      )} \n                    />\n                    \n                  </div>\n                  <div>\n                    <label htmlFor=\"correo\">Correo</label>\n                    <Field\n                      type=\"text\"\n                      id=\"correo\"\n                      name=\"correo\"\n                      placeholder=\"correo@correo.com\"\n                    />\n                    <ErrorMessage name=\"correo\" component={() => (\n                        <div className=\"error\">{errors.correo}</div>\n                      )} \n                    />\n                  </div>\n                  \n                  <div>\n                    <Field name=\"pais\" as=\"select\">\n                      <option value=\"arg\">Argentina</option>\n                      <option value=\"br\">Brasil</option>\n                      <option value=\"col\">Colombia</option>\n                      <option value=\"mx\">Mexico</option>\n                    </Field>\n                  </div>\n                  \n                  <div>\n                    <label>\n                      <Field type=\"radio\" name=\"sexo\" value=\"hombre\" /> Hombre\n                    </label>\n                    <label>\n                      <Field type=\"radio\" name=\"sexo\" value=\"mujer\" /> Mujer\n                    </label>\n                  </div>    \n                 \n                  <div>\n                    <Field name=\"mensaje\" as=\"textarea\" placeholder=\"Mensaje\" />\n                  </div>\n                \n                  <button type=\"submit\">Enviar</button>\n                  {formularioEnviado && <p className=\"exito\">Formulario enviado con exito!</p>}\n                </Form>\n              )}\n              \n              {({values, errors, touched, handleSubmit, handleChange, handleBlur}) => ( //Estructura render props (destructuramos): se renderiza este formulario. Al tenerlo en una funcion se puede agregar valores de formik\n                <form className=\"formulario\" onSubmit={handleSubmit}>\n                  console.log(errors)\n                  <div>\n                    <label htmlFor=\"nombre\">Nombre</label>\n                    <input\n                      type=\"text\"\n                      id=\"nombre\"\n                      name=\"nombre\"\n                      placeholder=\"John Doe\"\n                      value={values.nombre}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {touched.nombre && errors.nombre && <div className=\"error\">{errors.nombre}</div>}\n                  </div>\n                  <div>\n                    <label htmlFor=\"correo\">Correo</label>\n                    <input\n                      type=\"text\"\n                      id=\"correo\"\n                      name=\"correo\"\n                      placeholder=\"correo@correo.com\"\n                      value={values.correo}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {touched.correo && errors.correo && <div className=\"error\">{errors.correo}</div>}\n                  </div>\n                  <button type=\"submit\">Enviar</button>\n                  {formularioEnviado && <p className=\"exito\">Formulario enviado con exito!</p>}\n                </form>\n              )}\n              }\n            </Formik>\n*/\n//Estilos campos formularios y validaciones estilos\n\n/*\nconst colores = {\n  borde: \"#3366CC\",\n  error: \"#A80521\",\n  exito: \"#3366CC\",\n};\n\nconst Formulario = styled.form`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n\n  @media (max-width: 800px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst Label = styled.label`\n  display: block;\n  font: normal 500 16px Work Sans;\n  line-height: 1.5;\n  margin: 0;\n  color: #4B4B4B;\n  padding: padding: 22px 0px 0px 0px;\n  cursor: pointer;\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      color: ${colores.error};\n    `}\n`;\n\nconst GrupoInput = styled.div`\n  position: relative;\n  z-index: 90;\n`;\n\nconst Input = styled.input`\n  gap: 20px;\n  width: 100%;\n  background: #fff;\n  border-radius: 3px;\n  height: 35px;\n  line-height: 35px;\n  padding: 0 40px 0 10px;\n  transition: 0.3s ease all;\n  border: 1px solid #bababa;\n\n  &:focus {\n    border: 1px solid ${colores.borde};\n    outline: none;\n    box-shadow: 3px 0px 30px rgba(163, 163, 163, 0.4);\n  }\n\n  ${(props) =>\n    props.valido === \"true\" &&\n    css`\n      border: 1px solid #bababa;\n    `}\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      border: 1px solid ${colores.error} !important;\n    `}\n`;\n\nconst InputDisabled = styled.input`\n  width: 100%;\n  background: #fff;\n  border-radius: 3px;\n  height: 35px;\n  line-height: 35px;\n  padding: 0 40px 0 10px;\n  transition: 0.3s ease all;\n  border: 1px solid #bababa;\n\n  &:focus {\n    border: 1px solid ${colores.borde};\n    outline: none;\n    box-shadow: 3px 0px 30px rgba(163, 163, 163, 0.4);\n  }\n\n  ${(props) =>\n    props.valido === \"true\" &&\n    css`\n      border: 1px solid #bababa;\n    `}\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      border: 1px solid ${colores.error} !important;\n    `}\n`;\n\nconst LeyendaError = styled.p`\n  display: none;\n  font-size: 12px;\n  margin-bottom: 0;\n  color: ${colores.error};\n  display: none;\n\n  ${(props) =>\n    props.valido === \"true\" &&\n    css`\n      display: none;\n    `}\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      display: block;\n    `}\n`;\n\nconst ContenedorTerminos = styled.div`\n  grid-column: span 2;\n\n  input {\n    margin-right: 10px;\n  }\n\n  @media (max-width: 800px) {\n    grid-column: span1;\n  }\n`;\n\nconst ContenedorBotonCentrado = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  grid-column: span 2;\n\n  @media (max-width: 800px) {\n    grid-column: span1;\n  }\n`;\n\nconst Boton = styled.button`\n  display: flex;\n  background-color: #3366cc;\n  border: 1.5px solid #3366cc;\n  border-radius: 30px;\n  color: #ffff;\n  font: normal bold 15px \"Works Sans\", sans-serif;\n  margin: 0px 0px 100px 0px;\n  padding: 15px 5px 15px 5px;\n  text-transform: uppercase;\n  white-space: pre-line;\n  width: 30%;\n  /*\n  display: flex;\n  height: 40px;\n  line-height: 30px;\n  width: 30%;\n  background: #004884;\n  color: #fff;\n  font: normal 600 16px/1.55px \"Work Sans\", sans-serift;\n  border: none;\n  border-radius: 25px;\n  cursor: pointer;\n  transition: .1s ease all;\n  */\n\n/*\n  a {\n    color: #ffff;\n    font: normal bold 15px/14px \"Works Sans\", sans-serif;\n  }\n\n  &:hover {\n    background-color: #004884;\n    border-color: #004884;\n  }\n`;\n\nconst MensajeExito = styled.p`\n  width: 100%;\n  height: 45%;\n  text-align: center;\n  line-height: 45px;\n  background: #069169;\n  padding: 10px 0px 0px 0px;\n  margin: 12px 0px 0px 0px;\n  border-radius: 3px;\n  grid-column: span 2;\n\n  p {\n    padding: 10px;\n    text-align: center;\n    color: #ffff;\n  }\n  b {\n    margin-left: 10px;\n  }\n`;\n\nconst MensajeError = styled.div`\n  height: 45px;\n  line-height: 45px;\n  background: ${colores.error};\n  padding: 0px 5px;\n  border-radius: 3px;\n  grid-column: span 2;\n  p {\n    padding: 2px 0px 2px 0px;\n    text-align: center;\n    color: #ffff;\n  }\n  b {\n    margin-left: 10px;\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  background: #fff;\n  border-radius: 3px;\n  height: 35px;\n  line-height: 35px;\n  padding: 0 40px 0 10px;\n  transition: 0.3s ease all;\n  border: 1px solid #bababa;\n\n  &:focus {\n    border: 1px solid ${colores.borde};\n    outline: none;\n    box-shadow: 3px 0px 30px rgba(163, 163, 163, 0.4);\n  }\n\n  ${(props) =>\n    props.valido === \"true\" &&\n    css`\n      border: 1px solid #bababa;\n    `}\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      border: 1px solid ${colores.error} !important;\n    `}\n`;\n*/","map":{"version":3,"sources":["/home/yamid/Documentos/ReactJS/puntogov/src/Pages/PRUEBAS/Prueba/Prueba.js"],"names":["React","useState","Formik","Form","ErrorMessage","Yup","Select","Footer","FooterGov","Header","Navegacion","NavProceso","BotonInicio","BotonTutoriales","BotonDeDudas","CalificacionExperiencia","useFileUpload","PageWrapper","Title","Label","Input","StyledInlineErrorMessage","Submit","CodeWrapper","Modals","validationSchema","object","shape","fullname","string","min","max","required","matches","email","options","value","label","MyComponent","Prueba","formValues","setFormValues","file","selectFile","file2","selectFile2","handleSubmit","e","preventDefault","formularioEnviado","setFormularioEnviado","accept","source","name","size","console","log","values","actions","timeOut","setTimeout","setSubmitting","clearTimeout","errors","touched","isSubmitting","isValidating","isValid","msg"],"mappings":"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":["import React, { useState } from \"react\";\n// Libreria validación formulario\nimport { Formik, Form, ErrorMessage } from \"formik\";\n// Libreria complemento para validación y estilos\nimport * as Yup from \"yup\";\n\nimport Select from \"react-select\";\n\n//import { Link } from \"react-router-dom\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport FooterGov from \"../../../components/FooterGov/FooterGov\";\nimport Header from \"../../../components/Header/Header\";\nimport Navegacion from \"../../../components/Navigation/Navegacion\";\nimport NavProceso from \"../../../components/NavProceso/NavProceso\";\n\nimport BotonInicio from \"../../../components/Botones/BotonInicio/BotonInicio\";\nimport BotonTutoriales from \"../../../components/Botones/BotonTutoriales/BotonTutoriales\";\nimport BotonDeDudas from \"../../../components/Botones/BotonDeDudas/BotonDeDudas\";\n\nimport CalificacionExperiencia from \"../../../components/Cards/CalificacionExperiencia/CalificacionExperiencia\";\n\n// Libreria para subir archivos\nimport { useFileUpload } from \"use-file-upload\";\n\nimport \"./Prueba.css\";\n\n// Importar estilos de campos\nimport {\n  PageWrapper,\n  Title,\n  Label,\n  Input,\n  StyledInlineErrorMessage,\n  Submit,\n  CodeWrapper,\n} from \"./styles\";\n\nimport Modals from \"./Modals\";\n\n// Validación para campos\nconst validationSchema = Yup.object().shape({\n  fullname: Yup.string()\n    .min(2, \"Your name is too short\")\n    .max(5, \"Max 5 letras\")\n    .required(\"Please enter your full name\")\n    .matches(/^[aA-zZs]+$/, \"solo se aceptan letras\"),\n  email: Yup.string()\n    .email(\"The email is incorrect\")\n    .required(\"Please enter your email\"),\n});\n\n// Se importo import Select from 'react-select'\n// Se crea componente select con opciones\n\nconst options = [\n  { value: \"chocolate\", label: \"Chocolate\" },\n  { value: \"strawberry\", label: \"Strawberry\" },\n  { value: \"vanilla\", label: \"Vanilla\" },\n];\n\nconst MyComponent = () => (\n  <Select\n    data-toggle=\"tooltip\"\n    title=\"Seleccionar país de residencia\"\n    placeholder=\"Colombia\"\n    options={options}\n  />\n);\n\nconst Prueba = () => {\n  // Obtener valores de campo\n  const [formValues, setFormValues] = useState();\n\n  const [file, selectFile] = useFileUpload();\n  const [file2, selectFile2] = useFileUpload();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  const [formularioEnviado, setFormularioEnviado] = useState(false);\n\n  return (\n    <>\n      <div className=\"container\">\n        <Header />\n        <div className=\"row\">\n          <div className=\"col-md-8 p-0\">\n            <Navegacion\n              inicio=\"Inicio\"\n              pagina=\"Solicitud de Homologación\"\n              paginaActual=\"Solicitud de Homologación de Equipos\"\n            />\n\n            <NavProceso />\n            <br />\n            <Modals />\n            <br />\n            {/* Select dinamico libreria */}\n            <Select options={options} />\n            <br />\n\n            {/* CARGA BASICA DE ARCHIVOS */}\n            <div>\n              <button\n                onClick={() => {\n                  // Single File Upload accepts only images\n                  selectFile(\n                    {\n                      accept:\n                        \"image/*, application/pdf,application/vnd.ms-excel\",\n                    },\n                    ({ source, name, size, file }) => {\n                      // file - is the raw File Object\n                      console.log({ source, name, size, file });\n                      // Todo: Upload to cloud.\n                    }\n                  );\n                }}\n              >\n                + Etiqueta del equipo*\n              </button>\n\n              <br />\n              <br />\n\n              <button\n                onClick={() => {\n                  // Single File Upload accepts only images\n                  selectFile2(\n                    {\n                      accept:\n                        \"image/*, application/pdf,application/vnd.ms-excel\",\n                    },\n                    ({ source, name, size, file }) => {\n                      // file - is the raw File Object\n                      console.log({ source, name, size, file });\n                      // Todo: Upload to cloud.\n                    }\n                  );\n                }}\n              >\n                + Certificado de conformidad de normas técnias (opcional)\n              </button>\n\n              {file ? (\n                <>\n                  {/* <img src={file.source} alt=\"preview\" /> */}\n                  <div className=\"tabla\">\n                    <p className=\"titulo-tabla\">Archivos para Homologación</p>\n                    <table className=\"rwd-table\">\n                      <tr>\n                        <th>Nombre del Archivo</th>\n                        <th>Archivo Cargado </th>\n                        <th>Accion</th>\n                      </tr>\n                      <tr>\n                        <td data-th=\"etiqueta\">Etiqueta del equipo *</td>\n                        <td data-th=\"archivo\">\n                          <span> Name: {file.name} </span>\n                        </td>\n                        <td data-tj=\"accion\">ELIMINAR</td>\n                      </tr>\n                      <tr>\n                        <td data-th=\"etiqueta\">\n                          Certificado de conformidad de normas técnicas\n                          (opcional)\n                        </td>\n                        <td data-th=\"archivo\">\n                          {\" \"}\n                          <span> Size: {file2.name} </span>\n                        </td>\n                        <td data-tj=\"accion\">ELIMINAR</td>\n                      </tr>\n                    </table>\n                  </div>\n                </>\n              ) : (\n                <>\n                  <div className=\"tabla\">\n                    <p className=\"titulo-tabla\">Archivos para Homologación</p>\n                    <table className=\"rwd-table\">\n                      <tr>\n                        <th>Nombre del Archivo</th>\n                        <th>Archivo Cargado </th>\n                        <th>Accion</th>\n                      </tr>\n                      <tr>\n                        <td data-th=\"etiqueta\">Etiqueta del equipo *</td>\n                        <td data-th=\"archivo\">\n                          <span>Sin Datos</span>\n                        </td>\n                        <td data-tj=\"accion\"></td>\n                      </tr>\n                      <tr>\n                        <td data-th=\"etiqueta\">\n                          Certificado de conformidad de normas técnicas\n                          (opcional)\n                        </td>\n                        <td data-th=\"archivo\">\n                          {\" \"}\n                          <span>Sin Datos</span>\n                        </td>\n                        <td data-tj=\"accion\"></td>\n                      </tr>\n                    </table>\n                  </div>\n                </>\n              )}\n            </div>\n\n            <br />\n\n            <Formik\n              initialValues={{\n                fullname: \"\",\n                email: \"\",\n              }}\n              validationSchema={validationSchema}\n              onSubmit={(values, actions) => {\n                console.log(values);\n                setFormValues(values);\n\n                const timeOut = setTimeout(() => {\n                  actions.setSubmitting(false);\n\n                  clearTimeout(timeOut);\n                }, 1000);\n              }}\n            >\n              {({\n                values,\n                errors,\n                touched,\n                handleSubmit,\n                isSubmitting,\n                isValidating,\n                isValid,\n              }) => {\n                return (\n                  <>\n                    <h3 className=\"title-form\">\n                      Solicitud de Homologación de Equipos Terminales Móviles\n                    </h3>\n\n                    <div className=\"titulo-indicativo\">\n                      <h4 className=\"subtitle-form\">Datos de identificación</h4>\n                      <p className=\"txt-obliga\">*Campos obligatorios</p>\n                    </div>\n\n                    <div className=\"col-md-6 p-1\">\n                      <Label htmlFor=\"fullname\">\n                        Fullname\n                        <Input\n                          type=\"text\"\n                          name=\"fullname\"\n                          autoCorrect=\"off\"\n                          autoComplete=\"name\"\n                          placeholder=\"your fullname\"\n                          valid={touched.fullname && !errors.fullname}\n                          error={touched.fullname && errors.fullname}\n                        />\n                      </Label>\n                      {errors.fullname && touched.fullname && (\n                        <StyledInlineErrorMessage>\n                          {errors.fullname}\n                        </StyledInlineErrorMessage>\n                      )}\n                    </div>\n\n                    <div className=\"col-md-6 p-1\">\n                      <Label htmlFor=\"email\">\n                        Email\n                        <Input\n                          type=\"email\"\n                          name=\"email\"\n                          autoCapitalize=\"off\"\n                          autoCorrect=\"off\"\n                          autoComplete=\"email\"\n                          placeholder=\"your email\"\n                          valid={touched.email && !errors.email}\n                          error={touched.email && errors.email}\n                        />\n                      </Label>\n                      <ErrorMessage name=\"email\">\n                        {(msg) => (\n                          <StyledInlineErrorMessage>\n                            {msg}\n                          </StyledInlineErrorMessage>\n                        )}\n                      </ErrorMessage>\n                    </div>\n\n                    <Submit type=\"submit\" disabled={!isValid || isSubmitting}>\n                      {isSubmitting ? `Submiting...` : `Registrar`}\n                    </Submit>\n                  </>\n                );\n              }}\n            </Formik>\n          </div>\n\n          <div className=\"col-md-1 p-0\"></div>\n          <div className=\"col-md-3 p-0\">\n            <aside className=\"aside\">\n              <br />\n              <br />\n              <BotonTutoriales />\n              <BotonDeDudas />\n              <br />\n              <br />\n              <CalificacionExperiencia />\n              <br />\n              <br />\n              <BotonInicio />\n            </aside>\n          </div>\n        </div>\n      </div>\n      <Footer />\n      <FooterGov />\n    </>\n  );\n};\n\nexport default Prueba;\n\n/*\n<h1>Basic</h1>\n\n            *Contenedor Formik del formulario\n            <Formik\n              //Valores Iniciales Formik\n              initialValues={\n                {\n                  nombre: '',\n                  correo: ''\n                }\n              }\n              // Validaciones Formik\n              validate={(valores) => {\n                let errores = {}\n\n                if(!valores.nombre) {\n                  errores.nombre = 'Campo nombre es obligatorio'\n                } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(valores.nombre)) {\n                  errores.nombre = 'El nombre solo puede contener letras y espacios'\n                }\n\n                if(!valores.correo) {\n                  errores.correo = 'Campo correo es obligatorio'\n                } else if (!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(valores.correo)) {\n                  errores.correo = 'No cumple con los parametros para un email@email.co'\n                }\n\n                if(!valores.pais) {\n                  errores.pais = 'Campo pais es obligatorio'\n                } \n\n                return errores\n              }}\n\n              // Envío formulario Formik\n              onSubmit = {(valores, {resetForm}) => {\n                resetForm()\n                console.log('Formulario enviado')\n                setFormularioEnviado(true)\n                setTimeout(() => setFormularioEnviado(false), 3000)\n                //console.log(valores)\n                console.log(valores.pais)\n                \n              }}\n            >\n              \n              Estructura render props (destructuramos): se renderiza este formulario. Al tenerlo en una funcion se puede agregar valores de formik\n              Funcion que va dentro del componente Formik y nos permite inyectar informacion como los errores\n              \n              {({errors}) => ( \n                <Form className=\"formulario\">\n                  console.log(errors)\n                  <div>\n                    <label htmlFor=\"nombre\">Nombre</label>\n                    <Field\n                      type=\"text\"\n                      id=\"nombre\"\n                      name=\"nombre\"\n                      placeholder=\"John Doe\"\n                    />\n                    <ErrorMessage name=\"nombre\" component={() => (\n                        <div className=\"error\">{errors.nombre}</div>\n                      )} \n                    />\n                    \n                  </div>\n                  <div>\n                    <label htmlFor=\"correo\">Correo</label>\n                    <Field\n                      type=\"text\"\n                      id=\"correo\"\n                      name=\"correo\"\n                      placeholder=\"correo@correo.com\"\n                    />\n                    <ErrorMessage name=\"correo\" component={() => (\n                        <div className=\"error\">{errors.correo}</div>\n                      )} \n                    />\n                  </div>\n                  \n                  <div>\n                    <Field name=\"pais\" as=\"select\">\n                      <option value=\"arg\">Argentina</option>\n                      <option value=\"br\">Brasil</option>\n                      <option value=\"col\">Colombia</option>\n                      <option value=\"mx\">Mexico</option>\n                    </Field>\n                  </div>\n                  \n                  <div>\n                    <label>\n                      <Field type=\"radio\" name=\"sexo\" value=\"hombre\" /> Hombre\n                    </label>\n                    <label>\n                      <Field type=\"radio\" name=\"sexo\" value=\"mujer\" /> Mujer\n                    </label>\n                  </div>    \n                 \n                  <div>\n                    <Field name=\"mensaje\" as=\"textarea\" placeholder=\"Mensaje\" />\n                  </div>\n                \n                  <button type=\"submit\">Enviar</button>\n                  {formularioEnviado && <p className=\"exito\">Formulario enviado con exito!</p>}\n                </Form>\n              )}\n              \n              {({values, errors, touched, handleSubmit, handleChange, handleBlur}) => ( //Estructura render props (destructuramos): se renderiza este formulario. Al tenerlo en una funcion se puede agregar valores de formik\n                <form className=\"formulario\" onSubmit={handleSubmit}>\n                  console.log(errors)\n                  <div>\n                    <label htmlFor=\"nombre\">Nombre</label>\n                    <input\n                      type=\"text\"\n                      id=\"nombre\"\n                      name=\"nombre\"\n                      placeholder=\"John Doe\"\n                      value={values.nombre}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {touched.nombre && errors.nombre && <div className=\"error\">{errors.nombre}</div>}\n                  </div>\n                  <div>\n                    <label htmlFor=\"correo\">Correo</label>\n                    <input\n                      type=\"text\"\n                      id=\"correo\"\n                      name=\"correo\"\n                      placeholder=\"correo@correo.com\"\n                      value={values.correo}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    {touched.correo && errors.correo && <div className=\"error\">{errors.correo}</div>}\n                  </div>\n                  <button type=\"submit\">Enviar</button>\n                  {formularioEnviado && <p className=\"exito\">Formulario enviado con exito!</p>}\n                </form>\n              )}\n              }\n            </Formik>\n*/\n\n//Estilos campos formularios y validaciones estilos\n/*\nconst colores = {\n  borde: \"#3366CC\",\n  error: \"#A80521\",\n  exito: \"#3366CC\",\n};\n\nconst Formulario = styled.form`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n\n  @media (max-width: 800px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst Label = styled.label`\n  display: block;\n  font: normal 500 16px Work Sans;\n  line-height: 1.5;\n  margin: 0;\n  color: #4B4B4B;\n  padding: padding: 22px 0px 0px 0px;\n  cursor: pointer;\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      color: ${colores.error};\n    `}\n`;\n\nconst GrupoInput = styled.div`\n  position: relative;\n  z-index: 90;\n`;\n\nconst Input = styled.input`\n  gap: 20px;\n  width: 100%;\n  background: #fff;\n  border-radius: 3px;\n  height: 35px;\n  line-height: 35px;\n  padding: 0 40px 0 10px;\n  transition: 0.3s ease all;\n  border: 1px solid #bababa;\n\n  &:focus {\n    border: 1px solid ${colores.borde};\n    outline: none;\n    box-shadow: 3px 0px 30px rgba(163, 163, 163, 0.4);\n  }\n\n  ${(props) =>\n    props.valido === \"true\" &&\n    css`\n      border: 1px solid #bababa;\n    `}\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      border: 1px solid ${colores.error} !important;\n    `}\n`;\n\nconst InputDisabled = styled.input`\n  width: 100%;\n  background: #fff;\n  border-radius: 3px;\n  height: 35px;\n  line-height: 35px;\n  padding: 0 40px 0 10px;\n  transition: 0.3s ease all;\n  border: 1px solid #bababa;\n\n  &:focus {\n    border: 1px solid ${colores.borde};\n    outline: none;\n    box-shadow: 3px 0px 30px rgba(163, 163, 163, 0.4);\n  }\n\n  ${(props) =>\n    props.valido === \"true\" &&\n    css`\n      border: 1px solid #bababa;\n    `}\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      border: 1px solid ${colores.error} !important;\n    `}\n`;\n\nconst LeyendaError = styled.p`\n  display: none;\n  font-size: 12px;\n  margin-bottom: 0;\n  color: ${colores.error};\n  display: none;\n\n  ${(props) =>\n    props.valido === \"true\" &&\n    css`\n      display: none;\n    `}\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      display: block;\n    `}\n`;\n\nconst ContenedorTerminos = styled.div`\n  grid-column: span 2;\n\n  input {\n    margin-right: 10px;\n  }\n\n  @media (max-width: 800px) {\n    grid-column: span1;\n  }\n`;\n\nconst ContenedorBotonCentrado = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  grid-column: span 2;\n\n  @media (max-width: 800px) {\n    grid-column: span1;\n  }\n`;\n\nconst Boton = styled.button`\n  display: flex;\n  background-color: #3366cc;\n  border: 1.5px solid #3366cc;\n  border-radius: 30px;\n  color: #ffff;\n  font: normal bold 15px \"Works Sans\", sans-serif;\n  margin: 0px 0px 100px 0px;\n  padding: 15px 5px 15px 5px;\n  text-transform: uppercase;\n  white-space: pre-line;\n  width: 30%;\n  /*\n  display: flex;\n  height: 40px;\n  line-height: 30px;\n  width: 30%;\n  background: #004884;\n  color: #fff;\n  font: normal 600 16px/1.55px \"Work Sans\", sans-serift;\n  border: none;\n  border-radius: 25px;\n  cursor: pointer;\n  transition: .1s ease all;\n  */\n/*\n  a {\n    color: #ffff;\n    font: normal bold 15px/14px \"Works Sans\", sans-serif;\n  }\n\n  &:hover {\n    background-color: #004884;\n    border-color: #004884;\n  }\n`;\n\nconst MensajeExito = styled.p`\n  width: 100%;\n  height: 45%;\n  text-align: center;\n  line-height: 45px;\n  background: #069169;\n  padding: 10px 0px 0px 0px;\n  margin: 12px 0px 0px 0px;\n  border-radius: 3px;\n  grid-column: span 2;\n\n  p {\n    padding: 10px;\n    text-align: center;\n    color: #ffff;\n  }\n  b {\n    margin-left: 10px;\n  }\n`;\n\nconst MensajeError = styled.div`\n  height: 45px;\n  line-height: 45px;\n  background: ${colores.error};\n  padding: 0px 5px;\n  border-radius: 3px;\n  grid-column: span 2;\n  p {\n    padding: 2px 0px 2px 0px;\n    text-align: center;\n    color: #ffff;\n  }\n  b {\n    margin-left: 10px;\n  }\n`;\n\nconst Select = styled.select`\n  width: 100%;\n  background: #fff;\n  border-radius: 3px;\n  height: 35px;\n  line-height: 35px;\n  padding: 0 40px 0 10px;\n  transition: 0.3s ease all;\n  border: 1px solid #bababa;\n\n  &:focus {\n    border: 1px solid ${colores.borde};\n    outline: none;\n    box-shadow: 3px 0px 30px rgba(163, 163, 163, 0.4);\n  }\n\n  ${(props) =>\n    props.valido === \"true\" &&\n    css`\n      border: 1px solid #bababa;\n    `}\n\n  ${(props) =>\n    props.valido === \"false\" &&\n    css`\n      border: 1px solid ${colores.error} !important;\n    `}\n`;\n*/\n"]},"metadata":{},"sourceType":"module"}
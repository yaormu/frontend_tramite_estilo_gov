{"ast":null,"code":"var _jsxFileName = \"/home/yamid/Documentos/ReactJS/puntogov/src/Pages/FormularioSolicitud/FormularioSolicitud.js\";\nimport React, { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\"; // Estilos generales del formulario\n\nimport \"./FormularioSolicitud.scss\"; // Componentes obligatorios a mostrar en el sitio\n\nimport Header from \"../../components/Header/Header\";\nimport Navigation from \"../../components/Navigation/Navigation\";\nimport NavProceso from \"../../components/NavProceso/NavProceso\";\nimport BotonTutoriales from \"../../components/Botones/BotonTutoriales/BotonTutoriales\";\nimport BotonDeDudas from \"../../components/Botones/BotonDeDudas/BotonDeDudas\";\nimport CalificacionExperiencia from \"../../components/Cards/CalificacionExperiencia/CalificacionExperiencia\";\nimport BotonInicio from \"../../components/Botones/BotonInicio/BotonInicio\";\nimport Footer from \"../../components/Footer/Footer\";\nimport FooterGov from \"../../components/FooterGov/FooterGov\"; // Modal a mostra antes de enviar información formulario\n\nimport Modal from \"../../components/Modal/Modal\"; // Importación iconos para mostrar en mensajes de error o exito\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExclamationTriangle, faCheckCircle } from \"@fortawesome/free-solid-svg-icons\"; // Libreria para el uso de recaptcha\n\nimport ReCAPTCHA from \"react-google-recaptcha\"; // Libreria syled que nos permite crear componentes con diseños, despues la linea exportar se encuentran\n\nimport styled from \"styled-components\"; // Importación elementos html de componente con estilos predefinidos styled\n\nimport { Formulario, Label, Select, Boton, ContenedorTerminos, ContenedorBotonCentrado, LeyendaError, MensajeExito, MensajeError } from \"./elementos/Formularios\"; // Import componente styled con diseño predeterminado\n\nimport ComponenteInput from \"./componentes/ComponenteInput\";\nimport ComponenteInputDisabled from \"./componentes/ComponenteInputDisabled\";\nimport DragArea from \"./componentes/DragArea\";\nimport TestingDocument from \"../../components/TestingDocument/TestingDocument\";\n\nconst FormularioSolicitud = () => {\n  // Validar Datos de identificación\n  const [persona, cambiarPersona] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [tipoId, cambiarTipoId] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [identificacion, cambiarIdentificacion] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [identificacion2, cambiarIdentificacion2] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nombre, cambiarNombre] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nombre2, cambiarNombre2] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [apellido, cambiarApellido] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [apellido2, cambiarApellido2] = useState({\n    campo: \"\",\n    valido: null\n  }); // Validar Datos de contacto y ubicación\n\n  const [nit, cambiarNit] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nit2, cambiarNit2] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nombreEmpresa, cambiarNombreEmpresa] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nombreRLoApoderado, cambiarNombreRLoApoderado] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [digitoVerificacion, cambiarDigitoVerificacion] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [digitoVerificacion2, cambiarDigitoVerificacion2] = useState({\n    campo: \"\",\n    valido: null\n  }); // Validar Datos de contacto y ubicación\n\n  const [pais, cambiarPais] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [departamento, cambiarDepartamento] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [municipio, cambiarMunicipio] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [direccion, cambiarDireccion] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [correo, cambiarCorreo] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [correo2, cambiarCorreo2] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [telefono, cambiarTelefono] = useState({\n    campo: \"\",\n    valido: null\n  }); // Validar Características del terminal móvil\n\n  const [nombreOtroDispositivo, cambiarNombreOtroDispositivo] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [marca, cambiarMarca] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nombreComercial, cambiarNombreComercial] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [modelo, cambiarModelo] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [fabricante, cambiarFabricante] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [casoUsoDispositivo, cambiarCasoUsoDispositivo] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [marcaEquipoAnfitrion, cambiarMarcaEquipoAnfitrion] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [modeloEquipoAnfitrion, cambiarModeloEquipoAnfitrion] = useState({\n    campo: \"\",\n    valido: null\n  }); // Validar formulario y términos condiciones\n\n  const [formularioValido, cambiarFormularioValido] = useState(null);\n  const [terminos, cambiarTerminos] = useState(false); // Referencia al captcha\n\n  const captcha = useRef(null); // Dependiendo el estado seleccionado en lista desplegable, mostrar x campos en formulario\n\n  const [tipoPersona, setTipoPersona] = useState(null);\n  const [tipoIdentificacion, setTipoIdentificacion] = useState(null);\n  const [tipoDispositivo, setTipoDispositivo] = useState(null); // Mostrar y ocultar modal\n\n  const [estadoModal, cambiarEstadoModal] = useState(false); //Dependiendo estado captcha a seleccionado dejar enviar formulario\n\n  const [captchaValido, cambiarCaptchaValido] = useState(null);\n  const [usuarioValido, cambiarUsuarioValido] = useState(false); // Expresiones regulares para validar que los campos cumplan con las condiciones\n\n  const expresiones = {\n    usuario: /^[a-zA-Z0-9_-]{4,16}$/,\n    // Letras, numeros, guion y guion_bajo\n    nombre: /^[a-zA-ZÀ-ÿ\\s]{1,40}$/,\n    // Letras y espacios, pueden llevar acentos.\n    identificacion: /^\\d{6,14}$/,\n    // 6 a 14 numeros.\n    password: /^.{4,12}$/,\n    // 4 a 12 digitos.\n    correo: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\n    telefono: /^\\d{7,14}$/,\n    // 7 a 14 numeros.\n    digitoV: /^\\d{1,1}$/ // 1 a 1 numero.\n\n  }; // Campo confirmar Número de Identificación se igual campo a comprobar\n\n  const validarIdentificacion2 = () => {\n    if (identificacion.campo.length > 0) {\n      if (identificacion.campo !== identificacion2.campo) {\n        cambiarIdentificacion2(prevState => {\n          return { ...prevState,\n            valido: \"false\"\n          };\n        });\n      } else {\n        cambiarIdentificacion2(prevState => {\n          return { ...prevState,\n            valido: \"true\"\n          };\n        });\n      }\n    }\n  }; // Campo confirmar Número de NIT se igual campo a comprobar\n\n\n  const validarNit2 = () => {\n    if (nit.campo.length > 0) {\n      if (nit.campo !== nit2.campo) {\n        cambiarNit2(prevState => {\n          return { ...prevState,\n            valido: \"false\"\n          };\n        });\n      } else {\n        cambiarNit2(prevState => {\n          return { ...prevState,\n            valido: \"true\"\n          };\n        });\n      }\n    }\n  }; // Campo confirmar Número Digito veririfcacion (DV) igual campo a comprobar\n\n\n  const validarDigitoVerificacion2 = () => {\n    if (digitoVerificacion.campo.length > 0) {\n      if (digitoVerificacion.campo !== digitoVerificacion2.campo) {\n        cambiarDigitoVerificacion2(prevState => {\n          return { ...prevState,\n            valido: \"false\"\n          };\n        });\n      } else {\n        cambiarDigitoVerificacion2(prevState => {\n          return { ...prevState,\n            valido: \"true\"\n          };\n        });\n      }\n    }\n  }; // Campo confirmar correo electronico igual campo a comprobar\n\n\n  const validarCorreo2 = () => {\n    if (correo.campo.length > 0) {\n      if (correo.campo !== correo2.campo) {\n        cambiarCorreo2(prevState => {\n          return { ...prevState,\n            valido: \"false\"\n          };\n        });\n      } else {\n        cambiarCorreo2(prevState => {\n          return { ...prevState,\n            valido: \"true\"\n          };\n        });\n      }\n    }\n  };\n\n  const onChangeTerminos = e => {\n    cambiarTerminos(e.target.checked);\n  };\n\n  const onChange = () => {\n    if (captcha.current.getValue()) {\n      console.log(\"El usuario no es un robot\");\n      cambiarCaptchaValido(true);\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); //Colocar aquí la validación de los inputs del formulario. Si son correctos ya podemos enviar el formulario, actualizar la interfaz etc\n\n    if (captcha.current.getValue()) {\n      console.log(\"El usuario no es un robot\");\n      cambiarCaptchaValido(true);\n    } else {\n      console.log(\"Por favor acepta el captcha\");\n      cambiarCaptchaValido(false);\n    }\n\n    if (identificacion.valido === \"true\" && identificacion2.valido === \"true\" && nombre.valido === \"true\" && apellido.valido === \"true\" && terminos) {\n      cambiarFormularioValido(true);\n      cambiarPersona({\n        campo: \"\",\n        valido: null\n      });\n      cambiarTipoId({\n        campo: \"\",\n        valido: null\n      });\n      cambiarIdentificacion({\n        campo: \"\",\n        valido: null\n      });\n      cambiarIdentificacion2({\n        campo: \"\",\n        valido: null\n      });\n      cambiarNombre({\n        campo: \"\",\n        valido: null\n      });\n      cambiarNombre2({\n        campo: \"\",\n        valido: null\n      });\n      cambiarApellido({\n        campo: \"\",\n        valido: null\n      });\n      cambiarApellido2({\n        campo: \"\",\n        valido: null\n      });\n      cambiarTerminos(false); // ... Puedo ir código consumido externo como de una API\n    } else {\n      cambiarFormularioValido(false);\n    }\n  }; // Selección tipo persona\n\n\n  function getTipoPersonaDiv() {\n    switch (tipoPersona) {\n      case \"natural\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          htmlFor: \"tipoId\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }\n        }, \"Tipo de Identificaci\\xF3n *\"), /*#__PURE__*/React.createElement(Select, {\n          id: \"tipoIdentificacion\",\n          \"data-toggle\": \"tooltip\",\n          title: \"Seleccionar tipo documento de Identificaci\\xF3n\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"1\",\n          selected: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }\n        }, \"C\\xE9dula de Ciudadania\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }\n        }, \"C\\xE9dula extranjeria\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }\n        }, \"ID pasaporte\")), /*#__PURE__*/React.createElement(LeyendaError, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }\n        }, \"Campo tipo iden es requerido\")), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: identificacion,\n          cambiarEstado: cambiarIdentificacion,\n          tipo: \"text\",\n          label: \"N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 1234567890\",\n          name: \"identificacion\",\n          leyendaError: \"Campo n\\xFAmero de identificaci\\xF3n es requerido, solo se permiten n\\xFAmeros y minimo 6 digitos\",\n          expresionRegular: expresiones.identificacion,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: identificacion2,\n          cambiarEstado: cambiarIdentificacion2,\n          tipo: \"text\",\n          label: \"Confirmar N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 1234567890\",\n          name: \"identificacion\",\n          leyendaError: \"Campo confirmar n\\xFAmero de identificaci\\xF3n es requerido, y debe ser igual al campo n\\xFAmero de identificaci\\xF3n\",\n          funcion: validarIdentificacion2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombre,\n          cambiarEstado: cambiarNombre,\n          tipo: \"text\",\n          label: \"Primer Nombre *\",\n          placeholder: \"Ej: Pepito\",\n          name: \"nombre\",\n          leyendaError: \"Campo primer nombre es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombre2,\n          cambiarEstado: cambiarNombre2,\n          tipo: \"text\",\n          label: \"Segundo Nombre\",\n          placeholder: \"Ej: Andres\",\n          name: \"nombre2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: apellido,\n          cambiarEstado: cambiarApellido,\n          tipo: \"text\",\n          label: \"Primer Apellido *\",\n          placeholder: \"Ej: Perez\",\n          name: \"apellido\",\n          leyendaError: \"Campo primer apellido es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: apellido2,\n          cambiarEstado: cambiarApellido2,\n          tipo: \"text\",\n          label: \"Segundo Apellido\",\n          placeholder: \"Ej: Rodriguez\",\n          name: \"apellido2\",\n          leyendaError: \"Campo requerido\",\n          expresionRegular: expresiones.apellido2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }\n        }));\n\n      case \"juridica\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          htmlFor: \"tipoId\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }\n        }, \"Tipo de Identificaci\\xF3n *\"), /*#__PURE__*/React.createElement(Select, {\n          id: \"tipoIdentificacion\",\n          \"data-toggle\": \"tooltip\",\n          title: \"Seleccionar tipo documento de Identificaci\\xF3n\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"1\",\n          selected: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }\n        }, \"N\\xFAmero de Identificaci\\xF3n Tributaria (NIT)\")), /*#__PURE__*/React.createElement(LeyendaError, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }\n        }, \"Campo tipo iden es requerido\")), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nit,\n          cambiarEstado: cambiarNit,\n          tipo: \"text\",\n          label: \"N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 8603842563\",\n          name: \"nit\",\n          leyendaError: \"Campo requerido, solo se aceptan n\\xFAmeros\",\n          expresionRegular: expresiones.identificacion,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: digitoVerificacion,\n          cambiarEstado: cambiarDigitoVerificacion,\n          tipo: \"text\",\n          label: \"Digito Verificaci\\xF3n *\",\n          placeholder: \"Ej: 8\",\n          name: \"digitoVerificacion\",\n          leyendaError: \"Campo requerido, solo se un n\\xFAmero\",\n          expresionRegular: expresiones.digitoV,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nit2,\n          cambiarEstado: cambiarNit2,\n          tipo: \"text\",\n          label: \"Confirmar N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 8603842563\",\n          name: \"nit2\",\n          leyendaError: \"Campo requerido, coincidir con n\\xFAmero nit ingresado\",\n          funcion: validarNit2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: digitoVerificacion2,\n          cambiarEstado: cambiarDigitoVerificacion2,\n          tipo: \"text\",\n          label: \"Confirmar Digito Verificaci\\xF3n*\",\n          placeholder: \"Ej: 8\",\n          name: \"digitoVerificacion2\",\n          leyendaError: \"Campo es requerido, coincidir con n\\xFAmero DV ingresado\",\n          expresionRegular: expresiones.digitoV,\n          funcion: validarDigitoVerificacion2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreEmpresa,\n          cambiarEstado: cambiarNombreEmpresa,\n          tipo: \"text\",\n          label: \"Nombre de la empresa *\",\n          placeholder: \"Ej: Microchips y Telecomunicaciones SAS\",\n          name: \"nombreEmpresa\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreRLoApoderado,\n          cambiarEstado: cambiarNombreRLoApoderado,\n          tipo: \"text\",\n          label: \"Nombre Representante Legal o APoderado*\",\n          placeholder: \"Ej: Pablo Jesus Lozada Cortez\",\n          name: \"apellido\",\n          leyendaError: \"Campo primer apellido es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }\n        }));\n\n      default:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ComponenteInputDisabled, {\n          estado: tipoId,\n          cambiarEstado: cambiarTipoId,\n          tipo: \"text\",\n          label: \"Tipo de Identificaci\\xF3n *\",\n          placeholder: \"Ej: C\\xE9dula de Ciudadania\",\n          name: \"tipoId\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInputDisabled, {\n          estado: \"identificacionSeleccion\",\n          tipo: \"text\",\n          label: \"N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 1234567890\",\n          name: \"identificacionSeleccion\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInputDisabled, {\n          estado: nit2,\n          cambiarEstado: cambiarNit2,\n          tipo: \"text\",\n          label: \"Confirmar N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 1234567890\",\n          name: \"identificacion\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }\n        }));\n    }\n  } // Selección tipo dispositivo\n\n\n  function getTipoDispositivoDiv() {\n    switch (tipoDispositivo) {\n      case \"dispositivo\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: marca,\n          cambiarEstado: cambiarMarca,\n          tipo: \"text\",\n          label: \"Marca *\",\n          placeholder: \"Ej: Apple\",\n          name: \"marca\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreComercial,\n          cambiarEstado: cambiarNombreComercial,\n          tipo: \"text\",\n          label: \"Nombre Comercial *\",\n          placeholder: \"Ej: Serie 3\",\n          name: \"nombreComercial\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: modelo,\n          cambiarEstado: cambiarModelo,\n          tipo: \"text\",\n          label: \"Modelo *\",\n          placeholder: \"Ej: Once\",\n          name: \"modelo\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: fabricante,\n          cambiarEstado: cambiarFabricante,\n          tipo: \"text\",\n          label: \"Fabricante\",\n          placeholder: \"Ej: Huawei\",\n          name: \"fabricante\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: casoUsoDispositivo,\n          cambiarEstado: cambiarCasoUsoDispositivo,\n          tipo: \"text\",\n          label: \"Caso de uso del Dispositivo*\",\n          placeholder: \"Ej: Las caracteristicas de dispositivo...\",\n          name: \"casoUsoDispositivo\",\n          leyendaError: \"Campo requerido\",\n          expresionRegular: expresiones.apellido,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 8\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          class: \"contenedor-comentarios col-12 mt-3 mb-2 p-0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 1\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          class: \"mb-0 pb-1 title-comentario\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 7\n          }\n        }, \"Escribre tus comentarios:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n          className: \"textoarea\",\n          placeholder: \"Queremos conocer tu experiencia \\xF3 sugerencias\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 6\n          }\n        })));\n\n      case \"modulo\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: marca,\n          cambiarEstado: cambiarMarca,\n          tipo: \"text\",\n          label: \"Marca del M\\xF3dulo Interno*\",\n          placeholder: \"Ej: Apple\",\n          name: \"marcaModulo\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreComercial,\n          cambiarEstado: cambiarNombreComercial,\n          tipo: \"text\",\n          label: \"Nombre Comercial*\",\n          placeholder: \"Ej: Serie 3\",\n          name: \"nombreComercial\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: modelo,\n          cambiarEstado: cambiarModelo,\n          tipo: \"text\",\n          label: \"Modelo del M\\xF3dulo Interno*\",\n          placeholder: \"Ej: Once\",\n          name: \"modeloModuloInterno\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: fabricante,\n          cambiarEstado: cambiarFabricante,\n          tipo: \"text\",\n          label: \"Fabricante\",\n          placeholder: \"Ej: Huawei\",\n          name: \"fabricante\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: marcaEquipoAnfitrion,\n          cambiarEstado: cambiarMarcaEquipoAnfitrion,\n          tipo: \"text\",\n          label: \"Marca del Equipo Anfitri\\xF3n*\",\n          placeholder: \"Ej: Las caracteristicas de dispositivo...\",\n          name: \"marcaEquipoFabricante\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 8\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: modeloEquipoAnfitrion,\n          cambiarEstado: cambiarModeloEquipoAnfitrion,\n          tipo: \"text\",\n          label: \"Modelo del Equipo Anfitri\\xF3n*\",\n          placeholder: \"Ej: Las caracteristicas de dispositivo...\",\n          name: \"modeloEquipoAnfitrion\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 8\n          }\n        }));\n\n      case \"otro\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreOtroDispositivo,\n          cambiarEstado: cambiarNombreOtroDispositivo,\n          tipo: \"text\",\n          label: \"Nombre otro Dispositivo*\",\n          placeholder: \"Ej: Apple\",\n          name: \"nombreOtroDispositivo\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: marca,\n          cambiarEstado: cambiarMarca,\n          tipo: \"text\",\n          label: \"Marca *\",\n          placeholder: \"Ej: Apple\",\n          name: \"marca\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreComercial,\n          cambiarEstado: cambiarNombreComercial,\n          tipo: \"text\",\n          label: \"Nombre Comercial *\",\n          placeholder: \"Ej: Serie 3\",\n          name: \"nombreComercial\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: modelo,\n          cambiarEstado: cambiarModelo,\n          tipo: \"text\",\n          label: \"Modelo *\",\n          placeholder: \"Ej: Once\",\n          name: \"modelo\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: fabricante,\n          cambiarEstado: cambiarFabricante,\n          tipo: \"text\",\n          label: \"Fabricante\",\n          placeholder: \"Ej: Huawei\",\n          name: \"fabricante\",\n          leyendaError: \"Campo requerido\",\n          expresionRegular: expresiones.apellido2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 15\n          }\n        }));\n\n      default:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: marca,\n          cambiarEstado: cambiarMarca,\n          tipo: \"text\",\n          label: \"Marca *\",\n          placeholder: \"Ej: Apple\",\n          name: \"marca\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreComercial,\n          cambiarEstado: cambiarNombreComercial,\n          tipo: \"text\",\n          label: \"Nombre Comercial *\",\n          placeholder: \"Ej: Serie 3\",\n          name: \"nombreComercial\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: modelo,\n          cambiarEstado: cambiarModelo,\n          tipo: \"text\",\n          label: \"Modelo *\",\n          placeholder: \"Ej: Once\",\n          name: \"modelo\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: fabricante,\n          cambiarEstado: cambiarFabricante,\n          tipo: \"text\",\n          label: \"Fabricante\",\n          placeholder: \"Ej: Huawei\",\n          name: \"fabricante\",\n          leyendaError: \"Campo requerido\",\n          expresionRegular: expresiones.apellido2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }\n        }));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NavProceso, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 13\n    }\n  }, \"Formulario de Solicitud de Homologaci\\xF3n de Equipos Terminales M\\xF3viles\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Formulario, {\n    className: \"row\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 17\n    }\n  }, \"Datos de identificaci\\xF3n\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 17\n    }\n  }, \"*Campos obligatorios\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"tipoPersona\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 17\n    }\n  }, \"Tipo de Persona *\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"tipoPersona\",\n    \"data-toggle\": \"tooltip\",\n    title: \"Seleccionar como persona Natural o Juridica\",\n    onClick: event => {\n      // here set target value to state which is 0, 1, 2, 3\n      setTipoPersona(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    selected: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 19\n    }\n  }, \"Ej. Natural\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"natural\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 19\n    }\n  }, \"Natural\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"juridica\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 19\n    }\n  }, \"Juridica\")), /*#__PURE__*/React.createElement(LeyendaError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 17\n    }\n  }, \"Campo tipo persona es requerido\")), getTipoPersonaDiv(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 17\n    }\n  }, \"Datos de contacto y ubicaci\\xF3n\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 17\n    }\n  }, \"*Campos obligatorios\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ComponenteInput, {\n    estado: pais,\n    cambiarEstado: cambiarPais,\n    tipo: \"text\",\n    label: \"Pais *\",\n    placeholder: \"Ej: Colombia\",\n    name: \"pais\",\n    leyendaError: \"Campo es requerido, solo se aceptan letras\",\n    expresionRegular: expresiones.nombre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ComponenteInput, {\n    estado: departamento,\n    cambiarEstado: cambiarDepartamento,\n    tipo: \"text\",\n    label: \"Departamento *\",\n    placeholder: \"Ej: Cundinamarca\",\n    name: \"departamento\",\n    leyendaError: \"Campo es requerido, solo se aceptan letras\",\n    expresionRegular: expresiones.nombre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ComponenteInput, {\n    estado: municipio,\n    cambiarEstado: cambiarMunicipio,\n    tipo: \"text\",\n    label: \"Municipio *\",\n    placeholder: \"Ej: Madrid\",\n    name: \"municipio\",\n    leyendaError: \"Campo es requerido, solo se aceptan letras\",\n    expresionRegular: expresiones.nombre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ComponenteInput, {\n    estado: direccion,\n    cambiarEstado: cambiarDireccion,\n    tipo: \"text\",\n    label: \"Direcci\\xF3n *\",\n    placeholder: \"Ej: CL 1 23 45\",\n    name: \"direccion\",\n    leyendaError: \"Campo es requerido, solo se aceptan letras\",\n    expresionRegular: expresiones.nombre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ComponenteInput, {\n    estado: correo,\n    cambiarEstado: cambiarCorreo,\n    tipo: \"text\",\n    label: \"Correo Electr\\xF3nico *\",\n    placeholder: \"Ej: falso@gmail.com\",\n    name: \"correo\",\n    leyendaError: \"Campo es requerido\",\n    expresionRegular: expresiones.correo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ComponenteInput, {\n    estado: correo,\n    cambiarEstado: cambiarCorreo,\n    tipo: \"text\",\n    label: \"Confirmar Correo Electr\\xF3nico *\",\n    placeholder: \"Ej: falso@gmail.com\",\n    name: \"correo\",\n    leyendaError: \"Campo es requerido\",\n    expresionRegular: expresiones.correo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ComponenteInput, {\n    estado: telefono,\n    cambiarEstado: cambiarTelefono,\n    tipo: \"text\",\n    label: \"Tel\\xE9fono Remitente *\",\n    placeholder: \"Ej: 300 123 45 67\",\n    name: \"telefono\",\n    leyendaError: \"Campo es requerido, solo n\\xFAmeros\",\n    expresionRegular: expresiones.telefono,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 17\n    }\n  }, \"Caracter\\xEDsticas del terminal m\\xF3vil\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 17\n    }\n  }, \"*Campos obligatorios\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"tipoDispositivo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 17\n    }\n  }, \"Tipo de Dispositivo*\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"tipoDispositivo\",\n    \"data-toggle\": \"tooltip\",\n    title: \"Seleccionar tipo dispositivo\",\n    onClick: event => {\n      // here set target value to state which is 0, 1, 2, 3\n      setTipoDispositivo(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    selected: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 19\n    }\n  }, \"Ej. M\\xF3vil\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"telefono\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 19\n    }\n  }, \"T\\xE9lefono Inteligente\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"computador\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 19\n    }\n  }, \"Computador de Bolsillo\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dispositivo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 19\n    }\n  }, \"Dispositivo IoT\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"modulo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 19\n    }\n  }, \"M\\xF3dulo\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"reloj\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 19\n    }\n  }, \"Reloj Inteligente\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"router\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 19\n    }\n  }, \"Router\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 19\n    }\n  }, \"Otro \\xBFC\\xFAal?\")), /*#__PURE__*/React.createElement(LeyendaError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 17\n    }\n  }, \"Campo tipo persona es requerido\")), getTipoDispositivoDiv(), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 898,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 15\n    }\n  }, \"TAC *\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902,\n      columnNumber: 15\n    }\n  }, \"En esta secci\\xF3n podr\\xE1 agregar m\\xFAltiples TAC para el modelo de terminal que est\\xE1 homologando. Tenga en cuenta que la CRC validar\\xE1 los TAC registrados en la solicitud ante la base de datos de la GSMA.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 908,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"button-carga-principal btn-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 17\n    }\n  }, \"Agregar TAC\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 916,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"tabla\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"titulo-tabla\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 15\n    }\n  }, \"Listado de TAC\"), /*#__PURE__*/React.createElement(\"table\", {\n    class: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 922,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    class: \"titulo-tableta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 923,\n      columnNumber: 21\n    }\n  }, \"TAC\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    class: \"titulo-tableta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926,\n      columnNumber: 21\n    }\n  }, \"Acciones\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 932,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 21\n    }\n  }, \"Sin datos\"))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 15\n    }\n  }, \" Archivos Adjuntos\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 15\n    }\n  }, \"Por favor tenga en cuenta:\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942,\n      columnNumber: 15\n    }\n  }, \"** El tama\\xF1o total de todos los archivos adjuntos no podr\\xE1 ser mayor a 30 MB.\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 15\n    }\n  }, \"** Formatos admitidos para archivos adjuntos: Pdf, Doc, Docx, Xls, Xlsx, Gif, Png, Jpeg, Tif, Tiff, Zip y Rar\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 950,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 952,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DragArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 953,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 955,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 959,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 960,\n      columnNumber: 15\n    }\n  }, \"Verificaci\\xF3n de Seguridad *\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 962,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ContenedorTerminos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 963,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"terminos\",\n    id: \"terminos\",\n    checked: terminos,\n    onChange: onChangeTerminos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 17\n    }\n  }), \"Acepto que he leido los T\\xE9rminos y condiciones *\")), formularioValido === false && /*#__PURE__*/React.createElement(MensajeError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 976,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faExclamationTriangle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 978,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 19\n    }\n  }, \"Error: \"), \" Por favor rellena el formulario correctamente.\")), /*#__PURE__*/React.createElement(ContenedorBotonCentrado, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 983,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Boton, {\n    id: \"envio\",\n    type: \"submit\",\n    onClick: () => cambiarEstadoModal(!estadoModal),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 984,\n      columnNumber: 15\n    }\n  }, \"ENVIAR\"), formularioValido === true && /*#__PURE__*/React.createElement(MensajeExito, {\n    id: \"msjexito\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 992,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCheckCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 994,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 995,\n      columnNumber: 21\n    }\n  }, \"Exitosa: \"), \"Su solicitud se ha registrado satisfactoriamente\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1003,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1005,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"aside\", {\n    className: \"aside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1006,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1008,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(BotonTutoriales, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1009,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(BotonDeDudas, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1010,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1012,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CalificacionExperiencia, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1013,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1014,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1015,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(BotonInicio, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1022,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FooterGov, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1023,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    estado: estadoModal,\n    cambiarEstado: cambiarEstadoModal,\n    titulo: \"\",\n    mostrarHeader: true,\n    mostrarOverlay: true,\n    posicionModal: \"start\",\n    padding: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1026,\n      columnNumber: 7\n    }\n  }, !usuarioValido && /*#__PURE__*/React.createElement(Contenido, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1037,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1038,\n      columnNumber: 15\n    }\n  }, \"T\\xE9rminos y condiciones de uso del Sistema de Homologaci\\xF3n de equipos terminales\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1042,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 17\n    }\n  }, \"1. Del Servicio\"), \"Por lo anterior, para homologar un equipo terminal m\\xF3vil en Colombia, se debe realizar OBLIGATORIAMENTE la solicitud en l\\xEDnea a trav\\xE9s del formulario establecido para el efecto en el portal web (www.tramitescrcom.gov.co), en el cual se deber\\xE1 suministrar la informaci\\xF3n requerida en (http://bit.ly/homologarcelular). All\\xED podr\\xE1 encontrar una gu\\xEDa del paso a paso en videos para realizar este tr\\xE1mite.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ContenedorBotonCentrado, {\n    className: \"recaptcha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1054,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ReCAPTCHA, {\n    ref: captcha,\n    sitekey: \"6Lc9VDIeAAAAAHHQA1wEjx1FKlTy9uWIrZKGwwvN\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1055,\n      columnNumber: 17\n    }\n  })), captchaValido === false && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-captcha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1063,\n      columnNumber: 17\n    }\n  }, \"Por favor acepta el captcha\"), /*#__PURE__*/React.createElement(ContenedorBotones, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1065,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Boton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1066,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/SolicitudHomologacion\",\n    className: \"irTramite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1067,\n      columnNumber: 19\n    }\n  }, \"ACEPTAR\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1071,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Boton2, {\n    onClick: () => cambiarEstadoModal(!estadoModal),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1072,\n      columnNumber: 17\n    }\n  }, \"RECHARZAR\")))), usuarioValido && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1081,\n      columnNumber: 13\n    }\n  }, \"Bienvenido\"))));\n};\n\nexport default FormularioSolicitud;\n/*\nconst Boton = styled.button`\n  border-radius: 20px;\n  border_radius: 100px;\n  border: none;\n  background: #1766dc;\n  cursor: pointer;\n  display: block;\n  font: normal bold 15px/5px \"Works Sans\", sans-serif;\n  padding: 10px 30px;\n  transition: 0.3s ease all;\n\n  a {\n    color: #ffff;\n  }\n\n  &:hover {\n    background: #004884;\n  }\n`;\n*/\n\nconst Boton2 = styled.button`\n  border-radius: 20px;\n  border: 2px solid #3366cc;\n  background: #ffff;\n  color: #3366cc;\n  cursor: pointer;\n  display: block;\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 500;\n  padding: 10px 30px;\n  transition: 0.3s ease all;\n\n  &:hover {\n    background: #0066ff;\n    color: #ffff;\n  }\n`;\nconst Contenido = styled.div`\n  display: flex;\n  padding: 20px;\n  flex-direction: column;\n  max-height: calc(100vh - 210px);\n  overflow-y: auto;\n\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n  }\n\n  h1 {\n    color: #13386d;\n    font: normal 600 18px/10px \"Montserrat\", sans-serif;\n    line-height: 1.5;\n    margin-bottom: 10px;\n  }\n\n  h6 {\n    color: #4b4b4b;\n    font: normal normal 1rem/10px \"Works Sans\", sans-serif;\n    margin: 0;\n    text-align: left;\n    line-height: 1.5;\n  }\n\n  a {\n    font: normal normal 1rem/10px \"Works Sans\", sans-serif;\n  }\n`;\nconst ContenedorBotones = styled.div`\n  padding: 40px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;","map":{"version":3,"sources":["/home/yamid/Documentos/ReactJS/puntogov/src/Pages/FormularioSolicitud/FormularioSolicitud.js"],"names":["React","useState","useRef","Link","Header","Navigation","NavProceso","BotonTutoriales","BotonDeDudas","CalificacionExperiencia","BotonInicio","Footer","FooterGov","Modal","FontAwesomeIcon","faExclamationTriangle","faCheckCircle","ReCAPTCHA","styled","Formulario","Label","Select","Boton","ContenedorTerminos","ContenedorBotonCentrado","LeyendaError","MensajeExito","MensajeError","ComponenteInput","ComponenteInputDisabled","DragArea","TestingDocument","FormularioSolicitud","persona","cambiarPersona","campo","valido","tipoId","cambiarTipoId","identificacion","cambiarIdentificacion","identificacion2","cambiarIdentificacion2","nombre","cambiarNombre","nombre2","cambiarNombre2","apellido","cambiarApellido","apellido2","cambiarApellido2","nit","cambiarNit","nit2","cambiarNit2","nombreEmpresa","cambiarNombreEmpresa","nombreRLoApoderado","cambiarNombreRLoApoderado","digitoVerificacion","cambiarDigitoVerificacion","digitoVerificacion2","cambiarDigitoVerificacion2","pais","cambiarPais","departamento","cambiarDepartamento","municipio","cambiarMunicipio","direccion","cambiarDireccion","correo","cambiarCorreo","correo2","cambiarCorreo2","telefono","cambiarTelefono","nombreOtroDispositivo","cambiarNombreOtroDispositivo","marca","cambiarMarca","nombreComercial","cambiarNombreComercial","modelo","cambiarModelo","fabricante","cambiarFabricante","casoUsoDispositivo","cambiarCasoUsoDispositivo","marcaEquipoAnfitrion","cambiarMarcaEquipoAnfitrion","modeloEquipoAnfitrion","cambiarModeloEquipoAnfitrion","formularioValido","cambiarFormularioValido","terminos","cambiarTerminos","captcha","tipoPersona","setTipoPersona","tipoIdentificacion","setTipoIdentificacion","tipoDispositivo","setTipoDispositivo","estadoModal","cambiarEstadoModal","captchaValido","cambiarCaptchaValido","usuarioValido","cambiarUsuarioValido","expresiones","usuario","password","digitoV","validarIdentificacion2","length","prevState","validarNit2","validarDigitoVerificacion2","validarCorreo2","onChangeTerminos","e","target","checked","onChange","current","getValue","console","log","onSubmit","preventDefault","getTipoPersonaDiv","getTipoDispositivoDiv","event","value","Boton2","button","Contenido","div","ContenedorBotones"],"mappings":"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AA;AAAA,eADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMD,kBAAkB,CAAC,CAACD,WAAF,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CA5BF,CADF,CAVJ,EAqDGI,aAAa,iBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAtDJ,CAjWF,CADF;AA+ZD,CA7gCD;;AA+gCA,eAAe5E,mBAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMuG,MAAM,GAAGrH,MAAM,CAACsH,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAkBA,MAAMC,SAAS,GAAGvH,MAAM,CAACwH,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7BA;AA+BA,MAAMC,iBAAiB,GAAGzH,MAAM,CAACwH,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA,CANA","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Estilos generales del formulario\nimport \"./FormularioSolicitud.scss\";\n\n// Componentes obligatorios a mostrar en el sitio\nimport Header from \"../../components/Header/Header\";\nimport Navigation from \"../../components/Navigation/Navigation\";\nimport NavProceso from \"../../components/NavProceso/NavProceso\";\nimport BotonTutoriales from \"../../components/Botones/BotonTutoriales/BotonTutoriales\";\nimport BotonDeDudas from \"../../components/Botones/BotonDeDudas/BotonDeDudas\";\nimport CalificacionExperiencia from \"../../components/Cards/CalificacionExperiencia/CalificacionExperiencia\";\nimport BotonInicio from \"../../components/Botones/BotonInicio/BotonInicio\";\nimport Footer from \"../../components/Footer/Footer\";\nimport FooterGov from \"../../components/FooterGov/FooterGov\";\n// Modal a mostra antes de enviar información formulario\nimport Modal from \"../../components/Modal/Modal\";\n\n// Importación iconos para mostrar en mensajes de error o exito\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faExclamationTriangle,\n  faCheckCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Libreria para el uso de recaptcha\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\n// Libreria syled que nos permite crear componentes con diseños, despues la linea exportar se encuentran\nimport styled from \"styled-components\";\n// Importación elementos html de componente con estilos predefinidos styled\nimport {\n  Formulario,\n  Label,\n  Select,\n  Boton,\n  ContenedorTerminos,\n  ContenedorBotonCentrado,\n  LeyendaError,\n  MensajeExito,\n  MensajeError,\n} from \"./elementos/Formularios\";\n// Import componente styled con diseño predeterminado\nimport ComponenteInput from \"./componentes/ComponenteInput\";\nimport ComponenteInputDisabled from \"./componentes/ComponenteInputDisabled\";\nimport DragArea from \"./componentes/DragArea\";\nimport TestingDocument from \"../../components/TestingDocument/TestingDocument\";\n\nconst FormularioSolicitud = () => {\n  \n  // Validar Datos de identificación\n  const [persona, cambiarPersona] = useState({ campo: \"\", valido: null });\n  const [tipoId, cambiarTipoId] = useState({ campo: \"\", valido: null });\n  const [identificacion, cambiarIdentificacion] = useState({ campo: \"\", valido: null });\n  const [identificacion2, cambiarIdentificacion2] = useState({ campo: \"\", valido: null });\n  const [nombre, cambiarNombre] = useState({ campo: \"\", valido: null });\n  const [nombre2, cambiarNombre2] = useState({ campo: \"\", valido: null });\n  const [apellido, cambiarApellido] = useState({ campo: \"\", valido: null });\n  const [apellido2, cambiarApellido2] = useState({ campo: \"\", valido: null });\n  \n  // Validar Datos de contacto y ubicación\n  const [nit, cambiarNit] = useState({ campo: \"\", valido: null });\n  const [nit2, cambiarNit2] = useState({ campo: \"\", valido: null });\n  const [nombreEmpresa, cambiarNombreEmpresa] = useState({ campo: \"\", valido: null });\n  const [nombreRLoApoderado, cambiarNombreRLoApoderado] = useState({ campo: \"\", valido: null });\n  const [digitoVerificacion, cambiarDigitoVerificacion] = useState({ campo: \"\", valido: null });\n  const [digitoVerificacion2, cambiarDigitoVerificacion2] = useState({ campo: \"\", valido: null });\n  \n  // Validar Datos de contacto y ubicación\n  const [pais, cambiarPais] = useState({ campo: \"\", valido: null });\n  const [departamento, cambiarDepartamento] = useState({ campo: \"\", valido: null });\n  const [municipio, cambiarMunicipio] = useState({ campo: \"\", valido: null });\n  const [direccion, cambiarDireccion] = useState({ campo: \"\", valido: null });\n  const [correo, cambiarCorreo] = useState({ campo: \"\", valido: null });\n  const [correo2, cambiarCorreo2] = useState({ campo: \"\", valido: null });\n  const [telefono, cambiarTelefono] = useState({ campo: \"\", valido: null });\n  \n  // Validar Características del terminal móvil\n  const [nombreOtroDispositivo, cambiarNombreOtroDispositivo] = useState({ campo: \"\", valido: null });\n  const [marca, cambiarMarca] = useState({ campo: \"\", valido: null });\n  const [nombreComercial, cambiarNombreComercial] = useState({ campo: \"\", valido: null });\n  const [modelo, cambiarModelo] = useState({ campo: \"\", valido: null });\n  const [fabricante, cambiarFabricante] = useState({ campo: \"\", valido: null });\n  const [casoUsoDispositivo, cambiarCasoUsoDispositivo] = useState({ campo: \"\", valido: null });\n  const [marcaEquipoAnfitrion, cambiarMarcaEquipoAnfitrion] = useState({ campo: \"\", valido: null });\n  const [modeloEquipoAnfitrion, cambiarModeloEquipoAnfitrion] = useState({ campo: \"\", valido: null });\n  // Validar formulario y términos condiciones\n  const [formularioValido, cambiarFormularioValido] = useState(null);\n  const [terminos, cambiarTerminos] = useState(false);\n\n  // Referencia al captcha\n  const captcha = useRef(null);\n\n  // Dependiendo el estado seleccionado en lista desplegable, mostrar x campos en formulario\n  const [tipoPersona, setTipoPersona] = useState(null);\n  const [tipoIdentificacion, setTipoIdentificacion] = useState(null);\n  const [tipoDispositivo, setTipoDispositivo] = useState(null);\n  // Mostrar y ocultar modal\n  const [estadoModal, cambiarEstadoModal] = useState(false);\n\n  //Dependiendo estado captcha a seleccionado dejar enviar formulario\n  const [captchaValido, cambiarCaptchaValido] = useState(null);\n  const [usuarioValido, cambiarUsuarioValido] = useState(false);\n\n  // Expresiones regulares para validar que los campos cumplan con las condiciones\n  const expresiones = {\n    usuario: /^[a-zA-Z0-9_-]{4,16}$/, // Letras, numeros, guion y guion_bajo\n    nombre: /^[a-zA-ZÀ-ÿ\\s]{1,40}$/, // Letras y espacios, pueden llevar acentos.\n    identificacion: /^\\d{6,14}$/, // 6 a 14 numeros.\n    password: /^.{4,12}$/, // 4 a 12 digitos.\n    correo: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\n    telefono: /^\\d{7,14}$/, // 7 a 14 numeros.\n    digitoV: /^\\d{1,1}$/, // 1 a 1 numero.\n  };\n\n  // Campo confirmar Número de Identificación se igual campo a comprobar\n  const validarIdentificacion2 = () => {\n    if (identificacion.campo.length > 0) {\n      if (identificacion.campo !== identificacion2.campo) {\n        cambiarIdentificacion2((prevState) => {\n          return { ...prevState, valido: \"false\" };\n        });\n      } else {\n        cambiarIdentificacion2((prevState) => {\n          return { ...prevState, valido: \"true\" };\n        });\n      }\n    }\n  };\n\n  // Campo confirmar Número de NIT se igual campo a comprobar\n  const validarNit2 = () => {\n    if (nit.campo.length > 0) {\n      if (nit.campo !== nit2.campo) {\n        cambiarNit2((prevState) => {\n          return { ...prevState, valido: \"false\" };\n        });\n      } else {\n        cambiarNit2((prevState) => {\n          return { ...prevState, valido: \"true\" };\n        });\n      }\n    }\n  };\n\n  // Campo confirmar Número Digito veririfcacion (DV) igual campo a comprobar\n  const validarDigitoVerificacion2 = () => {\n    if (digitoVerificacion.campo.length > 0) {\n      if (digitoVerificacion.campo !== digitoVerificacion2.campo) {\n        cambiarDigitoVerificacion2((prevState) => {\n          return { ...prevState, valido: \"false\" };\n        });\n      } else {\n        cambiarDigitoVerificacion2((prevState) => {\n          return { ...prevState, valido: \"true\" };\n        });\n      }\n    }\n  };\n\n  // Campo confirmar correo electronico igual campo a comprobar\n  const validarCorreo2 = () => {\n    if (correo.campo.length > 0) {\n      if (correo.campo !== correo2.campo) {\n        cambiarCorreo2((prevState) => {\n          return { ...prevState, valido: \"false\" };\n        });\n      } else {\n        cambiarCorreo2((prevState) => {\n          return { ...prevState, valido: \"true\" };\n        });\n      }\n    }\n  };\n\n  const onChangeTerminos = (e) => {\n    cambiarTerminos(e.target.checked);\n  };\n\n  const onChange = () => {\n    if (captcha.current.getValue()) {\n      console.log(\"El usuario no es un robot\");\n      cambiarCaptchaValido(true);\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    //Colocar aquí la validación de los inputs del formulario. Si son correctos ya podemos enviar el formulario, actualizar la interfaz etc\n    if (captcha.current.getValue()) {\n      console.log(\"El usuario no es un robot\");\n      cambiarCaptchaValido(true);\n    } else {\n      console.log(\"Por favor acepta el captcha\");\n      cambiarCaptchaValido(false);\n    }\n\n    if (\n      identificacion.valido === \"true\" &&\n      identificacion2.valido === \"true\" &&\n      nombre.valido === \"true\" &&\n      apellido.valido === \"true\" &&\n      terminos\n    ) {\n      cambiarFormularioValido(true);\n      cambiarPersona({ campo: \"\", valido: null });\n      cambiarTipoId({ campo: \"\", valido: null });\n      cambiarIdentificacion({ campo: \"\", valido: null });\n      cambiarIdentificacion2({ campo: \"\", valido: null });\n      cambiarNombre({ campo: \"\", valido: null });\n      cambiarNombre2({ campo: \"\", valido: null });\n      cambiarApellido({ campo: \"\", valido: null });\n      cambiarApellido2({ campo: \"\", valido: null });\n      cambiarTerminos(false);\n\n      // ... Puedo ir código consumido externo como de una API\n    } else {\n      cambiarFormularioValido(false);\n    }\n  };\n\n  // Selección tipo persona\n  function getTipoPersonaDiv() {\n    switch (tipoPersona) {\n      case \"natural\":\n        return (\n          <>\n            <div>\n              <Label htmlFor=\"tipoId\">Tipo de Identificación *</Label>\n              <Select\n                id=\"tipoIdentificacion\"\n                data-toggle=\"tooltip\"\n                title=\"Seleccionar tipo documento de Identificación\"\n              >\n                <option value=\"1\" selected>\n                  Cédula de Ciudadania\n                </option>\n                <option value=\"2\">Cédula extranjeria</option>\n                <option value=\"3\">ID pasaporte</option>\n              </Select>\n              <LeyendaError>Campo tipo iden es requerido</LeyendaError>\n            </div>\n\n            <ComponenteInput\n              estado={identificacion}\n              cambiarEstado={cambiarIdentificacion}\n              tipo=\"text\"\n              label=\"Número de Identificación *\"\n              placeholder=\"Ej: 1234567890\"\n              name=\"identificacion\"\n              leyendaError=\"Campo número de identificación es requerido, solo se permiten números y minimo 6 digitos\"\n              expresionRegular={expresiones.identificacion}\n            />\n\n            <ComponenteInput\n              estado={identificacion2}\n              cambiarEstado={cambiarIdentificacion2}\n              tipo=\"text\"\n              label=\"Confirmar Número de Identificación *\"\n              placeholder=\"Ej: 1234567890\"\n              name=\"identificacion\"\n              leyendaError=\"Campo confirmar número de identificación es requerido, y debe ser igual al campo número de identificación\"\n              funcion={validarIdentificacion2}\n            />\n\n            <ComponenteInput\n              estado={nombre}\n              cambiarEstado={cambiarNombre}\n              tipo=\"text\"\n              label=\"Primer Nombre *\"\n              placeholder=\"Ej: Pepito\"\n              name=\"nombre\"\n              leyendaError=\"Campo primer nombre es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={nombre2}\n              cambiarEstado={cambiarNombre2}\n              tipo=\"text\"\n              label=\"Segundo Nombre\"\n              placeholder=\"Ej: Andres\"\n              name=\"nombre2\"\n            />\n\n            <ComponenteInput\n              estado={apellido}\n              cambiarEstado={cambiarApellido}\n              tipo=\"text\"\n              label=\"Primer Apellido *\"\n              placeholder=\"Ej: Perez\"\n              name=\"apellido\"\n              leyendaError=\"Campo primer apellido es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={apellido2}\n              cambiarEstado={cambiarApellido2}\n              tipo=\"text\"\n              label=\"Segundo Apellido\"\n              placeholder=\"Ej: Rodriguez\"\n              name=\"apellido2\"\n              leyendaError=\"Campo requerido\"\n              expresionRegular={expresiones.apellido2}\n            />\n          </>\n        );\n      case \"juridica\":\n        return (\n          <>\n            <div>\n              <Label htmlFor=\"tipoId\">Tipo de Identificación *</Label>\n              <Select\n                id=\"tipoIdentificacion\"\n                data-toggle=\"tooltip\"\n                title=\"Seleccionar tipo documento de Identificación\"\n              >\n                <option value=\"1\" selected>\n                  Número de Identificación Tributaria (NIT)\n                </option>\n              </Select>\n              <LeyendaError>Campo tipo iden es requerido</LeyendaError>\n            </div>\n          \n            <ComponenteInput\n              estado={nit}\n              cambiarEstado={cambiarNit}\n              tipo=\"text\"\n              label=\"Número de Identificación *\"\n              placeholder=\"Ej: 8603842563\"\n              name=\"nit\"\n              leyendaError=\"Campo requerido, solo se aceptan números\"\n              expresionRegular={expresiones.identificacion}\n            />\n            \n            <ComponenteInput\n              estado={digitoVerificacion}\n              cambiarEstado={cambiarDigitoVerificacion}\n              tipo=\"text\"\n              label=\"Digito Verificación *\"\n              placeholder=\"Ej: 8\"\n              name=\"digitoVerificacion\"\n              leyendaError=\"Campo requerido, solo se un número\"\n              expresionRegular={expresiones.digitoV}\n            />\n\n            <ComponenteInput\n              estado={nit2}\n              cambiarEstado={cambiarNit2}\n              tipo=\"text\"\n              label=\"Confirmar Número de Identificación *\"\n              placeholder=\"Ej: 8603842563\"\n              name=\"nit2\"\n              leyendaError=\"Campo requerido, coincidir con número nit ingresado\"\n              funcion={validarNit2}\n            />\n\n            <ComponenteInput\n              estado={digitoVerificacion2}\n              cambiarEstado={cambiarDigitoVerificacion2}\n              tipo=\"text\"\n              label=\"Confirmar Digito Verificación*\"\n              placeholder=\"Ej: 8\"\n              name=\"digitoVerificacion2\"\n              leyendaError=\"Campo es requerido, coincidir con número DV ingresado\"\n              expresionRegular={expresiones.digitoV}\n              funcion={validarDigitoVerificacion2}\n            />\n\n            <ComponenteInput\n              estado={nombreEmpresa}\n              cambiarEstado={cambiarNombreEmpresa}\n              tipo=\"text\"\n              label=\"Nombre de la empresa *\"\n              placeholder=\"Ej: Microchips y Telecomunicaciones SAS\"\n              name=\"nombreEmpresa\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={nombreRLoApoderado}\n              cambiarEstado={cambiarNombreRLoApoderado}\n              tipo=\"text\"\n              label=\"Nombre Representante Legal o APoderado*\"\n              placeholder=\"Ej: Pablo Jesus Lozada Cortez\"\n              name=\"apellido\"\n              leyendaError=\"Campo primer apellido es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <ComponenteInputDisabled\n              estado={tipoId}\n              cambiarEstado={cambiarTipoId}\n              tipo=\"text\"\n              label=\"Tipo de Identificación *\"\n              placeholder=\"Ej: Cédula de Ciudadania\"\n              name=\"tipoId\"\n            />\n            <ComponenteInputDisabled\n              estado=\"identificacionSeleccion\"\n              tipo=\"text\"\n              label=\"Número de Identificación *\"\n              placeholder=\"Ej: 1234567890\"\n              name=\"identificacionSeleccion\"\n            />\n\n            <ComponenteInputDisabled\n              estado={nit2}\n              cambiarEstado={cambiarNit2}\n              tipo=\"text\"\n              label=\"Confirmar Número de Identificación *\"\n              placeholder=\"Ej: 1234567890\"\n              name=\"identificacion\"\n            />\n          </>\n        );\n    }\n  }\n\n  // Selección tipo dispositivo\n  function getTipoDispositivoDiv() {\n    switch (tipoDispositivo) {\n      case \"dispositivo\":\n        return (\n\t\t\t\t\t<>\n          <span/>\n\t\t\t\t\t\t<ComponenteInput\n                estado={marca}\n                cambiarEstado={cambiarMarca}\n                tipo=\"text\"\n                label=\"Marca *\"\n                placeholder=\"Ej: Apple\"\n                name=\"marca\"\n                leyendaError=\"Campo es requerido\"\n                expresionRegular={expresiones.nombre}\n            />\n\t\t\t\t\t\t<ComponenteInput\n                estado={nombreComercial}\n                cambiarEstado={cambiarNombreComercial}\n                tipo=\"text\"\n                label=\"Nombre Comercial *\"\n                placeholder=\"Ej: Serie 3\"\n                name=\"nombreComercial\"\n                leyendaError=\"Campo es requerido\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={modelo}\n                cambiarEstado={cambiarModelo}\n                tipo=\"text\"\n                label=\"Modelo *\"\n                placeholder=\"Ej: Once\"\n                name=\"modelo\"\n                leyendaError=\"Campo es requerido\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={fabricante}\n                cambiarEstado={cambiarFabricante}\n                tipo=\"text\"\n                label=\"Fabricante\"\n                placeholder=\"Ej: Huawei\"\n                name=\"fabricante\"\n              />\n              \n\t\t\t\t\t\t\t<ComponenteInput\n                estado={casoUsoDispositivo}\n                cambiarEstado={cambiarCasoUsoDispositivo}\n                tipo=\"text\"\n                label=\"Caso de uso del Dispositivo*\"\n                placeholder=\"Ej: Las caracteristicas de dispositivo...\"\n                name=\"casoUsoDispositivo\"\n                leyendaError=\"Campo requerido\"\n                expresionRegular={expresiones.apellido}\n              />\n\n<div class=\"contenedor-comentarios col-12 mt-3 mb-2 p-0\">\n      <p class=\"mb-0 pb-1 title-comentario\">Escribre tus comentarios:</p>\n\t    <textarea className=\"textoarea\"\n        placeholder=\"Queremos conocer tu experiencia ó sugerencias\" \n      >\n      </textarea>\n    </div>\n\n\t\t\t\t\t</>\t\t\t\t\n\t\t\t\t);\n      case \"modulo\":\n        return (\n\t\t\t\t\t<>\n          <span/>\n\t\t\t\t\t\t<ComponenteInput\n                estado={marca}\n                cambiarEstado={cambiarMarca}\n                tipo=\"text\"\n                label=\"Marca del Módulo Interno*\"\n                placeholder=\"Ej: Apple\"\n                name=\"marcaModulo\"\n                leyendaError=\"Campo es requerido\"\n                expresionRegular={expresiones.nombre}\n            />\n\t\t\t\t\t\t<ComponenteInput\n                estado={nombreComercial}\n                cambiarEstado={cambiarNombreComercial}\n                tipo=\"text\"\n                label=\"Nombre Comercial*\"\n                placeholder=\"Ej: Serie 3\"\n                name=\"nombreComercial\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={modelo}\n                cambiarEstado={cambiarModelo}\n                tipo=\"text\"\n                label=\"Modelo del Módulo Interno*\"\n                placeholder=\"Ej: Once\"\n                name=\"modeloModuloInterno\"\n                leyendaError=\"Campo es requerido\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={fabricante}\n                cambiarEstado={cambiarFabricante}\n                tipo=\"text\"\n                label=\"Fabricante\"\n                placeholder=\"Ej: Huawei\"\n                name=\"fabricante\"\n              />\n\n\t\t\t\t\t\t\t<ComponenteInput\n                estado={marcaEquipoAnfitrion}\n                cambiarEstado={cambiarMarcaEquipoAnfitrion}\n                tipo=\"text\"\n                label=\"Marca del Equipo Anfitrión*\"\n                placeholder=\"Ej: Las caracteristicas de dispositivo...\"\n                name=\"marcaEquipoFabricante\"\n              />\n\n\t\t\t\t\t\t\t<ComponenteInput\n                estado={modeloEquipoAnfitrion}\n                cambiarEstado={cambiarModeloEquipoAnfitrion}\n                tipo=\"text\"\n                label=\"Modelo del Equipo Anfitrión*\"\n                placeholder=\"Ej: Las caracteristicas de dispositivo...\"\n                name=\"modeloEquipoAnfitrion\"\n              />\n\n\t\t\t\t\t</>\t\t\t\t\t\t\n\t\t\t\t);\n\t\t\tcase \"otro\":\n        return (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ComponenteInput\n                estado={nombreOtroDispositivo}\n                cambiarEstado={cambiarNombreOtroDispositivo}\n                tipo=\"text\"\n                label=\"Nombre otro Dispositivo*\"\n                placeholder=\"Ej: Apple\"\n                name=\"nombreOtroDispositivo\"\n                leyendaError=\"Campo es requerido\"\n                expresionRegular={expresiones.nombre}\n            />\n\t\t\t\t\t\t<ComponenteInput\n                estado={marca}\n                cambiarEstado={cambiarMarca}\n                tipo=\"text\"\n                label=\"Marca *\"\n                placeholder=\"Ej: Apple\"\n                name=\"marca\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n            />\n\t\t\t\t\t\t<ComponenteInput\n                estado={nombreComercial}\n                cambiarEstado={cambiarNombreComercial}\n                tipo=\"text\"\n                label=\"Nombre Comercial *\"\n                placeholder=\"Ej: Serie 3\"\n                name=\"nombreComercial\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={modelo}\n                cambiarEstado={cambiarModelo}\n                tipo=\"text\"\n                label=\"Modelo *\"\n                placeholder=\"Ej: Once\"\n                name=\"modelo\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={fabricante}\n                cambiarEstado={cambiarFabricante}\n                tipo=\"text\"\n                label=\"Fabricante\"\n                placeholder=\"Ej: Huawei\"\n                name=\"fabricante\"\n                leyendaError=\"Campo requerido\"\n                expresionRegular={expresiones.apellido2}\n              />\n\n\t\t\t\t\t</>\t\t\t\n\t\t\t);\n      default:\n        return (\n\t\t\t\t\t<>\n          <span/>\n\t\t\t\t\t\t<ComponenteInput\n                estado={marca}\n                cambiarEstado={cambiarMarca}\n                tipo=\"text\"\n                label=\"Marca *\"\n                placeholder=\"Ej: Apple\"\n                name=\"marca\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n            />\n\t\t\t\t\t\t<ComponenteInput\n                estado={nombreComercial}\n                cambiarEstado={cambiarNombreComercial}\n                tipo=\"text\"\n                label=\"Nombre Comercial *\"\n                placeholder=\"Ej: Serie 3\"\n                name=\"nombreComercial\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={modelo}\n                cambiarEstado={cambiarModelo}\n                tipo=\"text\"\n                label=\"Modelo *\"\n                placeholder=\"Ej: Once\"\n                name=\"modelo\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={fabricante}\n                cambiarEstado={cambiarFabricante}\n                tipo=\"text\"\n                label=\"Fabricante\"\n                placeholder=\"Ej: Huawei\"\n                name=\"fabricante\"\n                leyendaError=\"Campo requerido\"\n                expresionRegular={expresiones.apellido2}\n              />\n\n\t\t\t\t\t</>\n\t\t\t\t)\n\t}\n}\n\n  return (\n    <>\n      <div className=\"container\">\n        <Header />\n        <div className=\"row\">\n          <div className=\"col-md-8\">\n            <Navigation />\n            <NavProceso />\n\n            <br />\n            <h3 className=\"title-form\">\n              Formulario de Solicitud de Homologación de Equipos Terminales\n              Móviles\n            </h3>\n            <br />\n            <br />\n\n            <Formulario className=\"row\" onSubmit={onSubmit}>\n              <div className=\"titulo-indicativo\">\n                <h4 className=\"subtitle-form\">Datos de identificación</h4>\n                <p className=\"txt-obliga\">*Campos obligatorios</p>\n              </div>\n\n              <span />\n\n              <div>\n                <Label htmlFor=\"tipoPersona\">Tipo de Persona *</Label>\n                <Select\n                  id=\"tipoPersona\"\n                  data-toggle=\"tooltip\"\n                  title=\"Seleccionar como persona Natural o Juridica\"\n                  onClick={(event) => {\n                    // here set target value to state which is 0, 1, 2, 3\n                    setTipoPersona(event.target.value);\n                  }}\n                >\n                  <option value=\"\" selected hidden>\n                    Ej. Natural\n                  </option>\n                  <option value=\"natural\">Natural</option>\n                  <option value=\"juridica\">Juridica</option>\n                </Select>\n                <LeyendaError>Campo tipo persona es requerido</LeyendaError>\n              </div>\n\n              {getTipoPersonaDiv()}\n\n              <div className=\"col-md-12 titulo-indicativo\">\n                <h4 className=\"subtitle-form\">Datos de contacto y ubicación</h4>\n                <p className=\"txt-obliga\">*Campos obligatorios</p>\n              </div>\n              <br />\n\n              <ComponenteInput\n                estado={pais}\n                cambiarEstado={cambiarPais}\n                tipo=\"text\"\n                label=\"Pais *\"\n                placeholder=\"Ej: Colombia\"\n                name=\"pais\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={departamento}\n                cambiarEstado={cambiarDepartamento}\n                tipo=\"text\"\n                label=\"Departamento *\"\n                placeholder=\"Ej: Cundinamarca\"\n                name=\"departamento\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={municipio}\n                cambiarEstado={cambiarMunicipio}\n                tipo=\"text\"\n                label=\"Municipio *\"\n                placeholder=\"Ej: Madrid\"\n                name=\"municipio\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={direccion}\n                cambiarEstado={cambiarDireccion}\n                tipo=\"text\"\n                label=\"Dirección *\"\n                placeholder=\"Ej: CL 1 23 45\"\n                name=\"direccion\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={correo}\n                cambiarEstado={cambiarCorreo}\n                tipo=\"text\"\n                label=\"Correo Electrónico *\"\n                placeholder=\"Ej: falso@gmail.com\"\n                name=\"correo\"\n                leyendaError=\"Campo es requerido\"\n                expresionRegular={expresiones.correo}\n              />\n\n              <ComponenteInput\n                estado={correo}\n                cambiarEstado={cambiarCorreo}\n                tipo=\"text\"\n                label=\"Confirmar Correo Electrónico *\"\n                placeholder=\"Ej: falso@gmail.com\"\n                name=\"correo\"\n                leyendaError=\"Campo es requerido\"\n                expresionRegular={expresiones.correo}\n              />\n\n              <ComponenteInput\n                estado={telefono}\n                cambiarEstado={cambiarTelefono}\n                tipo=\"text\"\n                label=\"Teléfono Remitente *\"\n                placeholder=\"Ej: 300 123 45 67\"\n                name=\"telefono\"\n                leyendaError=\"Campo es requerido, solo números\"\n                expresionRegular={expresiones.telefono}\n              />\n\n              <br />\n\n              <div className=\"col-md-12 titulo-indicativo\">\n                <h4 className=\"subtitle-form\">\n                  Características del terminal móvil\n                </h4>\n                <p className=\"txt-obliga\">*Campos obligatorios</p>\n              </div>\n              <br />\n\n              <div>\n                <Label htmlFor=\"tipoDispositivo\">Tipo de Dispositivo*</Label>\n                <Select\n                  id=\"tipoDispositivo\"\n                  data-toggle=\"tooltip\"\n                  title=\"Seleccionar tipo dispositivo\"\n                  onClick={(event) => {\n                    // here set target value to state which is 0, 1, 2, 3\n                    setTipoDispositivo(event.target.value);\n                  }}\n                >\n                  <option value=\"\" selected hidden>Ej. Móvil</option>\n                  <option value=\"telefono\">Télefono Inteligente</option>\n                  <option value=\"computador\">Computador de Bolsillo</option>\n                  <option value=\"dispositivo\">Dispositivo IoT</option>\n                  <option value=\"modulo\">Módulo</option>\n                  <option value=\"reloj\">Reloj Inteligente</option>\n                  <option value=\"router\">Router</option>\n                  <option value=\"otro\">Otro ¿Cúal?</option>\n                </Select>\n                <LeyendaError>Campo tipo persona es requerido</LeyendaError>\n              </div>\n              \n              {getTipoDispositivoDiv()}\n\n              \n\n              <br />\n              {/*\n<ComponenteInput\n                estado={tipoDeDispositivo}\n                cambiarEstado={cambiarTipoDeDispositivo}\n                tipo=\"text\"\n                label=\"Tipo de Dispositivo *\"\n                placeholder=\"Ej: Télefono Inteligente\"\n                name=\"tipoDeDispositivo\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={marca}\n                cambiarEstado={cambiarMarca}\n                tipo=\"text\"\n                label=\"Marca *\"\n                placeholder=\"Ej: Apple\"\n                name=\"marca\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={nombreComercial}\n                cambiarEstado={cambiarNombreComercial}\n                tipo=\"text\"\n                label=\"Nombre Comercial *\"\n                placeholder=\"Ej: Serie 3\"\n                name=\"nombreComercial\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={modelo}\n                cambiarEstado={cambiarModelo}\n                tipo=\"text\"\n                label=\"Modelo *\"\n                placeholder=\"Ej: Once\"\n                name=\"modelo\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={fabricante}\n                cambiarEstado={cambiarFabricante}\n                tipo=\"text\"\n                label=\"Fabricante\"\n                placeholder=\"Ej: Huawei\"\n                name=\"fabricante\"\n                leyendaError=\"Campo requerido\"\n                expresionRegular={expresiones.apellido2}\n              />\n              */}\n              \n            </Formulario>\n            <br />\n            <br />\n            <div className=\"col-md-12 titulo-indicativo\">\n              <h4 className=\"subtitle-form\">TAC *</h4>\n              <p className=\"txt-obliga\">\n                En esta sección podrá agregar múltiples TAC para el modelo de\n                terminal que está homologando. Tenga en cuenta que la CRC\n                validará los TAC registrados en la solicitud ante la base de\n                datos de la GSMA.\n              </p>\n              <br />\n              <div>\n                <span class=\"button-carga-principal btn-file\">\n                  Agregar TAC\n                  <input type=\"file\" />\n                </span>\n              </div>\n              <br />\n              <br />\n            </div>\n            <div class=\"tabla\">\n              <p class=\"titulo-tabla\">Listado de TAC</p>\n              <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\" class=\"titulo-tableta\">\n                      TAC\n                    </th>\n                    <th scope=\"col\" class=\"titulo-tableta\">\n                      Acciones\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th scope=\"row\">Sin datos</th>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <br />\n            <div className=\"col-md-12 titulo-indicativo\">\n              <h4 className=\"subtitle-form\"> Archivos Adjuntos</h4>\n              <p className=\"txt-obliga\">Por favor tenga en cuenta:</p>\n              <p className=\"txt-obliga\">\n                ** El tamaño total de todos los archivos adjuntos no podrá ser\n                mayor a 30 MB.\n              </p>\n              <p className=\"txt-obliga\">\n                ** Formatos admitidos para archivos adjuntos: Pdf, Doc, Docx,\n                Xls, Xlsx, Gif, Png, Jpeg, Tif, Tiff, Zip y Rar\n              </p>\n              <br />\n            \n              <div>\n                <DragArea />\n              </div>\n              <br />\n              \n            </div>\n            <br />\n            <div className=\"col-md-12 titulo-indicativo\">\n              <h4 className=\"subtitle-form\">Verificación de Seguridad *</h4>\n            </div>\n            <br />\n            <ContenedorTerminos>\n              <Label>\n                <input\n                  type=\"checkbox\"\n                  name=\"terminos\"\n                  id=\"terminos\"\n                  checked={terminos}\n                  onChange={onChangeTerminos}\n                />\n                Acepto que he leido los Términos y condiciones *\n              </Label>\n            </ContenedorTerminos>\n            {formularioValido === false && (\n              <MensajeError>\n                <p>\n                  <FontAwesomeIcon icon={faExclamationTriangle} />\n                  <b>Error: </b> Por favor rellena el formulario correctamente.\n                </p>\n              </MensajeError>\n            )}\n            <ContenedorBotonCentrado>\n              <Boton\n                id=\"envio\"\n                type=\"submit\"\n                onClick={() => cambiarEstadoModal(!estadoModal)}\n              >\n                ENVIAR\n              </Boton>\n              {formularioValido === true && (\n                <MensajeExito id=\"msjexito\">\n                  <p>\n                    <FontAwesomeIcon icon={faCheckCircle} />\n                    <b>Exitosa: </b>Su solicitud se ha registrado\n                    satisfactoriamente\n                  </p>\n                </MensajeExito>\n              )}\n            </ContenedorBotonCentrado>\n          </div>\n\n          <div className=\"col-md-1\"></div>\n\n          <div className=\"col-md-3 p-0\">\n            <aside className=\"aside\">\n              <br />\n              <br />\n              <BotonTutoriales />\n              <BotonDeDudas />\n              <br />\n              <br />\n              <CalificacionExperiencia />\n              <br />\n              <br />\n              <BotonInicio />\n            </aside>\n          </div>\n        </div>\n        {/* END CONTAINER */}\n      </div>\n      <Footer />\n      <FooterGov />\n\n      {/* MODAL DE ACEPTAR FORMULARIO */}\n      <Modal\n        estado={estadoModal}\n        cambiarEstado={cambiarEstadoModal}\n        titulo=\"\"\n        mostrarHeader={true}\n        mostrarOverlay={true}\n        posicionModal={\"start\"}\n        padding={\"20px\"}\n      >\n        {!usuarioValido && (\n          <Contenido>\n            <form>\n              <h1>\n                Términos y condiciones de uso del Sistema de Homologación de\n                equipos terminales\n              </h1>\n              <h6>\n                <strong>1. Del Servicio</strong>\n                Por lo anterior, para homologar un equipo terminal móvil en\n                Colombia, se debe realizar OBLIGATORIAMENTE la solicitud en\n                línea a través del formulario establecido para el efecto en el\n                portal web (www.tramitescrcom.gov.co), en el cual se deberá\n                suministrar la información requerida en\n                (http://bit.ly/homologarcelular). Allí podrá encontrar una guía\n                del paso a paso en videos para realizar este trámite.\n              </h6>\n              <br />\n\n              <ContenedorBotonCentrado className=\"recaptcha\">\n                <ReCAPTCHA\n                  ref={captcha}\n                  sitekey=\"6Lc9VDIeAAAAAHHQA1wEjx1FKlTy9uWIrZKGwwvN\"\n                  onChange={onChange}\n                />\n              </ContenedorBotonCentrado>\n\n              {captchaValido === false && (\n                <div className=\"error-captcha\">Por favor acepta el captcha</div>\n              )}\n              <ContenedorBotones>\n                <Boton type=\"submit\">\n                  <Link to=\"/SolicitudHomologacion\" className=\"irTramite\">\n                    ACEPTAR\n                  </Link>\n                </Boton>\n                <br />\n                <Boton2 onClick={() => cambiarEstadoModal(!estadoModal)}>\n                  RECHARZAR\n                </Boton2>\n              </ContenedorBotones>\n            </form>\n          </Contenido>\n        )}\n        {usuarioValido && (\n          <div>\n            <h1>Bienvenido</h1>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default FormularioSolicitud;\n/*\nconst Boton = styled.button`\n  border-radius: 20px;\n  border_radius: 100px;\n  border: none;\n  background: #1766dc;\n  cursor: pointer;\n  display: block;\n  font: normal bold 15px/5px \"Works Sans\", sans-serif;\n  padding: 10px 30px;\n  transition: 0.3s ease all;\n\n  a {\n    color: #ffff;\n  }\n\n  &:hover {\n    background: #004884;\n  }\n`;\n*/\nconst Boton2 = styled.button`\n  border-radius: 20px;\n  border: 2px solid #3366cc;\n  background: #ffff;\n  color: #3366cc;\n  cursor: pointer;\n  display: block;\n  font-family: \"Roboto\", sans-serif;\n  font-weight: 500;\n  padding: 10px 30px;\n  transition: 0.3s ease all;\n\n  &:hover {\n    background: #0066ff;\n    color: #ffff;\n  }\n`;\n\nconst Contenido = styled.div`\n  display: flex;\n  padding: 20px;\n  flex-direction: column;\n  max-height: calc(100vh - 210px);\n  overflow-y: auto;\n\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n  }\n\n  h1 {\n    color: #13386d;\n    font: normal 600 18px/10px \"Montserrat\", sans-serif;\n    line-height: 1.5;\n    margin-bottom: 10px;\n  }\n\n  h6 {\n    color: #4b4b4b;\n    font: normal normal 1rem/10px \"Works Sans\", sans-serif;\n    margin: 0;\n    text-align: left;\n    line-height: 1.5;\n  }\n\n  a {\n    font: normal normal 1rem/10px \"Works Sans\", sans-serif;\n  }\n`;\n\nconst ContenedorBotones = styled.div`\n  padding: 40px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n"]},"metadata":{},"sourceType":"module"}
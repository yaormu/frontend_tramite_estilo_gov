{"ast":null,"code":"var _jsxFileName = \"/home/yamid/Documentos/ReactJS/puntogov/src/App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./assets/styles/App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Section from \"./components/Section/Section\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport FooterGov from \"./components/FooterGov/FooterGov\";\n\nconst App = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FooterGov, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/React.createElement(Home, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 36\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))));\n}; //componente funcional llamado Home y el cual contendra los démas componentes de la aplicación 👇\n\n\nconst Home = () => {\n  //Para obtener datos de esta API, usaremos el hook huseEffect\n  useEffect(() => {}, [api]); //Esto significa que, en caso de que cambie la variable api, queremos cargar datos nuevos y frescos\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then(res => res.json()); //console.log(data);\n\n      setFetchedData(data);\n    })();\n  }, [api]);\n  /*\n  Estamos usando una función asincrónica para recuperar nuestros datos sin procesar \n  y luego los convertimos a formato JSON. Revisemos la consola para ver lo que tenemos \n  en el Objeto que tiene la información consumida de la API\n  \n  Si cambiamos el número de página a 2 dentro de la API y encontrará nuevos datos\n  y podremos verifica en la consola\n  */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Characters\"), /*#__PURE__*/React.createElement(Search, {\n    updatePageNumber: updatePageNumber,\n    setSearch: setSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Filter, {\n    pageNumber: pageNumber,\n    status: status,\n    updateStatus: updateStatus,\n    updateGender: updateGender,\n    updateSpecies: updateSpecies,\n    updatePageNumber: updatePageNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    page: \"/\",\n    results: results,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Pagination, {\n    info: info,\n    pageNumber: pageNumber,\n    setPageNumber: updatePageNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/yamid/Documentos/ReactJS/puntogov/src/App.js"],"names":["React","BrowserRouter","Router","Routes","Route","Header","Footer","Section","Navbar","FooterGov","App","Home","useEffect","api","data","fetch","then","res","json","setFetchedData","updatePageNumber","setSearch","pageNumber","status","updateStatus","updateGender","updateSpecies","results","info"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport \"./assets/styles/App.scss\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap\";\n\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Section from \"./components/Section/Section\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport FooterGov from \"./components/FooterGov/FooterGov\";\n\nconst App = () => {\n  return (\n    <>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <div className=\"container\">\n            <Header />\n            <Section />\n          </div>\n          <Footer />\n          <FooterGov />\n        </div>\n\n      {/*\n        *Necesitamos definir todas nuestras rutas. Recuerde, Routes es una colección de Routes. \n        *La Route es la ruta real del archivo. Cada ruta requiere 2 cosas: \n        *la ruta a la que realmente conducirá la aplicación y el elemento que se cargará. 👇\n      */}\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\n\n//componente funcional llamado Home y el cual contendra los démas componentes de la aplicación 👇\nconst Home = () => {\n  \n  \n\n  //Para obtener datos de esta API, usaremos el hook huseEffect\n  useEffect(() => { }, [api]);\n\n  //Esto significa que, en caso de que cambie la variable api, queremos cargar datos nuevos y frescos\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      //console.log(data);\n      setFetchedData(data)\n    })();\n  }, [api]);\n\n  /*\n  Estamos usando una función asincrónica para recuperar nuestros datos sin procesar \n  y luego los convertimos a formato JSON. Revisemos la consola para ver lo que tenemos \n  en el Objeto que tiene la información consumida de la API\n  \n  Si cambiamos el número de página a 2 dentro de la API y encontrará nuevos datos\n  y podremos verifica en la consola\n  */\n\n  return (\n    <>\n      <div className=\"App\">\n          <h1 className=\"text-center mb-3\">Characters</h1>\n          <Search updatePageNumber={updatePageNumber} setSearch={setSearch} />\n          \n          <div className=\"container\">\n            <div className=\"row\">\n              {/*importaremos nuestro componente de filtro dentro de nuestra aplicación, donde su componente de filtro escrito se colocará aquí. Además, pasamos todos estos accesorios obligatorios: 👇*/}\n              <Filter\n                pageNumber={pageNumber}\n                status={status}\n                updateStatus={updateStatus}\n                updateGender={updateGender}\n                updateSpecies={updateSpecies}\n                updatePageNumber={updatePageNumber}\n              />\n              <div className=\"col-lg-8 col-12\">\n                <div className=\"row\">\n                  {/* 👇 para que se refiera a la página de inicio */}\n                  <Card page=\"/\" results={results} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <Pagination\n            info={info}\n            pageNumber={pageNumber} \n            setPageNumber={updatePageNumber} \n          />\n        </div>\n    </>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
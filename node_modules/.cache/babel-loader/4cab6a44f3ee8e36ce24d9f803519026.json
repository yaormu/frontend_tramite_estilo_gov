{"ast":null,"code":"var _jsxFileName = \"/home/yamid/Documentos/ReactJS/puntogov/src/Pages/FormularioSolicitud/FormularioSolicitud.js\";\nimport React, { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\"; // Estilos generales del formulario\n\nimport \"./FormularioSolicitud.scss\"; // Componentes obligatorios a mostrar en el sitio\n\nimport Header from \"../../components/Header/Header\";\nimport Navigation from \"../../components/Navigation/Navigation\";\nimport NavProceso from \"../../components/NavProceso/NavProceso\";\nimport BotonTutoriales from \"../../components/Botones/BotonTutoriales/BotonTutoriales\";\nimport BotonDeDudas from \"../../components/Botones/BotonDeDudas/BotonDeDudas\";\nimport CalificacionExperiencia from \"../../components/Cards/CalificacionExperiencia/CalificacionExperiencia\";\nimport CalificaExperienciaFooter from \"../../components/Cards/CalificacionExperiencia/CalificaExperienciaFooter\";\nimport BotonInicio from \"../../components/Botones/BotonInicio/BotonInicio\";\nimport Footer from \"../../components/Footer/Footer\";\nimport FooterGov from \"../../components/FooterGov/FooterGov\"; // Modal a mostra antes de enviar información formulario\n\nimport Modal from \"../../components/Modal/Modal\"; // Importación iconos para mostrar en mensajes de error o exito\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExclamationTriangle, faCheckCircle } from \"@fortawesome/free-solid-svg-icons\"; // Libreria para el uso de recaptcha\n\nimport ReCAPTCHA from \"react-google-recaptcha\"; // Libreria syled que nos permite crear componentes con diseños, despues la linea exportar se encuentran\n\nimport styled from \"styled-components\"; // Importación elementos html de componente con estilos predefinidos styled\n\nimport { Formulario, Label, Select, Boton, ContenedorTerminos, ContenedorBotonCentrado, LeyendaError, MensajeExito, MensajeError } from \"./elementos/Formularios\"; // Import componente styled con diseño predeterminado\n\nimport ComponenteInput from \"./componentes/ComponenteInput\";\nimport ComponenteInputDisabled from \"./componentes/ComponenteInputDisabled\";\nimport DragArea from \"./componentes/DragArea\";\nimport TestingDocument from \"../../components/TestingDocument/TestingDocument\";\nimport MenuDesplegable from \"../../components/MenuDesplegable/MenuDesplegable\";\n\nconst FormularioSolicitud = () => {\n  // Validar Datos de identificación\n  const [persona, cambiarPersona] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [tipoId, cambiarTipoId] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [identificacion, cambiarIdentificacion] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [identificacion2, cambiarIdentificacion2] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nombre, cambiarNombre] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nombre2, cambiarNombre2] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [apellido, cambiarApellido] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [apellido2, cambiarApellido2] = useState({\n    campo: \"\",\n    valido: null\n  }); // Validar Datos de contacto y ubicación\n\n  const [nit, cambiarNit] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nit2, cambiarNit2] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nombreEmpresa, cambiarNombreEmpresa] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nombreRLoApoderado, cambiarNombreRLoApoderado] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [digitoVerificacion, cambiarDigitoVerificacion] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [digitoVerificacion2, cambiarDigitoVerificacion2] = useState({\n    campo: \"\",\n    valido: null\n  }); // Validar Datos de contacto y ubicación\n\n  const [pais, cambiarPais] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [departamento, cambiarDepartamento] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [municipio, cambiarMunicipio] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [direccion, cambiarDireccion] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [correo, cambiarCorreo] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [correo2, cambiarCorreo2] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [telefono, cambiarTelefono] = useState({\n    campo: \"\",\n    valido: null\n  }); // Validar Características del terminal móvil\n\n  const [nombreOtroDispositivo, cambiarNombreOtroDispositivo] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [marca, cambiarMarca] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [nombreComercial, cambiarNombreComercial] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [modelo, cambiarModelo] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [fabricante, cambiarFabricante] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [casoUsoDispositivo, cambiarCasoUsoDispositivo] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [marcaEquipoAnfitrion, cambiarMarcaEquipoAnfitrion] = useState({\n    campo: \"\",\n    valido: null\n  });\n  const [modeloEquipoAnfitrion, cambiarModeloEquipoAnfitrion] = useState({\n    campo: \"\",\n    valido: null\n  }); // Validar formulario y términos condiciones\n\n  const [formularioValido, cambiarFormularioValido] = useState(null);\n  const [terminos, cambiarTerminos] = useState(false);\n  const [autorizaDatos, cambiarAutorizaDatos] = useState(false); // Referencia al captcha\n\n  const captcha = useRef(null); // Dependiendo el estado seleccionado en lista desplegable, mostrar x campos en formulario\n\n  const [tipoPersona, setTipoPersona] = useState(null);\n  const [tipoIdentificacion, setTipoIdentificacion] = useState(null);\n  const [tipoDispositivo, setTipoDispositivo] = useState(null); // Mostrar y ocultar modal\n\n  const [estadoModal, cambiarEstadoModal] = useState(false); //Dependiendo estado captcha a seleccionado dejar enviar formulario\n\n  const [captchaValido, cambiarCaptchaValido] = useState(null);\n  const [usuarioValido, cambiarUsuarioValido] = useState(false); // Expresiones regulares para validar que los campos cumplan con las condiciones\n\n  const expresiones = {\n    usuario: /^[a-zA-Z0-9_-]{4,16}$/,\n    // Letras, numeros, guion y guion_bajo\n    nombre: /^[a-zA-ZÀ-ÿ\\s]{1,40}$/,\n    // Letras y espacios, pueden llevar acentos.\n    identificacion: /^\\d{6,14}$/,\n    // 6 a 14 numeros.\n    password: /^.{4,12}$/,\n    // 4 a 12 digitos.\n    correo: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\n    telefono: /^\\d{7,14}$/,\n    // 7 a 14 numeros.\n    digitoV: /^\\d{1,1}$/ // 1 a 1 numero.\n\n  }; // Campo confirmar Número de Identificación se igual campo a comprobar\n\n  const validarIdentificacion2 = () => {\n    if (identificacion.campo.length > 0) {\n      if (identificacion.campo !== identificacion2.campo) {\n        cambiarIdentificacion2(prevState => {\n          return { ...prevState,\n            valido: \"false\"\n          };\n        });\n      } else {\n        cambiarIdentificacion2(prevState => {\n          return { ...prevState,\n            valido: \"true\"\n          };\n        });\n      }\n    }\n  }; // Campo confirmar Número de NIT se igual campo a comprobar\n\n\n  const validarNit2 = () => {\n    if (nit.campo.length > 0) {\n      if (nit.campo !== nit2.campo) {\n        cambiarNit2(prevState => {\n          return { ...prevState,\n            valido: \"false\"\n          };\n        });\n      } else {\n        cambiarNit2(prevState => {\n          return { ...prevState,\n            valido: \"true\"\n          };\n        });\n      }\n    }\n  }; // Campo confirmar Número Digito veririfcacion (DV) igual campo a comprobar\n\n\n  const validarDigitoVerificacion2 = () => {\n    if (digitoVerificacion.campo.length > 0) {\n      if (digitoVerificacion.campo !== digitoVerificacion2.campo) {\n        cambiarDigitoVerificacion2(prevState => {\n          return { ...prevState,\n            valido: \"false\"\n          };\n        });\n      } else {\n        cambiarDigitoVerificacion2(prevState => {\n          return { ...prevState,\n            valido: \"true\"\n          };\n        });\n      }\n    }\n  }; // Campo confirmar correo electronico igual campo a comprobar\n\n\n  const validarCorreo2 = () => {\n    if (correo.campo.length > 0) {\n      if (correo.campo !== correo2.campo) {\n        cambiarCorreo2(prevState => {\n          return { ...prevState,\n            valido: \"false\"\n          };\n        });\n      } else {\n        cambiarCorreo2(prevState => {\n          return { ...prevState,\n            valido: \"true\"\n          };\n        });\n      }\n    }\n  };\n\n  const onChangeTerminos = e => {\n    cambiarTerminos(e.target.checked);\n  };\n\n  const onChangeDatos = e => {\n    cambiarAutorizaDatos(e.target.checked);\n  };\n\n  const onChange = () => {\n    if (captcha.current.getValue()) {\n      console.log(\"El usuario no es un robot\");\n      cambiarCaptchaValido(true);\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); //Colocar aquí la validación de los inputs del formulario. Si son correctos ya podemos enviar el formulario, actualizar la interfaz etc\n\n    if (captcha.current.getValue()) {\n      console.log(\"El usuario no es un robot\");\n      cambiarCaptchaValido(true);\n    } else {\n      console.log(\"Por favor acepta el captcha\");\n      cambiarCaptchaValido(false);\n    }\n\n    if (identificacion.valido === \"true\" && identificacion2.valido === \"true\" && nombre.valido === \"true\" && apellido.valido === \"true\" && terminos) {\n      cambiarFormularioValido(true);\n      cambiarPersona({\n        campo: \"\",\n        valido: null\n      });\n      cambiarTipoId({\n        campo: \"\",\n        valido: null\n      });\n      cambiarIdentificacion({\n        campo: \"\",\n        valido: null\n      });\n      cambiarIdentificacion2({\n        campo: \"\",\n        valido: null\n      });\n      cambiarNombre({\n        campo: \"\",\n        valido: null\n      });\n      cambiarNombre2({\n        campo: \"\",\n        valido: null\n      });\n      cambiarApellido({\n        campo: \"\",\n        valido: null\n      });\n      cambiarApellido2({\n        campo: \"\",\n        valido: null\n      });\n      cambiarTerminos(false); // ... Puedo ir código consumido externo como de una API\n    } else {\n      cambiarFormularioValido(false);\n    }\n  }; // Selección tipo persona\n\n\n  function getTipoPersonaDiv() {\n    switch (tipoPersona) {\n      case \"natural\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          htmlFor: \"tipoId\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }\n        }, \"Tipo de Identificaci\\xF3n *\"), /*#__PURE__*/React.createElement(Select, {\n          id: \"tipoIdentificacion\",\n          \"data-toggle\": \"tooltip\",\n          title: \"Seleccionar tipo documento de Identificaci\\xF3n\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"1\",\n          selected: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }\n        }, \"C\\xE9dula de Ciudadania\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }\n        }, \"C\\xE9dula extranjeria\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }\n        }, \"ID pasaporte\")), /*#__PURE__*/React.createElement(LeyendaError, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }\n        }, \"Campo tipo iden es requerido\")), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: identificacion,\n          cambiarEstado: cambiarIdentificacion,\n          tipo: \"text\",\n          label: \"N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 1234567890\",\n          name: \"identificacion\",\n          leyendaError: \"Campo n\\xFAmero de identificaci\\xF3n es requerido, solo se permiten n\\xFAmeros y minimo 6 digitos\",\n          expresionRegular: expresiones.identificacion,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: identificacion2,\n          cambiarEstado: cambiarIdentificacion2,\n          tipo: \"text\",\n          label: \"Confirmar N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 1234567890\",\n          name: \"identificacion\",\n          leyendaError: \"Campo confirmar n\\xFAmero de identificaci\\xF3n es requerido, y debe ser igual al campo n\\xFAmero de identificaci\\xF3n\",\n          funcion: validarIdentificacion2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombre,\n          cambiarEstado: cambiarNombre,\n          tipo: \"text\",\n          label: \"Primer Nombre *\",\n          placeholder: \"Ej: Pepito\",\n          name: \"nombre\",\n          leyendaError: \"Campo primer nombre es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombre2,\n          cambiarEstado: cambiarNombre2,\n          tipo: \"text\",\n          label: \"Segundo Nombre\",\n          placeholder: \"Ej: Andres\",\n          name: \"nombre2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: apellido,\n          cambiarEstado: cambiarApellido,\n          tipo: \"text\",\n          label: \"Primer Apellido *\",\n          placeholder: \"Ej: Perez\",\n          name: \"apellido\",\n          leyendaError: \"Campo primer apellido es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: apellido2,\n          cambiarEstado: cambiarApellido2,\n          tipo: \"text\",\n          label: \"Segundo Apellido\",\n          placeholder: \"Ej: Rodriguez\",\n          name: \"apellido2\",\n          leyendaError: \"Campo requerido\",\n          expresionRegular: expresiones.apellido2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }\n        }));\n\n      case \"juridica\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          htmlFor: \"tipoId\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }\n        }, \"Tipo de Identificaci\\xF3n *\"), /*#__PURE__*/React.createElement(Select, {\n          id: \"tipoIdentificacion\",\n          \"data-toggle\": \"tooltip\",\n          title: \"Seleccionar tipo documento de Identificaci\\xF3n\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"1\",\n          selected: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }\n        }, \"N\\xFAmero de Identificaci\\xF3n Tributaria (NIT)\")), /*#__PURE__*/React.createElement(LeyendaError, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }\n        }, \"Campo tipo iden es requerido\")), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nit,\n          cambiarEstado: cambiarNit,\n          tipo: \"text\",\n          label: \"N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 8603842563\",\n          name: \"nit\",\n          leyendaError: \"Campo requerido, solo se aceptan n\\xFAmeros\",\n          expresionRegular: expresiones.identificacion,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: digitoVerificacion,\n          cambiarEstado: cambiarDigitoVerificacion,\n          tipo: \"text\",\n          label: \"Digito Verificaci\\xF3n *\",\n          placeholder: \"Ej: 8\",\n          name: \"digitoVerificacion\",\n          leyendaError: \"Campo requerido, solo se un n\\xFAmero\",\n          expresionRegular: expresiones.digitoV,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nit2,\n          cambiarEstado: cambiarNit2,\n          tipo: \"text\",\n          label: \"Confirmar N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 8603842563\",\n          name: \"nit2\",\n          leyendaError: \"Campo requerido, coincidir con n\\xFAmero nit ingresado\",\n          funcion: validarNit2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: digitoVerificacion2,\n          cambiarEstado: cambiarDigitoVerificacion2,\n          tipo: \"text\",\n          label: \"Confirmar Digito Verificaci\\xF3n*\",\n          placeholder: \"Ej: 8\",\n          name: \"digitoVerificacion2\",\n          leyendaError: \"Campo es requerido, coincidir con n\\xFAmero DV ingresado\",\n          expresionRegular: expresiones.digitoV,\n          funcion: validarDigitoVerificacion2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreEmpresa,\n          cambiarEstado: cambiarNombreEmpresa,\n          tipo: \"text\",\n          label: \"Nombre de la empresa *\",\n          placeholder: \"Ej: Microchips y Telecomunicaciones SAS\",\n          name: \"nombreEmpresa\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreRLoApoderado,\n          cambiarEstado: cambiarNombreRLoApoderado,\n          tipo: \"text\",\n          label: \"Nombre Representante Legal o APoderado*\",\n          placeholder: \"Ej: Pablo Jesus Lozada Cortez\",\n          name: \"apellido\",\n          leyendaError: \"Campo primer apellido es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }\n        }));\n\n      default:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ComponenteInputDisabled, {\n          estado: tipoId,\n          cambiarEstado: cambiarTipoId,\n          tipo: \"text\",\n          label: \"Tipo de Identificaci\\xF3n *\",\n          placeholder: \"Ej: C\\xE9dula de Ciudadania\",\n          name: \"tipoId\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInputDisabled, {\n          estado: \"identificacionSeleccion\",\n          tipo: \"text\",\n          label: \"N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 1234567890\",\n          name: \"identificacionSeleccion\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInputDisabled, {\n          estado: nit2,\n          cambiarEstado: cambiarNit2,\n          tipo: \"text\",\n          label: \"Confirmar N\\xFAmero de Identificaci\\xF3n *\",\n          placeholder: \"Ej: 1234567890\",\n          name: \"identificacion\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }\n        }));\n    }\n  } // Selección tipo dispositivo\n\n\n  function getTipoDispositivoDiv() {\n    switch (tipoDispositivo) {\n      case \"dispositivo\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: marca,\n          cambiarEstado: cambiarMarca,\n          tipo: \"text\",\n          label: \"Marca *\",\n          placeholder: \"Ej: Apple\",\n          name: \"marca\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreComercial,\n          cambiarEstado: cambiarNombreComercial,\n          tipo: \"text\",\n          label: \"Nombre Comercial *\",\n          placeholder: \"Ej: Serie 3\",\n          name: \"nombreComercial\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: modelo,\n          cambiarEstado: cambiarModelo,\n          tipo: \"text\",\n          label: \"Modelo *\",\n          placeholder: \"Ej: Once\",\n          name: \"modelo\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: fabricante,\n          cambiarEstado: cambiarFabricante,\n          tipo: \"text\",\n          label: \"Fabricante\",\n          placeholder: \"Ej: Huawei\",\n          name: \"fabricante\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: casoUsoDispositivo,\n          cambiarEstado: cambiarCasoUsoDispositivo,\n          tipo: \"text\",\n          label: \"Caso de uso del Dispositivo*\",\n          placeholder: \"Ej: Las caracteristicas de dispositivo...\",\n          name: \"casoUsoDispositivo\",\n          leyendaError: \"Campo requerido\",\n          expresionRegular: expresiones.apellido,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          class: \"contenedor-comentarios\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          class: \"mb-0 pb-1 title-comentario\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }\n        }, \"Escribre tus comentarios:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n          className: \"textoarea\",\n          placeholder: \"Queremos conocer tu experiencia \\xF3 sugerencias\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }\n        })));\n\n      case \"modulo\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: marca,\n          cambiarEstado: cambiarMarca,\n          tipo: \"text\",\n          label: \"Marca del M\\xF3dulo Interno*\",\n          placeholder: \"Ej: Apple\",\n          name: \"marcaModulo\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreComercial,\n          cambiarEstado: cambiarNombreComercial,\n          tipo: \"text\",\n          label: \"Nombre Comercial*\",\n          placeholder: \"Ej: Serie 3\",\n          name: \"nombreComercial\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: modelo,\n          cambiarEstado: cambiarModelo,\n          tipo: \"text\",\n          label: \"Modelo del M\\xF3dulo Interno*\",\n          placeholder: \"Ej: Once\",\n          name: \"modeloModuloInterno\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: fabricante,\n          cambiarEstado: cambiarFabricante,\n          tipo: \"text\",\n          label: \"Fabricante\",\n          placeholder: \"Ej: Huawei\",\n          name: \"fabricante\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: marcaEquipoAnfitrion,\n          cambiarEstado: cambiarMarcaEquipoAnfitrion,\n          tipo: \"text\",\n          label: \"Marca del Equipo Anfitri\\xF3n*\",\n          placeholder: \"Ej: Las caracteristicas de dispositivo...\",\n          name: \"marcaEquipoFabricante\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: modeloEquipoAnfitrion,\n          cambiarEstado: cambiarModeloEquipoAnfitrion,\n          tipo: \"text\",\n          label: \"Modelo del Equipo Anfitri\\xF3n*\",\n          placeholder: \"Ej: Las caracteristicas de dispositivo...\",\n          name: \"modeloEquipoAnfitrion\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }\n        }));\n\n      case \"otro\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreOtroDispositivo,\n          cambiarEstado: cambiarNombreOtroDispositivo,\n          tipo: \"text\",\n          label: \"Nombre otro Dispositivo*\",\n          placeholder: \"Ej: Apple\",\n          name: \"nombreOtroDispositivo\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: marca,\n          cambiarEstado: cambiarMarca,\n          tipo: \"text\",\n          label: \"Marca *\",\n          placeholder: \"Ej: Apple\",\n          name: \"marca\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreComercial,\n          cambiarEstado: cambiarNombreComercial,\n          tipo: \"text\",\n          label: \"Nombre Comercial *\",\n          placeholder: \"Ej: Serie 3\",\n          name: \"nombreComercial\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: modelo,\n          cambiarEstado: cambiarModelo,\n          tipo: \"text\",\n          label: \"Modelo *\",\n          placeholder: \"Ej: Once\",\n          name: \"modelo\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: fabricante,\n          cambiarEstado: cambiarFabricante,\n          tipo: \"text\",\n          label: \"Fabricante\",\n          placeholder: \"Ej: Huawei\",\n          name: \"fabricante\",\n          leyendaError: \"Campo requerido\",\n          expresionRegular: expresiones.apellido2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }\n        }));\n\n      default:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: marca,\n          cambiarEstado: cambiarMarca,\n          tipo: \"text\",\n          label: \"Marca *\",\n          placeholder: \"Ej: Apple\",\n          name: \"marca\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: nombreComercial,\n          cambiarEstado: cambiarNombreComercial,\n          tipo: \"text\",\n          label: \"Nombre Comercial *\",\n          placeholder: \"Ej: Serie 3\",\n          name: \"nombreComercial\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: modelo,\n          cambiarEstado: cambiarModelo,\n          tipo: \"text\",\n          label: \"Modelo *\",\n          placeholder: \"Ej: Once\",\n          name: \"modelo\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: fabricante,\n          cambiarEstado: cambiarFabricante,\n          tipo: \"text\",\n          label: \"Fabricante\",\n          placeholder: \"Ej: Huawei\",\n          name: \"fabricante\",\n          leyendaError: \"Campo requerido\",\n          expresionRegular: expresiones.apellido2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 13\n          }\n        }));\n    }\n  } // Selección tipo dispositivo\n\n\n  function getTipoPaisDiv() {\n    switch (pais) {\n      case \"colombia\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MenuDesplegable, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: direccion,\n          cambiarEstado: cambiarDireccion,\n          tipo: \"text\",\n          label: \"Direcci\\xF3n *\",\n          placeholder: \"Ej: CL 1 23 45\",\n          name: \"direccion\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: correo,\n          cambiarEstado: cambiarCorreo,\n          tipo: \"text\",\n          label: \"Correo Electr\\xF3nico *\",\n          placeholder: \"Ej: falso@gmail.com\",\n          name: \"correo\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.correo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: correo,\n          cambiarEstado: cambiarCorreo,\n          tipo: \"text\",\n          label: \"Confirmar Correo Electr\\xF3nico *\",\n          placeholder: \"Ej: falso@gmail.com\",\n          name: \"correo\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.correo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: telefono,\n          cambiarEstado: cambiarTelefono,\n          tipo: \"text\",\n          label: \"Tel\\xE9fono Remitente *\",\n          placeholder: \"Ej: 300 123 45 67\",\n          name: \"telefono\",\n          leyendaError: \"Campo es requerido, solo n\\xFAmeros\",\n          expresionRegular: expresiones.telefono,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 13\n          }\n        }));\n\n      case \"otroPais\":\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ComponenteInputDisabled, {\n          estado: departamento,\n          cambiarEstado: cambiarDepartamento,\n          tipo: \"text\",\n          label: \"Departamento *\",\n          placeholder: \"Ej: Cundinamarca\",\n          name: \"departamento\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInputDisabled, {\n          estado: municipio,\n          cambiarEstado: cambiarMunicipio,\n          tipo: \"text\",\n          label: \"Municipio *\",\n          placeholder: \"Ej: Madrid\",\n          name: \"municipio\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: direccion,\n          cambiarEstado: cambiarDireccion,\n          tipo: \"text\",\n          label: \"Direcci\\xF3n *\",\n          placeholder: \"Ej: CL 1 23 45\",\n          name: \"direccion\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: correo,\n          cambiarEstado: cambiarCorreo,\n          tipo: \"text\",\n          label: \"Correo Electr\\xF3nico *\",\n          placeholder: \"Ej: falso@gmail.com\",\n          name: \"correo\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.correo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: correo,\n          cambiarEstado: cambiarCorreo,\n          tipo: \"text\",\n          label: \"Confirmar Correo Electr\\xF3nico *\",\n          placeholder: \"Ej: falso@gmail.com\",\n          name: \"correo\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.correo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: telefono,\n          cambiarEstado: cambiarTelefono,\n          tipo: \"text\",\n          label: \"Tel\\xE9fono Remitente *\",\n          placeholder: \"Ej: 300 123 45 67\",\n          name: \"telefono\",\n          leyendaError: \"Campo es requerido, solo n\\xFAmeros\",\n          expresionRegular: expresiones.telefono,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 13\n          }\n        }));\n\n      default:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ComponenteInputDisabled, {\n          estado: departamento,\n          cambiarEstado: cambiarDepartamento,\n          tipo: \"text\",\n          label: \"Departamento *\",\n          placeholder: \"Ej: Cundinamarca\",\n          name: \"departamento\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInputDisabled, {\n          estado: municipio,\n          cambiarEstado: cambiarMunicipio,\n          tipo: \"text\",\n          label: \"Municipio *\",\n          placeholder: \"Ej: Madrid\",\n          name: \"municipio\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: direccion,\n          cambiarEstado: cambiarDireccion,\n          tipo: \"text\",\n          label: \"Direcci\\xF3n *\",\n          placeholder: \"Ej: CL 1 23 45\",\n          name: \"direccion\",\n          leyendaError: \"Campo es requerido, solo se aceptan letras\",\n          expresionRegular: expresiones.nombre,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: correo,\n          cambiarEstado: cambiarCorreo,\n          tipo: \"text\",\n          label: \"Correo Electr\\xF3nico *\",\n          placeholder: \"Ej: falso@gmail.com\",\n          name: \"correo\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.correo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: correo,\n          cambiarEstado: cambiarCorreo,\n          tipo: \"text\",\n          label: \"Confirmar Correo Electr\\xF3nico *\",\n          placeholder: \"Ej: falso@gmail.com\",\n          name: \"correo\",\n          leyendaError: \"Campo es requerido\",\n          expresionRegular: expresiones.correo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(ComponenteInput, {\n          estado: telefono,\n          cambiarEstado: cambiarTelefono,\n          tipo: \"text\",\n          label: \"Tel\\xE9fono Remitente *\",\n          placeholder: \"Ej: 300 123 45 67\",\n          name: \"telefono\",\n          leyendaError: \"Campo es requerido, solo n\\xFAmeros\",\n          expresionRegular: expresiones.telefono,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 13\n          }\n        }));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 908,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NavProceso, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 13\n    }\n  }, \"Formulario de Solicitud de Homologaci\\xF3n de Equipos Terminales M\\xF3viles\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Formulario, {\n    className: \"row\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 922,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 923,\n      columnNumber: 17\n    }\n  }, \"Datos de identificaci\\xF3n\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 924,\n      columnNumber: 17\n    }\n  }, \"*Campos obligatorios\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"tipoPersona\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 17\n    }\n  }, \"Tipo de Persona *\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"tipoPersona\",\n    \"data-toggle\": \"tooltip\",\n    title: \"Seleccionar como persona Natural o Juridica\",\n    onClick: event => {\n      // here set target value to state which is 0, 1, 2, 3\n      setTipoPersona(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    selected: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 19\n    }\n  }, \"Ej. Natural\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"natural\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 19\n    }\n  }, \"Natural\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"juridica\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 944,\n      columnNumber: 19\n    }\n  }, \"Juridica\")), /*#__PURE__*/React.createElement(LeyendaError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 17\n    }\n  }, \"Campo tipo persona es requerido\")), getTipoPersonaDiv(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 951,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 952,\n      columnNumber: 17\n    }\n  }, \"Datos de contacto y ubicaci\\xF3n\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 953,\n      columnNumber: 17\n    }\n  }, \"*Campos obligatorios\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 955,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"tipoPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 17\n    }\n  }, \"Pa\\xEDs *\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"tipoPais\",\n    \"data-toggle\": \"tooltip\",\n    title: \"Seleccionar pa\\xEDs de residencia\",\n    onClick: event => {\n      // here set target value to state which is 0, 1, 2, 3\n      cambiarPais(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    selected: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 19\n    }\n  }, \"Ej. Colombia\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"colombia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 970,\n      columnNumber: 19\n    }\n  }, \"Colombia\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 971,\n      columnNumber: 19\n    }\n  }, \"Alemania\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 19\n    }\n  }, \"Arabia Saudita\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 19\n    }\n  }, \"Argentina\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 19\n    }\n  }, \"Bolivia\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 19\n    }\n  }, \"Canada\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 976,\n      columnNumber: 19\n    }\n  }, \"Corea del Norte\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 19\n    }\n  }, \"China\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 978,\n      columnNumber: 19\n    }\n  }, \"Estados Unidos\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otroPais\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 19\n    }\n  }, \"Honkg Kong\")), /*#__PURE__*/React.createElement(LeyendaError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 981,\n      columnNumber: 17\n    }\n  }, \"Campo tipo persona es requerido\")), getTipoPaisDiv(), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 985,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 987,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 17\n    }\n  }, \"Caracter\\xEDsticas del terminal m\\xF3vil\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 17\n    }\n  }, \"*Campos obligatorios\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 995,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 997,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: \"tipoDispositivo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 998,\n      columnNumber: 17\n    }\n  }, \"Tipo de Dispositivo*\"), /*#__PURE__*/React.createElement(Select, {\n    id: \"tipoDispositivo\",\n    \"data-toggle\": \"tooltip\",\n    title: \"Seleccionar tipo dispositivo\",\n    onClick: event => {\n      // here set target value to state which is 0, 1, 2, 3\n      setTipoDispositivo(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 999,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    selected: true,\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1008,\n      columnNumber: 19\n    }\n  }, \"Ej. M\\xF3vil\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"telefono\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 19\n    }\n  }, \"T\\xE9lefono Inteligente\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"computador\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1012,\n      columnNumber: 19\n    }\n  }, \"Computador de Bolsillo\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"dispositivo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1013,\n      columnNumber: 19\n    }\n  }, \"Dispositivo IoT\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"modulo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1014,\n      columnNumber: 19\n    }\n  }, \"M\\xF3dulo\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"reloj\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1015,\n      columnNumber: 19\n    }\n  }, \"Reloj Inteligente\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"router\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 19\n    }\n  }, \"Router\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"otro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1017,\n      columnNumber: 19\n    }\n  }, \"Otro \\xBFC\\xFAal?\")), /*#__PURE__*/React.createElement(LeyendaError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1019,\n      columnNumber: 17\n    }\n  }, \"Campo tipo persona es requerido\")), getTipoDispositivoDiv(), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1024,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1082,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1083,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1084,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1085,\n      columnNumber: 15\n    }\n  }, \"TAC *\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1086,\n      columnNumber: 15\n    }\n  }, \"En esta secci\\xF3n podr\\xE1 agregar m\\xFAltiples TAC para el modelo de terminal que est\\xE1 homologando. Tenga en cuenta que la CRC validar\\xE1 los TAC registrados en la solicitud ante la base de datos de la GSMA.\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1092,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1093,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"button-carga-principal btn-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1094,\n      columnNumber: 17\n    }\n  }, \"Agregar TAC\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1096,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1099,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1100,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"tabla\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"titulo-tabla\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1103,\n      columnNumber: 15\n    }\n  }, \"Listado de TAC\"), /*#__PURE__*/React.createElement(\"table\", {\n    class: \"rwd-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1104,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1106,\n      columnNumber: 19\n    }\n  }, \"TAC\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1107,\n      columnNumber: 19\n    }\n  }, \"Acciones\")), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"data-th\": \"datos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1110,\n      columnNumber: 19\n    }\n  }, \"Sin datos\"), /*#__PURE__*/React.createElement(\"td\", {\n    \"data-th\": \"accion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1111,\n      columnNumber: 19\n    }\n  }, \" ... \")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1115,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1117,\n      columnNumber: 15\n    }\n  }, \" Archivos Adjuntos\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1118,\n      columnNumber: 15\n    }\n  }, \"Por favor tenga en cuenta:\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1119,\n      columnNumber: 15\n    }\n  }, \"** El tama\\xF1o total de todos los archivos adjuntos no podr\\xE1 ser mayor a 30 MB.\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"txt-obliga\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1123,\n      columnNumber: 15\n    }\n  }, \"** Formatos admitidos para archivos adjuntos: Pdf, Doc, Docx, Xls, Xlsx, Gif, Png, Jpeg, Tif, Tiff, Zip y Rar\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1127,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1129,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DragArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1130,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1132,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1135,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 titulo-indicativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1138,\n      columnNumber: 15\n    }\n  }, \"Aviso de T\\xE9rminos y Autorizaci\\xF3n para el Tratamiento de Datos Personales*\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1144,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ContenedorTerminos, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"terminos\",\n    id: \"terminos\",\n    checked: terminos,\n    onChange: onChangeTerminos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1148,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"aceptacionFormulario\",\n    href: \"https://www.crcom.gov.co/uploads/images/files/Politica%20de%20Tratamiento%20Info%20Personal.pdf\",\n    Target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1155,\n      columnNumber: 17\n    }\n  }, \"Acepto que he leido los T\\xE9rminos y condiciones *\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1163,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"autorizaDatos\",\n    id: \"autorizaDatos\",\n    checked: autorizaDatos,\n    onChange: onChangeDatos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1165,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"aceptacionFormulario\",\n    href: \"https://crcom.gov.co/sites/default/files/transparencia/contenido_multimedia/Politica_de_tratamiento_info_personal.pdf\",\n    Target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1172,\n      columnNumber: 17\n    }\n  }, \"Autorizo el tratamiento de datos personales\"))), formularioValido === false && /*#__PURE__*/React.createElement(MensajeError, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1182,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1183,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faExclamationTriangle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1184,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1185,\n      columnNumber: 19\n    }\n  }, \"Error: \"), \" Por favor rellena el formulario correctamente.\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1189,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1190,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"subtitle-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1191,\n      columnNumber: 13\n    }\n  }, \"Verificaci\\xF3n de Seguridad *\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1192,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ReCAPTCHA, {\n    ref: captcha,\n    sitekey: \"6Lc9VDIeAAAAAHHQA1wEjx1FKlTy9uWIrZKGwwvN\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1193,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1199,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Boton, {\n    id: \"envio\",\n    type: \"submit\",\n    onClick: () => cambiarEstadoModal(!estadoModal),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1201,\n      columnNumber: 13\n    }\n  }, \"REGISTRAR SOLICITUD\"), formularioValido === true && /*#__PURE__*/React.createElement(MensajeExito, {\n    id: \"msjexito\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1209,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1210,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCheckCircle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1211,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1212,\n      columnNumber: 19\n    }\n  }, \"Exitosa: \"), \"Su solicitud se ha registrado satisfactoriamente\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1219,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3 p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1221,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"aside\", {\n    className: \"aside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1223,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1224,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(BotonTutoriales, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1225,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(BotonDeDudas, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1226,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1227,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1228,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CalificacionExperiencia, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1229,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1230,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1231,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(BotonInicio, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1232,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(CalificaExperienciaFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1238,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1239,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FooterGov, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1240,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    estado: estadoModal,\n    cambiarEstado: cambiarEstadoModal,\n    titulo: \"\",\n    mostrarHeader: true,\n    mostrarOverlay: true,\n    posicionModal: \"start\",\n    padding: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1243,\n      columnNumber: 7\n    }\n  }, !usuarioValido && /*#__PURE__*/React.createElement(Contenido, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1253,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1254,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1255,\n      columnNumber: 15\n    }\n  }, \"Confirmaci\\xF3n\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1256,\n      columnNumber: 15\n    }\n  }, \"\\xBFEstas seguro de registrar la informaci\\xF3n?\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1257,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ContenedorBotones, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1260,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Botoncito, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1261,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/EstadoSolicitud\",\n    className: \"irTramite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1262,\n      columnNumber: 19\n    }\n  }, \"ACEPTAR\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1266,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Botoncito2, {\n    onClick: () => cambiarEstadoModal(!estadoModal),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1267,\n      columnNumber: 17\n    }\n  }, \"CANCELAR\")))), usuarioValido && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1275,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1276,\n      columnNumber: 13\n    }\n  }, \"Bienvenido\"))));\n};\n\nexport default FormularioSolicitud;\n/*\nconst Boton = styled.button`\n  border-radius: 20px;\n  border_radius: 100px;\n  border: none;\n  background: #1766dc;\n  cursor: pointer;\n  display: block;\n  font: normal bold 15px/5px \"Works Sans\", sans-serif;\n  padding: 10px 30px;\n  transition: 0.3s ease all;\n\n  a {\n    color: #ffff;\n  }\n\n  &:hover {\n    background: #004884;\n  }\n`;\n*/\n\n/*\n<ContenedorBotonCentrado className=\"recaptcha\">\n                <ReCAPTCHA\n                  ref={captcha}\n                  sitekey=\"6Lc9VDIeAAAAAHHQA1wEjx1FKlTy9uWIrZKGwwvN\"\n                  onChange={onChange}\n                />\n              </ContenedorBotonCentrado>\n\n              {captchaValido === false && (\n                <div className=\"error-captcha\">Por favor acepta el captcha</div>\n              )}\n*/\n\nconst Botoncito = styled.button`\n  background: #3366CC;\n  border-radius: 15px;\n  border: 2px solid #F6F8F9;\n  color: #FFFF!important;\n  cursor: pointer;\n  display: block;\n  font: normal 500 15px \"Work Sans\", sans-serif;\n  transition: 0.3s ease all;\n  padding: 15px 10px 15px 10px;\n  width: 40%;\n\n  &:hover {\n    background-color: #F6F8F9!important;\n  }\n`;\nconst Botoncito2 = styled.button`\n  background: #FFFF;\n  border-radius: 15px;\n  border: 2px solid #3366cc;\n  color: #3366cc;\n  cursor: pointer;\n  display: block;\n  font: normal 500 15px \"Work Sans\", sans-serif;\n  transition: 0.3s ease all;\n  padding: 15px 10px 15px 10px;\n  width: 40%;\n\n  &:hover {\n    background: #0066ff;\n    color: #ffff;\n  }\n`;\nconst Contenido = styled.div`\n  display: flex;\n  padding: 20px;\n  flex-direction: column;\n  max-height: calc(100vh - 210px);\n  overflow-y: auto;\n\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n  }\n\n  h1 {\n    color: #13386d;\n    font: normal 600 18px/10px \"Montserrat\", sans-serif;\n    line-height: 1.5;\n    margin-bottom: 10px;\n  }\n\n  h6 {\n    color: #4b4b4b;\n    font: normal normal 1rem/10px \"Works Sans\", sans-serif;\n    margin: 0;\n    text-align: left;\n    line-height: 1.5;\n  }\n\n  a {\n    font: normal normal 1rem/10px \"Works Sans\", sans-serif;\n  }\n`;\nconst ContenedorBotones = styled.div`\n  padding: 0px;\n  display: flex;\n  float: left;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;","map":{"version":3,"sources":["/home/yamid/Documentos/ReactJS/puntogov/src/Pages/FormularioSolicitud/FormularioSolicitud.js"],"names":["React","useState","useRef","Link","Header","Navigation","NavProceso","BotonTutoriales","BotonDeDudas","CalificacionExperiencia","CalificaExperienciaFooter","BotonInicio","Footer","FooterGov","Modal","FontAwesomeIcon","faExclamationTriangle","faCheckCircle","ReCAPTCHA","styled","Formulario","Label","Select","Boton","ContenedorTerminos","ContenedorBotonCentrado","LeyendaError","MensajeExito","MensajeError","ComponenteInput","ComponenteInputDisabled","DragArea","TestingDocument","MenuDesplegable","FormularioSolicitud","persona","cambiarPersona","campo","valido","tipoId","cambiarTipoId","identificacion","cambiarIdentificacion","identificacion2","cambiarIdentificacion2","nombre","cambiarNombre","nombre2","cambiarNombre2","apellido","cambiarApellido","apellido2","cambiarApellido2","nit","cambiarNit","nit2","cambiarNit2","nombreEmpresa","cambiarNombreEmpresa","nombreRLoApoderado","cambiarNombreRLoApoderado","digitoVerificacion","cambiarDigitoVerificacion","digitoVerificacion2","cambiarDigitoVerificacion2","pais","cambiarPais","departamento","cambiarDepartamento","municipio","cambiarMunicipio","direccion","cambiarDireccion","correo","cambiarCorreo","correo2","cambiarCorreo2","telefono","cambiarTelefono","nombreOtroDispositivo","cambiarNombreOtroDispositivo","marca","cambiarMarca","nombreComercial","cambiarNombreComercial","modelo","cambiarModelo","fabricante","cambiarFabricante","casoUsoDispositivo","cambiarCasoUsoDispositivo","marcaEquipoAnfitrion","cambiarMarcaEquipoAnfitrion","modeloEquipoAnfitrion","cambiarModeloEquipoAnfitrion","formularioValido","cambiarFormularioValido","terminos","cambiarTerminos","autorizaDatos","cambiarAutorizaDatos","captcha","tipoPersona","setTipoPersona","tipoIdentificacion","setTipoIdentificacion","tipoDispositivo","setTipoDispositivo","estadoModal","cambiarEstadoModal","captchaValido","cambiarCaptchaValido","usuarioValido","cambiarUsuarioValido","expresiones","usuario","password","digitoV","validarIdentificacion2","length","prevState","validarNit2","validarDigitoVerificacion2","validarCorreo2","onChangeTerminos","e","target","checked","onChangeDatos","onChange","current","getValue","console","log","onSubmit","preventDefault","getTipoPersonaDiv","getTipoDispositivoDiv","getTipoPaisDiv","event","value","Botoncito","button","Botoncito2","Contenido","div","ContenedorBotones"],"mappings":"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AAA,IANF,eAOE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,MAAMH,kBAAkB,CAAC,CAACD,WAAF,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CANF,CADF,CAVJ,EA+BGI,aAAa,iBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAhCJ,CAlVF,CADF;AA0XD,CA9sCD;;AAgtCA,eAAe9E,mBAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM2G,SAAS,GAAG1H,MAAM,CAAC2H,MAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAiBA,MAAMC,UAAU,GAAG5H,MAAM,CAAC2H,MAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAkBA,MAAME,SAAS,GAAG7H,MAAM,CAAC8H,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7BA;AA+BA,MAAMC,iBAAiB,GAAG/H,MAAM,CAAC8H,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Estilos generales del formulario\nimport \"./FormularioSolicitud.scss\";\n\n// Componentes obligatorios a mostrar en el sitio\nimport Header from \"../../components/Header/Header\";\nimport Navigation from \"../../components/Navigation/Navigation\";\nimport NavProceso from \"../../components/NavProceso/NavProceso\";\nimport BotonTutoriales from \"../../components/Botones/BotonTutoriales/BotonTutoriales\";\nimport BotonDeDudas from \"../../components/Botones/BotonDeDudas/BotonDeDudas\";\nimport CalificacionExperiencia from \"../../components/Cards/CalificacionExperiencia/CalificacionExperiencia\";\nimport CalificaExperienciaFooter from \"../../components/Cards/CalificacionExperiencia/CalificaExperienciaFooter\";\nimport BotonInicio from \"../../components/Botones/BotonInicio/BotonInicio\";\nimport Footer from \"../../components/Footer/Footer\";\nimport FooterGov from \"../../components/FooterGov/FooterGov\";\n// Modal a mostra antes de enviar información formulario\nimport Modal from \"../../components/Modal/Modal\";\n\n// Importación iconos para mostrar en mensajes de error o exito\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faExclamationTriangle,\n  faCheckCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n// Libreria para el uso de recaptcha\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\n// Libreria syled que nos permite crear componentes con diseños, despues la linea exportar se encuentran\nimport styled from \"styled-components\";\n// Importación elementos html de componente con estilos predefinidos styled\nimport {\n  Formulario,\n  Label,\n  Select,\n  Boton,\n  ContenedorTerminos,\n  ContenedorBotonCentrado,\n  LeyendaError,\n  MensajeExito,\n  MensajeError,\n} from \"./elementos/Formularios\";\n// Import componente styled con diseño predeterminado\nimport ComponenteInput from \"./componentes/ComponenteInput\";\nimport ComponenteInputDisabled from \"./componentes/ComponenteInputDisabled\";\nimport DragArea from \"./componentes/DragArea\";\nimport TestingDocument from \"../../components/TestingDocument/TestingDocument\";\nimport MenuDesplegable from \"../../components/MenuDesplegable/MenuDesplegable\";\n\nconst FormularioSolicitud = () => {\n  // Validar Datos de identificación\n  const [persona, cambiarPersona] = useState({ campo: \"\", valido: null });\n  const [tipoId, cambiarTipoId] = useState({ campo: \"\", valido: null });\n  const [identificacion, cambiarIdentificacion] = useState({\n    campo: \"\",\n    valido: null,\n  });\n  const [identificacion2, cambiarIdentificacion2] = useState({\n    campo: \"\",\n    valido: null,\n  });\n  const [nombre, cambiarNombre] = useState({ campo: \"\", valido: null });\n  const [nombre2, cambiarNombre2] = useState({ campo: \"\", valido: null });\n  const [apellido, cambiarApellido] = useState({ campo: \"\", valido: null });\n  const [apellido2, cambiarApellido2] = useState({ campo: \"\", valido: null });\n\n  // Validar Datos de contacto y ubicación\n  const [nit, cambiarNit] = useState({ campo: \"\", valido: null });\n  const [nit2, cambiarNit2] = useState({ campo: \"\", valido: null });\n  const [nombreEmpresa, cambiarNombreEmpresa] = useState({\n    campo: \"\",\n    valido: null,\n  });\n  const [nombreRLoApoderado, cambiarNombreRLoApoderado] = useState({\n    campo: \"\",\n    valido: null,\n  });\n  const [digitoVerificacion, cambiarDigitoVerificacion] = useState({\n    campo: \"\",\n    valido: null,\n  });\n  const [digitoVerificacion2, cambiarDigitoVerificacion2] = useState({\n    campo: \"\",\n    valido: null,\n  });\n\n  // Validar Datos de contacto y ubicación\n  const [pais, cambiarPais] = useState({ campo: \"\", valido: null });\n  const [departamento, cambiarDepartamento] = useState({\n    campo: \"\",\n    valido: null,\n  });\n  const [municipio, cambiarMunicipio] = useState({ campo: \"\", valido: null });\n  const [direccion, cambiarDireccion] = useState({ campo: \"\", valido: null });\n  const [correo, cambiarCorreo] = useState({ campo: \"\", valido: null });\n  const [correo2, cambiarCorreo2] = useState({ campo: \"\", valido: null });\n  const [telefono, cambiarTelefono] = useState({ campo: \"\", valido: null });\n\n  // Validar Características del terminal móvil\n  const [nombreOtroDispositivo, cambiarNombreOtroDispositivo] = useState({\n    campo: \"\",\n    valido: null,\n  });\n  const [marca, cambiarMarca] = useState({ campo: \"\", valido: null });\n  const [nombreComercial, cambiarNombreComercial] = useState({\n    campo: \"\",\n    valido: null,\n  });\n  const [modelo, cambiarModelo] = useState({ campo: \"\", valido: null });\n  const [fabricante, cambiarFabricante] = useState({ campo: \"\", valido: null });\n  const [casoUsoDispositivo, cambiarCasoUsoDispositivo] = useState({\n    campo: \"\",\n    valido: null,\n  });\n  const [marcaEquipoAnfitrion, cambiarMarcaEquipoAnfitrion] = useState({\n    campo: \"\",\n    valido: null,\n  });\n  const [modeloEquipoAnfitrion, cambiarModeloEquipoAnfitrion] = useState({\n    campo: \"\",\n    valido: null,\n  });\n  // Validar formulario y términos condiciones\n  const [formularioValido, cambiarFormularioValido] = useState(null);\n  const [terminos, cambiarTerminos] = useState(false);\n  const [autorizaDatos, cambiarAutorizaDatos] = useState(false);\n\n  // Referencia al captcha\n  const captcha = useRef(null);\n\n  // Dependiendo el estado seleccionado en lista desplegable, mostrar x campos en formulario\n  const [tipoPersona, setTipoPersona] = useState(null);\n  const [tipoIdentificacion, setTipoIdentificacion] = useState(null);\n  const [tipoDispositivo, setTipoDispositivo] = useState(null);\n  // Mostrar y ocultar modal\n  const [estadoModal, cambiarEstadoModal] = useState(false);\n\n  //Dependiendo estado captcha a seleccionado dejar enviar formulario\n  const [captchaValido, cambiarCaptchaValido] = useState(null);\n  const [usuarioValido, cambiarUsuarioValido] = useState(false);\n\n  // Expresiones regulares para validar que los campos cumplan con las condiciones\n  const expresiones = {\n    usuario: /^[a-zA-Z0-9_-]{4,16}$/, // Letras, numeros, guion y guion_bajo\n    nombre: /^[a-zA-ZÀ-ÿ\\s]{1,40}$/, // Letras y espacios, pueden llevar acentos.\n    identificacion: /^\\d{6,14}$/, // 6 a 14 numeros.\n    password: /^.{4,12}$/, // 4 a 12 digitos.\n    correo: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/,\n    telefono: /^\\d{7,14}$/, // 7 a 14 numeros.\n    digitoV: /^\\d{1,1}$/, // 1 a 1 numero.\n  };\n\n  // Campo confirmar Número de Identificación se igual campo a comprobar\n  const validarIdentificacion2 = () => {\n    if (identificacion.campo.length > 0) {\n      if (identificacion.campo !== identificacion2.campo) {\n        cambiarIdentificacion2((prevState) => {\n          return { ...prevState, valido: \"false\" };\n        });\n      } else {\n        cambiarIdentificacion2((prevState) => {\n          return { ...prevState, valido: \"true\" };\n        });\n      }\n    }\n  };\n\n  // Campo confirmar Número de NIT se igual campo a comprobar\n  const validarNit2 = () => {\n    if (nit.campo.length > 0) {\n      if (nit.campo !== nit2.campo) {\n        cambiarNit2((prevState) => {\n          return { ...prevState, valido: \"false\" };\n        });\n      } else {\n        cambiarNit2((prevState) => {\n          return { ...prevState, valido: \"true\" };\n        });\n      }\n    }\n  };\n\n  // Campo confirmar Número Digito veririfcacion (DV) igual campo a comprobar\n  const validarDigitoVerificacion2 = () => {\n    if (digitoVerificacion.campo.length > 0) {\n      if (digitoVerificacion.campo !== digitoVerificacion2.campo) {\n        cambiarDigitoVerificacion2((prevState) => {\n          return { ...prevState, valido: \"false\" };\n        });\n      } else {\n        cambiarDigitoVerificacion2((prevState) => {\n          return { ...prevState, valido: \"true\" };\n        });\n      }\n    }\n  };\n\n  // Campo confirmar correo electronico igual campo a comprobar\n  const validarCorreo2 = () => {\n    if (correo.campo.length > 0) {\n      if (correo.campo !== correo2.campo) {\n        cambiarCorreo2((prevState) => {\n          return { ...prevState, valido: \"false\" };\n        });\n      } else {\n        cambiarCorreo2((prevState) => {\n          return { ...prevState, valido: \"true\" };\n        });\n      }\n    }\n  };\n\n  const onChangeTerminos = (e) => {\n    cambiarTerminos(e.target.checked);\n  };\n\n  const onChangeDatos = (e) => {\n    cambiarAutorizaDatos(e.target.checked);\n  };\n\n  const onChange = () => {\n    if (captcha.current.getValue()) {\n      console.log(\"El usuario no es un robot\");\n      cambiarCaptchaValido(true);\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    //Colocar aquí la validación de los inputs del formulario. Si son correctos ya podemos enviar el formulario, actualizar la interfaz etc\n    if (captcha.current.getValue()) {\n      console.log(\"El usuario no es un robot\");\n      cambiarCaptchaValido(true);\n    } else {\n      console.log(\"Por favor acepta el captcha\");\n      cambiarCaptchaValido(false);\n    }\n\n    if (\n      identificacion.valido === \"true\" &&\n      identificacion2.valido === \"true\" &&\n      nombre.valido === \"true\" &&\n      apellido.valido === \"true\" &&\n      terminos\n    ) {\n      cambiarFormularioValido(true);\n      cambiarPersona({ campo: \"\", valido: null });\n      cambiarTipoId({ campo: \"\", valido: null });\n      cambiarIdentificacion({ campo: \"\", valido: null });\n      cambiarIdentificacion2({ campo: \"\", valido: null });\n      cambiarNombre({ campo: \"\", valido: null });\n      cambiarNombre2({ campo: \"\", valido: null });\n      cambiarApellido({ campo: \"\", valido: null });\n      cambiarApellido2({ campo: \"\", valido: null });\n      cambiarTerminos(false);\n\n      // ... Puedo ir código consumido externo como de una API\n    } else {\n      cambiarFormularioValido(false);\n    }\n  };\n\n  // Selección tipo persona\n  function getTipoPersonaDiv() {\n    switch (tipoPersona) {\n      case \"natural\":\n        return (\n          <>\n            <div>\n              <Label htmlFor=\"tipoId\">Tipo de Identificación *</Label>\n              <Select\n                id=\"tipoIdentificacion\"\n                data-toggle=\"tooltip\"\n                title=\"Seleccionar tipo documento de Identificación\"\n              >\n                <option value=\"1\" selected>\n                  Cédula de Ciudadania\n                </option>\n                <option value=\"2\">Cédula extranjeria</option>\n                <option value=\"3\">ID pasaporte</option>\n              </Select>\n              <LeyendaError>Campo tipo iden es requerido</LeyendaError>\n            </div>\n\n            <ComponenteInput\n              estado={identificacion}\n              cambiarEstado={cambiarIdentificacion}\n              tipo=\"text\"\n              label=\"Número de Identificación *\"\n              placeholder=\"Ej: 1234567890\"\n              name=\"identificacion\"\n              leyendaError=\"Campo número de identificación es requerido, solo se permiten números y minimo 6 digitos\"\n              expresionRegular={expresiones.identificacion}\n            />\n\n            <ComponenteInput\n              estado={identificacion2}\n              cambiarEstado={cambiarIdentificacion2}\n              tipo=\"text\"\n              label=\"Confirmar Número de Identificación *\"\n              placeholder=\"Ej: 1234567890\"\n              name=\"identificacion\"\n              leyendaError=\"Campo confirmar número de identificación es requerido, y debe ser igual al campo número de identificación\"\n              funcion={validarIdentificacion2}\n            />\n\n            <ComponenteInput\n              estado={nombre}\n              cambiarEstado={cambiarNombre}\n              tipo=\"text\"\n              label=\"Primer Nombre *\"\n              placeholder=\"Ej: Pepito\"\n              name=\"nombre\"\n              leyendaError=\"Campo primer nombre es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={nombre2}\n              cambiarEstado={cambiarNombre2}\n              tipo=\"text\"\n              label=\"Segundo Nombre\"\n              placeholder=\"Ej: Andres\"\n              name=\"nombre2\"\n            />\n\n            <ComponenteInput\n              estado={apellido}\n              cambiarEstado={cambiarApellido}\n              tipo=\"text\"\n              label=\"Primer Apellido *\"\n              placeholder=\"Ej: Perez\"\n              name=\"apellido\"\n              leyendaError=\"Campo primer apellido es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={apellido2}\n              cambiarEstado={cambiarApellido2}\n              tipo=\"text\"\n              label=\"Segundo Apellido\"\n              placeholder=\"Ej: Rodriguez\"\n              name=\"apellido2\"\n              leyendaError=\"Campo requerido\"\n              expresionRegular={expresiones.apellido2}\n            />\n          </>\n        );\n      case \"juridica\":\n        return (\n          <>\n            <div>\n              <Label htmlFor=\"tipoId\">Tipo de Identificación *</Label>\n              <Select\n                id=\"tipoIdentificacion\"\n                data-toggle=\"tooltip\"\n                title=\"Seleccionar tipo documento de Identificación\"\n              >\n                <option value=\"1\" selected>\n                  Número de Identificación Tributaria (NIT)\n                </option>\n              </Select>\n              <LeyendaError>Campo tipo iden es requerido</LeyendaError>\n            </div>\n\n            <ComponenteInput\n              estado={nit}\n              cambiarEstado={cambiarNit}\n              tipo=\"text\"\n              label=\"Número de Identificación *\"\n              placeholder=\"Ej: 8603842563\"\n              name=\"nit\"\n              leyendaError=\"Campo requerido, solo se aceptan números\"\n              expresionRegular={expresiones.identificacion}\n            />\n\n            <ComponenteInput\n              estado={digitoVerificacion}\n              cambiarEstado={cambiarDigitoVerificacion}\n              tipo=\"text\"\n              label=\"Digito Verificación *\"\n              placeholder=\"Ej: 8\"\n              name=\"digitoVerificacion\"\n              leyendaError=\"Campo requerido, solo se un número\"\n              expresionRegular={expresiones.digitoV}\n            />\n\n            <ComponenteInput\n              estado={nit2}\n              cambiarEstado={cambiarNit2}\n              tipo=\"text\"\n              label=\"Confirmar Número de Identificación *\"\n              placeholder=\"Ej: 8603842563\"\n              name=\"nit2\"\n              leyendaError=\"Campo requerido, coincidir con número nit ingresado\"\n              funcion={validarNit2}\n            />\n\n            <ComponenteInput\n              estado={digitoVerificacion2}\n              cambiarEstado={cambiarDigitoVerificacion2}\n              tipo=\"text\"\n              label=\"Confirmar Digito Verificación*\"\n              placeholder=\"Ej: 8\"\n              name=\"digitoVerificacion2\"\n              leyendaError=\"Campo es requerido, coincidir con número DV ingresado\"\n              expresionRegular={expresiones.digitoV}\n              funcion={validarDigitoVerificacion2}\n            />\n\n            <ComponenteInput\n              estado={nombreEmpresa}\n              cambiarEstado={cambiarNombreEmpresa}\n              tipo=\"text\"\n              label=\"Nombre de la empresa *\"\n              placeholder=\"Ej: Microchips y Telecomunicaciones SAS\"\n              name=\"nombreEmpresa\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={nombreRLoApoderado}\n              cambiarEstado={cambiarNombreRLoApoderado}\n              tipo=\"text\"\n              label=\"Nombre Representante Legal o APoderado*\"\n              placeholder=\"Ej: Pablo Jesus Lozada Cortez\"\n              name=\"apellido\"\n              leyendaError=\"Campo primer apellido es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <ComponenteInputDisabled\n              estado={tipoId}\n              cambiarEstado={cambiarTipoId}\n              tipo=\"text\"\n              label=\"Tipo de Identificación *\"\n              placeholder=\"Ej: Cédula de Ciudadania\"\n              name=\"tipoId\"\n            />\n            <ComponenteInputDisabled\n              estado=\"identificacionSeleccion\"\n              tipo=\"text\"\n              label=\"Número de Identificación *\"\n              placeholder=\"Ej: 1234567890\"\n              name=\"identificacionSeleccion\"\n            />\n\n            <ComponenteInputDisabled\n              estado={nit2}\n              cambiarEstado={cambiarNit2}\n              tipo=\"text\"\n              label=\"Confirmar Número de Identificación *\"\n              placeholder=\"Ej: 1234567890\"\n              name=\"identificacion\"\n            />\n          </>\n        );\n    }\n  }\n\n  // Selección tipo dispositivo\n  function getTipoDispositivoDiv() {\n    switch (tipoDispositivo) {\n      case \"dispositivo\":\n        return (\n          <>\n            <span />\n            <ComponenteInput\n              estado={marca}\n              cambiarEstado={cambiarMarca}\n              tipo=\"text\"\n              label=\"Marca *\"\n              placeholder=\"Ej: Apple\"\n              name=\"marca\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.nombre}\n            />\n            <ComponenteInput\n              estado={nombreComercial}\n              cambiarEstado={cambiarNombreComercial}\n              tipo=\"text\"\n              label=\"Nombre Comercial *\"\n              placeholder=\"Ej: Serie 3\"\n              name=\"nombreComercial\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={modelo}\n              cambiarEstado={cambiarModelo}\n              tipo=\"text\"\n              label=\"Modelo *\"\n              placeholder=\"Ej: Once\"\n              name=\"modelo\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={fabricante}\n              cambiarEstado={cambiarFabricante}\n              tipo=\"text\"\n              label=\"Fabricante\"\n              placeholder=\"Ej: Huawei\"\n              name=\"fabricante\"\n            />\n\n            <ComponenteInput\n              estado={casoUsoDispositivo}\n              cambiarEstado={cambiarCasoUsoDispositivo}\n              tipo=\"text\"\n              label=\"Caso de uso del Dispositivo*\"\n              placeholder=\"Ej: Las caracteristicas de dispositivo...\"\n              name=\"casoUsoDispositivo\"\n              leyendaError=\"Campo requerido\"\n              expresionRegular={expresiones.apellido}\n            />\n\n            <div class=\"contenedor-comentarios\">\n              <p class=\"mb-0 pb-1 title-comentario\">\n                Escribre tus comentarios:\n              </p>\n              <textarea\n                className=\"textoarea\"\n                placeholder=\"Queremos conocer tu experiencia ó sugerencias\"\n              ></textarea>\n            </div>\n          </>\n        );\n      case \"modulo\":\n        return (\n          <>\n            <span />\n            <ComponenteInput\n              estado={marca}\n              cambiarEstado={cambiarMarca}\n              tipo=\"text\"\n              label=\"Marca del Módulo Interno*\"\n              placeholder=\"Ej: Apple\"\n              name=\"marcaModulo\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.nombre}\n            />\n            <ComponenteInput\n              estado={nombreComercial}\n              cambiarEstado={cambiarNombreComercial}\n              tipo=\"text\"\n              label=\"Nombre Comercial*\"\n              placeholder=\"Ej: Serie 3\"\n              name=\"nombreComercial\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={modelo}\n              cambiarEstado={cambiarModelo}\n              tipo=\"text\"\n              label=\"Modelo del Módulo Interno*\"\n              placeholder=\"Ej: Once\"\n              name=\"modeloModuloInterno\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={fabricante}\n              cambiarEstado={cambiarFabricante}\n              tipo=\"text\"\n              label=\"Fabricante\"\n              placeholder=\"Ej: Huawei\"\n              name=\"fabricante\"\n            />\n\n            <ComponenteInput\n              estado={marcaEquipoAnfitrion}\n              cambiarEstado={cambiarMarcaEquipoAnfitrion}\n              tipo=\"text\"\n              label=\"Marca del Equipo Anfitrión*\"\n              placeholder=\"Ej: Las caracteristicas de dispositivo...\"\n              name=\"marcaEquipoFabricante\"\n            />\n\n            <ComponenteInput\n              estado={modeloEquipoAnfitrion}\n              cambiarEstado={cambiarModeloEquipoAnfitrion}\n              tipo=\"text\"\n              label=\"Modelo del Equipo Anfitrión*\"\n              placeholder=\"Ej: Las caracteristicas de dispositivo...\"\n              name=\"modeloEquipoAnfitrion\"\n            />\n          </>\n        );\n      case \"otro\":\n        return (\n          <>\n            <ComponenteInput\n              estado={nombreOtroDispositivo}\n              cambiarEstado={cambiarNombreOtroDispositivo}\n              tipo=\"text\"\n              label=\"Nombre otro Dispositivo*\"\n              placeholder=\"Ej: Apple\"\n              name=\"nombreOtroDispositivo\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.nombre}\n            />\n            <ComponenteInput\n              estado={marca}\n              cambiarEstado={cambiarMarca}\n              tipo=\"text\"\n              label=\"Marca *\"\n              placeholder=\"Ej: Apple\"\n              name=\"marca\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n            <ComponenteInput\n              estado={nombreComercial}\n              cambiarEstado={cambiarNombreComercial}\n              tipo=\"text\"\n              label=\"Nombre Comercial *\"\n              placeholder=\"Ej: Serie 3\"\n              name=\"nombreComercial\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={modelo}\n              cambiarEstado={cambiarModelo}\n              tipo=\"text\"\n              label=\"Modelo *\"\n              placeholder=\"Ej: Once\"\n              name=\"modelo\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={fabricante}\n              cambiarEstado={cambiarFabricante}\n              tipo=\"text\"\n              label=\"Fabricante\"\n              placeholder=\"Ej: Huawei\"\n              name=\"fabricante\"\n              leyendaError=\"Campo requerido\"\n              expresionRegular={expresiones.apellido2}\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <span />\n            <ComponenteInput\n              estado={marca}\n              cambiarEstado={cambiarMarca}\n              tipo=\"text\"\n              label=\"Marca *\"\n              placeholder=\"Ej: Apple\"\n              name=\"marca\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n            <ComponenteInput\n              estado={nombreComercial}\n              cambiarEstado={cambiarNombreComercial}\n              tipo=\"text\"\n              label=\"Nombre Comercial *\"\n              placeholder=\"Ej: Serie 3\"\n              name=\"nombreComercial\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={modelo}\n              cambiarEstado={cambiarModelo}\n              tipo=\"text\"\n              label=\"Modelo *\"\n              placeholder=\"Ej: Once\"\n              name=\"modelo\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={fabricante}\n              cambiarEstado={cambiarFabricante}\n              tipo=\"text\"\n              label=\"Fabricante\"\n              placeholder=\"Ej: Huawei\"\n              name=\"fabricante\"\n              leyendaError=\"Campo requerido\"\n              expresionRegular={expresiones.apellido2}\n            />\n          </>\n        );\n    }\n  }\n\n  // Selección tipo dispositivo\n  function getTipoPaisDiv() {\n    switch (pais) {\n      case \"colombia\":\n        return (\n          <>\n            <MenuDesplegable />\n\n            <ComponenteInput\n              estado={direccion}\n              cambiarEstado={cambiarDireccion}\n              tipo=\"text\"\n              label=\"Dirección *\"\n              placeholder=\"Ej: CL 1 23 45\"\n              name=\"direccion\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={correo}\n              cambiarEstado={cambiarCorreo}\n              tipo=\"text\"\n              label=\"Correo Electrónico *\"\n              placeholder=\"Ej: falso@gmail.com\"\n              name=\"correo\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.correo}\n            />\n\n            <ComponenteInput\n              estado={correo}\n              cambiarEstado={cambiarCorreo}\n              tipo=\"text\"\n              label=\"Confirmar Correo Electrónico *\"\n              placeholder=\"Ej: falso@gmail.com\"\n              name=\"correo\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.correo}\n            />\n\n            <ComponenteInput\n              estado={telefono}\n              cambiarEstado={cambiarTelefono}\n              tipo=\"text\"\n              label=\"Teléfono Remitente *\"\n              placeholder=\"Ej: 300 123 45 67\"\n              name=\"telefono\"\n              leyendaError=\"Campo es requerido, solo números\"\n              expresionRegular={expresiones.telefono}\n            />\n          </>\n        );\n      case \"otroPais\":\n        return (\n          <>\n            <ComponenteInputDisabled\n              estado={departamento}\n              cambiarEstado={cambiarDepartamento}\n              tipo=\"text\"\n              label=\"Departamento *\"\n              placeholder=\"Ej: Cundinamarca\"\n              name=\"departamento\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n            <ComponenteInputDisabled\n              estado={municipio}\n              cambiarEstado={cambiarMunicipio}\n              tipo=\"text\"\n              label=\"Municipio *\"\n              placeholder=\"Ej: Madrid\"\n              name=\"municipio\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n            <ComponenteInput\n              estado={direccion}\n              cambiarEstado={cambiarDireccion}\n              tipo=\"text\"\n              label=\"Dirección *\"\n              placeholder=\"Ej: CL 1 23 45\"\n              name=\"direccion\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={correo}\n              cambiarEstado={cambiarCorreo}\n              tipo=\"text\"\n              label=\"Correo Electrónico *\"\n              placeholder=\"Ej: falso@gmail.com\"\n              name=\"correo\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.correo}\n            />\n\n            <ComponenteInput\n              estado={correo}\n              cambiarEstado={cambiarCorreo}\n              tipo=\"text\"\n              label=\"Confirmar Correo Electrónico *\"\n              placeholder=\"Ej: falso@gmail.com\"\n              name=\"correo\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.correo}\n            />\n\n            <ComponenteInput\n              estado={telefono}\n              cambiarEstado={cambiarTelefono}\n              tipo=\"text\"\n              label=\"Teléfono Remitente *\"\n              placeholder=\"Ej: 300 123 45 67\"\n              name=\"telefono\"\n              leyendaError=\"Campo es requerido, solo números\"\n              expresionRegular={expresiones.telefono}\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <ComponenteInputDisabled\n              estado={departamento}\n              cambiarEstado={cambiarDepartamento}\n              tipo=\"text\"\n              label=\"Departamento *\"\n              placeholder=\"Ej: Cundinamarca\"\n              name=\"departamento\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n            <ComponenteInputDisabled\n              estado={municipio}\n              cambiarEstado={cambiarMunicipio}\n              tipo=\"text\"\n              label=\"Municipio *\"\n              placeholder=\"Ej: Madrid\"\n              name=\"municipio\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n            <ComponenteInput\n              estado={direccion}\n              cambiarEstado={cambiarDireccion}\n              tipo=\"text\"\n              label=\"Dirección *\"\n              placeholder=\"Ej: CL 1 23 45\"\n              name=\"direccion\"\n              leyendaError=\"Campo es requerido, solo se aceptan letras\"\n              expresionRegular={expresiones.nombre}\n            />\n\n            <ComponenteInput\n              estado={correo}\n              cambiarEstado={cambiarCorreo}\n              tipo=\"text\"\n              label=\"Correo Electrónico *\"\n              placeholder=\"Ej: falso@gmail.com\"\n              name=\"correo\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.correo}\n            />\n\n            <ComponenteInput\n              estado={correo}\n              cambiarEstado={cambiarCorreo}\n              tipo=\"text\"\n              label=\"Confirmar Correo Electrónico *\"\n              placeholder=\"Ej: falso@gmail.com\"\n              name=\"correo\"\n              leyendaError=\"Campo es requerido\"\n              expresionRegular={expresiones.correo}\n            />\n\n            <ComponenteInput\n              estado={telefono}\n              cambiarEstado={cambiarTelefono}\n              tipo=\"text\"\n              label=\"Teléfono Remitente *\"\n              placeholder=\"Ej: 300 123 45 67\"\n              name=\"telefono\"\n              leyendaError=\"Campo es requerido, solo números\"\n              expresionRegular={expresiones.telefono}\n            />\n          </>\n        );\n    }\n  }\n\n  return (\n    <>\n      <div className=\"container\">\n        <Header />\n        <div className=\"row\">\n          <div className=\"col-md-8\">\n            <Navigation />\n            <NavProceso />\n\n            <br />\n            <h3 className=\"title-form\">\n              Formulario de Solicitud de Homologación de Equipos Terminales\n              Móviles\n            </h3>\n            <br />\n            <br />\n\n            <Formulario className=\"row\" onSubmit={onSubmit}>\n              <div className=\"titulo-indicativo\">\n                <h4 className=\"subtitle-form\">Datos de identificación</h4>\n                <p className=\"txt-obliga\">*Campos obligatorios</p>\n              </div>\n\n              <span />\n\n              <div>\n                <Label htmlFor=\"tipoPersona\">Tipo de Persona *</Label>\n                <Select\n                  id=\"tipoPersona\"\n                  data-toggle=\"tooltip\"\n                  title=\"Seleccionar como persona Natural o Juridica\"\n                  onClick={(event) => {\n                    // here set target value to state which is 0, 1, 2, 3\n                    setTipoPersona(event.target.value);\n                  }}\n                >\n                  <option value=\"\" selected hidden>\n                    Ej. Natural\n                  </option>\n                  <option value=\"natural\">Natural</option>\n                  <option value=\"juridica\">Juridica</option>\n                </Select>\n                <LeyendaError>Campo tipo persona es requerido</LeyendaError>\n              </div>\n\n              {getTipoPersonaDiv()}\n\n              <div className=\"col-md-12 titulo-indicativo\">\n                <h4 className=\"subtitle-form\">Datos de contacto y ubicación</h4>\n                <p className=\"txt-obliga\">*Campos obligatorios</p>\n              </div>\n              <span />\n              <div>\n                <Label htmlFor=\"tipoPais\">País *</Label>\n                <Select\n                  id=\"tipoPais\"\n                  data-toggle=\"tooltip\"\n                  title=\"Seleccionar país de residencia\"\n                  onClick={(event) => {\n                    // here set target value to state which is 0, 1, 2, 3\n                    cambiarPais(event.target.value);\n                  }}\n                >\n                  <option value=\"\" selected hidden>\n                    Ej. Colombia\n                  </option>\n                  <option value=\"colombia\">Colombia</option>\n                  <option value=\"otroPais\">Alemania</option>\n                  <option value=\"otroPais\">Arabia Saudita</option>\n                  <option value=\"otroPais\">Argentina</option>\n                  <option value=\"otroPais\">Bolivia</option>\n                  <option value=\"otroPais\">Canada</option>\n                  <option value=\"otroPais\">Corea del Norte</option>\n                  <option value=\"otroPais\">China</option>\n                  <option value=\"otroPais\">Estados Unidos</option>\n                  <option value=\"otroPais\">Honkg Kong</option>\n                </Select>\n                <LeyendaError>Campo tipo persona es requerido</LeyendaError>\n              </div>\n\n              {getTipoPaisDiv()}\n              <br />\n\n              <br />\n\n              <div className=\"col-md-12 titulo-indicativo\">\n                <h4 className=\"subtitle-form\">\n                  Características del terminal móvil\n                </h4>\n                <p className=\"txt-obliga\">*Campos obligatorios</p>\n              </div>\n              <br />\n\n              <div>\n                <Label htmlFor=\"tipoDispositivo\">Tipo de Dispositivo*</Label>\n                <Select\n                  id=\"tipoDispositivo\"\n                  data-toggle=\"tooltip\"\n                  title=\"Seleccionar tipo dispositivo\"\n                  onClick={(event) => {\n                    // here set target value to state which is 0, 1, 2, 3\n                    setTipoDispositivo(event.target.value);\n                  }}\n                >\n                  <option value=\"\" selected hidden>\n                    Ej. Móvil\n                  </option>\n                  <option value=\"telefono\">Télefono Inteligente</option>\n                  <option value=\"computador\">Computador de Bolsillo</option>\n                  <option value=\"dispositivo\">Dispositivo IoT</option>\n                  <option value=\"modulo\">Módulo</option>\n                  <option value=\"reloj\">Reloj Inteligente</option>\n                  <option value=\"router\">Router</option>\n                  <option value=\"otro\">Otro ¿Cúal?</option>\n                </Select>\n                <LeyendaError>Campo tipo persona es requerido</LeyendaError>\n              </div>\n\n              {getTipoDispositivoDiv()}\n\n              <br />\n              {/*\n<ComponenteInput\n                estado={tipoDeDispositivo}\n                cambiarEstado={cambiarTipoDeDispositivo}\n                tipo=\"text\"\n                label=\"Tipo de Dispositivo *\"\n                placeholder=\"Ej: Télefono Inteligente\"\n                name=\"tipoDeDispositivo\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={marca}\n                cambiarEstado={cambiarMarca}\n                tipo=\"text\"\n                label=\"Marca *\"\n                placeholder=\"Ej: Apple\"\n                name=\"marca\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={nombreComercial}\n                cambiarEstado={cambiarNombreComercial}\n                tipo=\"text\"\n                label=\"Nombre Comercial *\"\n                placeholder=\"Ej: Serie 3\"\n                name=\"nombreComercial\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={modelo}\n                cambiarEstado={cambiarModelo}\n                tipo=\"text\"\n                label=\"Modelo *\"\n                placeholder=\"Ej: Once\"\n                name=\"modelo\"\n                leyendaError=\"Campo es requerido, solo se aceptan letras\"\n                expresionRegular={expresiones.nombre}\n              />\n\n              <ComponenteInput\n                estado={fabricante}\n                cambiarEstado={cambiarFabricante}\n                tipo=\"text\"\n                label=\"Fabricante\"\n                placeholder=\"Ej: Huawei\"\n                name=\"fabricante\"\n                leyendaError=\"Campo requerido\"\n                expresionRegular={expresiones.apellido2}\n              />\n              */}\n            </Formulario>\n            <br />\n            <br />\n            <div className=\"col-md-12 titulo-indicativo\">\n              <h4 className=\"subtitle-form\">TAC *</h4>\n              <p className=\"txt-obliga\">\n                En esta sección podrá agregar múltiples TAC para el modelo de\n                terminal que está homologando. Tenga en cuenta que la CRC\n                validará los TAC registrados en la solicitud ante la base de\n                datos de la GSMA.\n              </p>\n              <br />\n              <div>\n                <span class=\"button-carga-principal btn-file\">\n                  Agregar TAC\n                  <input type=\"file\" />\n                </span>\n              </div>\n              <br />\n              <br />\n            </div>\n            <div class=\"tabla\">\n              <p class=\"titulo-tabla\">Listado de TAC</p>\n              <table class=\"rwd-table\">\n                <tr>\n                  <th>TAC</th>\n                  <th>Acciones</th>\n                </tr>\n                <tr>\n                  <td data-th=\"datos\">Sin datos</td>\n                  <td data-th=\"accion\"> ... </td>\n                </tr>\n              </table>\n            </div>\n            <br />\n            <div className=\"col-md-12 titulo-indicativo\">\n              <h4 className=\"subtitle-form\"> Archivos Adjuntos</h4>\n              <p className=\"txt-obliga\">Por favor tenga en cuenta:</p>\n              <p className=\"txt-obliga\">\n                ** El tamaño total de todos los archivos adjuntos no podrá ser\n                mayor a 30 MB.\n              </p>\n              <p className=\"txt-obliga\">\n                ** Formatos admitidos para archivos adjuntos: Pdf, Doc, Docx,\n                Xls, Xlsx, Gif, Png, Jpeg, Tif, Tiff, Zip y Rar\n              </p>\n              <br />\n\n              <div>\n                <DragArea />\n              </div>\n              <br />\n            </div>\n\n            <br />\n\n            <div className=\"col-md-12 titulo-indicativo\">\n              <h4 className=\"subtitle-form\">\n                Aviso de Términos y Autorización para el Tratamiento de Datos\n                Personales*\n              </h4>\n            </div>\n\n            <br />\n\n            <ContenedorTerminos>\n              <Label>\n                <input\n                  type=\"checkbox\"\n                  name=\"terminos\"\n                  id=\"terminos\"\n                  checked={terminos}\n                  onChange={onChangeTerminos}\n                />\n                <a\n                  className=\"aceptacionFormulario\"\n                  href=\"https://www.crcom.gov.co/uploads/images/files/Politica%20de%20Tratamiento%20Info%20Personal.pdf\"\n                  Target=\"_blank\"\n                >\n                  Acepto que he leido los Términos y condiciones *\n                </a>\n              </Label>\n              <br />\n              <Label>\n                <input\n                  type=\"checkbox\"\n                  name=\"autorizaDatos\"\n                  id=\"autorizaDatos\"\n                  checked={autorizaDatos}\n                  onChange={onChangeDatos}\n                />\n                <a\n                  className=\"aceptacionFormulario\"\n                  href=\"https://crcom.gov.co/sites/default/files/transparencia/contenido_multimedia/Politica_de_tratamiento_info_personal.pdf\"\n                  Target=\"_blank\"\n                >\n                  Autorizo el tratamiento de datos personales\n                </a>\n              </Label>\n            </ContenedorTerminos>\n            {formularioValido === false && (\n              <MensajeError>\n                <p>\n                  <FontAwesomeIcon icon={faExclamationTriangle} />\n                  <b>Error: </b> Por favor rellena el formulario correctamente.\n                </p>\n              </MensajeError>\n            )}\n            <br />\n            <br />\n            <h4 className=\"subtitle-form\">Verificación de Seguridad *</h4>\n            <br />\n            <ReCAPTCHA\n              ref={captcha}\n              sitekey=\"6Lc9VDIeAAAAAHHQA1wEjx1FKlTy9uWIrZKGwwvN\"\n              onChange={onChange}\n            />\n\n            <br />\n            <br />\n            <Boton\n              id=\"envio\"\n              type=\"submit\"\n              onClick={() => cambiarEstadoModal(!estadoModal)}\n            >\n              REGISTRAR SOLICITUD\n            </Boton>\n            {formularioValido === true && (\n              <MensajeExito id=\"msjexito\">\n                <p>\n                  <FontAwesomeIcon icon={faCheckCircle} />\n                  <b>Exitosa: </b>Su solicitud se ha registrado\n                  satisfactoriamente\n                </p>\n              </MensajeExito>\n            )}\n          </div>\n\n          <div className=\"col-md-1\"></div>\n\n          <div className=\"col-md-3 p-0\">\n            <aside className=\"aside\">\n              <br />\n              <br />\n              <BotonTutoriales />\n              <BotonDeDudas />\n              <br />\n              <br />\n              <CalificacionExperiencia />\n              <br />\n              <br />\n              <BotonInicio />\n            </aside>\n          </div>\n        </div>\n        {/* END CONTAINER */}\n      </div>\n      <CalificaExperienciaFooter />\n      <Footer />\n      <FooterGov />\n\n      {/* MODAL DE ACEPTAR FORMULARIO */}\n      <Modal\n        estado={estadoModal}\n        cambiarEstado={cambiarEstadoModal}\n        titulo=\"\"\n        mostrarHeader={true}\n        mostrarOverlay={true}\n        posicionModal={\"start\"}\n        padding={\"20px\"}\n      >\n        {!usuarioValido && (\n          <Contenido>\n            <form>\n              <h1>Confirmación</h1>\n              <h6>¿Estas seguro de registrar la información?</h6>\n              <br />\n\n              \n              <ContenedorBotones>\n                <Botoncito type=\"submit\">\n                  <Link to=\"/EstadoSolicitud\" className=\"irTramite\">\n                    ACEPTAR\n                  </Link>\n                </Botoncito>\n                <br />\n                <Botoncito2 onClick={() => cambiarEstadoModal(!estadoModal)}>\n                  CANCELAR\n                </Botoncito2>\n                </ContenedorBotones>\n            </form>\n          </Contenido>\n        )}\n        {usuarioValido && (\n          <div>\n            <h1>Bienvenido</h1>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default FormularioSolicitud;\n/*\nconst Boton = styled.button`\n  border-radius: 20px;\n  border_radius: 100px;\n  border: none;\n  background: #1766dc;\n  cursor: pointer;\n  display: block;\n  font: normal bold 15px/5px \"Works Sans\", sans-serif;\n  padding: 10px 30px;\n  transition: 0.3s ease all;\n\n  a {\n    color: #ffff;\n  }\n\n  &:hover {\n    background: #004884;\n  }\n`;\n*/\n\n/*\n<ContenedorBotonCentrado className=\"recaptcha\">\n                <ReCAPTCHA\n                  ref={captcha}\n                  sitekey=\"6Lc9VDIeAAAAAHHQA1wEjx1FKlTy9uWIrZKGwwvN\"\n                  onChange={onChange}\n                />\n              </ContenedorBotonCentrado>\n\n              {captchaValido === false && (\n                <div className=\"error-captcha\">Por favor acepta el captcha</div>\n              )}\n*/\n\nconst Botoncito = styled.button`\n  background: #3366CC;\n  border-radius: 15px;\n  border: 2px solid #F6F8F9;\n  color: #FFFF!important;\n  cursor: pointer;\n  display: block;\n  font: normal 500 15px \"Work Sans\", sans-serif;\n  transition: 0.3s ease all;\n  padding: 15px 10px 15px 10px;\n  width: 40%;\n\n  &:hover {\n    background-color: #F6F8F9!important;\n  }\n`;\n\nconst Botoncito2 = styled.button`\n  background: #FFFF;\n  border-radius: 15px;\n  border: 2px solid #3366cc;\n  color: #3366cc;\n  cursor: pointer;\n  display: block;\n  font: normal 500 15px \"Work Sans\", sans-serif;\n  transition: 0.3s ease all;\n  padding: 15px 10px 15px 10px;\n  width: 40%;\n\n  &:hover {\n    background: #0066ff;\n    color: #ffff;\n  }\n`;\n\nconst Contenido = styled.div`\n  display: flex;\n  padding: 20px;\n  flex-direction: column;\n  max-height: calc(100vh - 210px);\n  overflow-y: auto;\n\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n  }\n\n  h1 {\n    color: #13386d;\n    font: normal 600 18px/10px \"Montserrat\", sans-serif;\n    line-height: 1.5;\n    margin-bottom: 10px;\n  }\n\n  h6 {\n    color: #4b4b4b;\n    font: normal normal 1rem/10px \"Works Sans\", sans-serif;\n    margin: 0;\n    text-align: left;\n    line-height: 1.5;\n  }\n\n  a {\n    font: normal normal 1rem/10px \"Works Sans\", sans-serif;\n  }\n`;\n\nconst ContenedorBotones = styled.div`\n  padding: 0px;\n  display: flex;\n  float: left;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n"]},"metadata":{},"sourceType":"module"}